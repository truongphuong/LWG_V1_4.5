<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.DataAccess</name>
    </assembly>
    <members>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider">
            <summary>
            Represents a tax provider
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBEntity">
            <summary>
            Provides a base class for database entities
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.#ctor">
            <summary>
            Creates a new instance of the tax provider class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.TaxProviderId">
            <summary>
            Gets or sets the tax provider identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProvider.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod">
            <summary>
            Represents a shipping rate computation method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.#ctor">
            <summary>
            Creates a new instance of the DBShippingRateComputationMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ShippingRateComputationMethodId">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.IsActive">
            <summary>
            Gets or sets a value indicating whether the method is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryCollection">
            <summary>
            Represents a ShippingByWeightAndCountry collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBEntityCollection`1">
            <summary>
            Provides a base class for database entity collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct">
            <summary>
            Represents a related product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.#ctor">
            <summary>
            Creates a new instance of the DBRelatedProduct class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.RelatedProductId">
            <summary>
            Gets or sets the related product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.ProductId1">
            <summary>
            Gets or sets the first product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.ProductId2">
            <summary>
            Gets or sets the second product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProduct.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodCollection">
            <summary>
            Represents a payment method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer">
            <summary>
            Represents a manufacturer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.#ctor">
            <summary>
            Creates a new instance of the DBManufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.ManufacturerId">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.TemplateId">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PictureId">
            <summary>
            Gets or sets the parent picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturer.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceCollection">
            <summary>
            Represents a state/province collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageCollection">
            <summary>
            Represents a language collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider">
            <summary>
            Acts as a base class for deriving custom customer provider
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.BaseDBProvider">
            <summary>
            Provides a base class for abstract provider classes
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteAddress(System.Int32)">
            <summary>
            Deletes an address by address identifier 
            </summary>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAddressById(System.Int32)">
            <summary>
            Gets an address by address identifier
            </summary>
            <param name="addressId">Address identifier</param>
            <returns>Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAddressesByCustomerId(System.Int32,System.Boolean)">
            <summary>
            Gets a collection of addresses by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="getBillingAddresses">Gets or sets a value indicating whether the addresses are billing or shipping</param>
            <returns>A collection of addresses</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertAddress(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts an address
            </summary>
            <param name="customerId">The customer identifier</param>
            <param name="isBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateAddress(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the address
            </summary>
            <param name="addressId">The address identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="isBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all customers
            </summary>
            <param name="registrationFrom">Customer registration from; null to load all customers</param>
            <param name="registrationTo">Customer registration to; null to load all customers</param>
            <param name="email">Customer Email</param>
            <param name="username">Customer username</param>
            <param name="dontLoadGuestCustomers">A value indicating whether to don't load guest customers</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAffiliatedCustomers(System.Int32)">
            <summary>
            Gets all customers by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomersByCustomerRoleId(System.Int32,System.Boolean)">
            <summary>
            Gets all customers by customer role id
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByEmail(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="email">Customer Email</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByUsername(System.String)">
            <summary>
            Gets a customer by username
            </summary>
            <param name="username">Customer username</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerById(System.Int32)">
            <summary>
            Gets a customer
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerByGuid(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="customerGuid">Customer GUID</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddCustomer(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a customer
            </summary>
            <param name="customerGuid">The customer identifier</param>
            <param name="email">The email</param>
            <param name="username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="billingAddressId">The billing address identifier</param>
            <param name="shippingAddressId">The shipping address identifier</param>
            <param name="lastPaymentMethodId">The last payment method identifier</param>
            <param name="lastAppliedCouponCode">The last applied coupon code</param>
            <param name="giftCardCouponCodes">The applied gift card coupon code</param>
            <param name="checkoutAttributes">The selected checkout attributes</param>
            <param name="languageId">The language identifier</param>
            <param name="currencyId">The currency identifier</param>
            <param name="taxDisplayTypeId">The tax display type identifier</param>
            <param name="isTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="isAdmin">A value indicating whether the customer is administrator</param>
            <param name="isGuest">A value indicating whether the customer is guest</param>
            <param name="isForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="totalForumPosts">A forum post count</param>
            <param name="signature">Signature</param>
            <param name="adminComment">Admin comment</param>
            <param name="active">A value indicating whether the customer is active</param>
            <param name="deleted">A value indicating whether the customer has been deleted</param>
            <param name="registrationDate">The date and time of customer registration</param>
            <param name="timeZoneId">The time zone identifier</param>
            <param name="avatarId">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomer(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Updates the customer
            </summary>
            <param name="customerId">The customer identifier</param>
            <param name="customerGuid">The customer identifier</param>
            <param name="email">The email</param>
            <param name="username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="billingAddressId">The billing address identifier</param>
            <param name="shippingAddressId">The shipping address identifier</param>
            <param name="lastPaymentMethodId">The last payment method identifier</param>
            <param name="lastAppliedCouponCode">The last applied coupon code</param>
            <param name="giftCardCouponCodes">The applied gift card coupon code</param>
            <param name="checkoutAttributes">The selected checkout attributes</param>
            <param name="languageId">The language identifier</param>
            <param name="currencyId">The currency identifier</param>
            <param name="taxDisplayTypeId">The tax display type identifier</param>
            <param name="isTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="isAdmin">A value indicating whether the customer is administrator</param>
            <param name="isGuest">A value indicating whether the customer is guest</param>
            <param name="isForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="totalForumPosts">A forum post count</param>
            <param name="signature">Signature</param>
            <param name="adminComment">Admin comment</param>
            <param name="active">A value indicating whether the customer is active</param>
            <param name="deleted">A value indicating whether the customer has been deleted</param>
            <param name="registrationDate">The date and time of customer registration</param>
            <param name="timeZoneId">The time zone identifier</param>
            <param name="avatarId">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetBestCustomersReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Get best customers
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="orderBy">1 - order by order total, 2 - order by number of orders</param>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerReportByLanguage">
            <summary>
            Get customer report by language
            </summary>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerReportByAttributeKey(System.String)">
            <summary>
            Get customer report by attribute key
            </summary>
            <param name="customerAttributeKey">Customer attribute key</param>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteCustomerAttribute(System.Int32)">
            <summary>
            Deletes a customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerAttributeById(System.Int32)">
            <summary>
            Gets a customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerAttributesByCustomerId(System.Int32)">
            <summary>
            Gets a collection of customer attributes by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Customer attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerAttribute(System.Int32,System.String,System.String)">
            <summary>
            Inserts a customer attribute
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="key">An attribute key</param>
            <param name="value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerAttribute(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="key">An attribute key</param>
            <param name="value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRolesByCustomerId(System.Int32,System.Boolean)">
            <summary>
            Gets customer roles by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomerRoles(System.Boolean)">
            <summary>
            Gets all customer roles
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRoleById(System.Int32)">
            <summary>
            Gets a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerRole(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a customer role
            </summary>
            <param name="name">The customer role name</param>
            <param name="freeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="taxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="active">A value indicating whether the customer role is active</param>
            <param name="deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerRole(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the customer role
            </summary>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="name">The customer role name</param>
            <param name="freeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="taxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="active">A value indicating whether the customer role is active</param>
            <param name="deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddCustomerToRole(System.Int32,System.Int32)">
            <summary>
            Adds a customer to role
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.RemoveCustomerFromRole(System.Int32,System.Int32)">
            <summary>
            Removes a customer from role
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.AddDiscountToCustomerRole(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.RemoveDiscountFromCustomerRole(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerRolesByDiscountId(System.Int32,System.Boolean)">
            <summary>
            Gets a customer roles assigned to discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer roles</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerSessionByGuid(System.Guid)">
            <summary>
            Gets a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetCustomerSessionByCustomerId(System.Int32)">
            <summary>
            Gets a customer session by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteCustomerSession(System.Guid)">
            <summary>
            Deletes a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.DeleteExpiredCustomerSessions(System.DateTime)">
            <summary>
            Deletes all expired customer sessions
            </summary>
            <param name="olderThan">Older than date and time</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetAllCustomerSessions">
            <summary>
            Gets all customer sessions
            </summary>
            <returns>Customer session collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.InsertCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <param name="customerId">Customer identifier</param>
            <param name="lastAccessed">The last accessed date and time</param>
            <param name="isExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Updates the customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <param name="customerId">Customer identifier</param>
            <param name="lastAccessed">The last accessed date and time</param>
            <param name="isExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.GetRegisteredCustomersReport(System.DateTime)">
            <summary>
            Gets a report of customers registered from "dateTime" until today
            </summary>
            <param name="dateFrom">Customer registration date from</param>
            <returns>Customer count</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerProvider.UpdateCustomerDealer(System.Int32,System.String)">
            <summary>
            Update a Customer dealerID 
            </summary>
            <param name="customerId">customer id</param>
            <param name="dealerId">dearler id</param>
            <returns>Customer count</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork">
            <summary>
            Network IP address range implementation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.BannedIpNetworkId">
            <summary>
            Gets or sets the IP address unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.StartAddress">
            <summary>
            Gets or sets the starting IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.EndAddress">
            <summary>
            Gets or sets the ending IP address in the range
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.Comment">
            <summary>
            Gets or sets a reason why the IP network was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.IpException">
            <summary>
            Gets or sets a list of exceptions in the IP Network
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetwork.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombinationCollection">
            <summary>
            Represents a product variant attribute combination collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory">
            <summary>
            Represents a gift card usage history entry
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.#ctor">
            <summary>
            Creates a new instance of the DBGiftCardUsageHistory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.GiftCardUsageHistoryId">
            <summary>
            Gets or sets the gift card usage history entry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.GiftCardId">
            <summary>
            Gets or sets the gift card identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.UsedValue">
            <summary>
            Gets or sets the used value (amount)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.UsedValueInCustomerCurrency">
            <summary>
            Gets or sets the used value (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1">
            <summary>
            DB provider collection
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Adds a provider to the collection.
            </summary>
            <param name="provider">The provider to be added.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the contents of the collection to the given array starting at the specified index.
            </summary>
            <param name="array">The array to copy the elements of the collection to.</param>
            <param name="index">The index of the collection item at which to start the copying process.</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderCollection`1.Item(System.String)">
            <summary>
            Gets the provider with the specified name.
            </summary>
            <param name="name">The key by which the provider is identified.</param>
            <returns>The provider with the specified name.</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession">
            <summary>
            Represents a customer session
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.#ctor">
            <summary>
            Creates a new instance of the DBCustomerSession class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.CustomerSessionGuid">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.LastAccessed">
            <summary>
            Gets or sets the last accessed date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSession.IsExpired">
            <summary>
            Gets or sets a value indicating whether the customer session is expired
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroupCollection">
            <summary>
            Represents a forum group collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessageCollection">
            <summary>
            Represents a private massage collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost">
            <summary>
            Represents a blog post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.#ctor">
            <summary>
            Creates a new instance of the DBBlogPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostId">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostTitle">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostBody">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.BlogPostAllowComments">
            <summary>
            Gets or sets a value indicating whether the blog post comments are allowed 
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.CreatedById">
            <summary>
            Gets or sets the user identifier who created the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogTypeCollection">
            <summary>
            Represents an activity log type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplateCollection">
            <summary>
            Represents a manufacturer template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodCollection">
            <summary>
            Represents a shipping method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType">
            <summary>
            Represents a discount type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.#ctor">
            <summary>
            Creates a new instance of the DBDiscountType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.DiscountTypeId">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview">
            <summary>
            Represents a product review
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.#ctor">
            <summary>
            Creates a new instance of the DBProductReview class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ProductReviewId">
            <summary>
            Gets or sets the product review identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.ReviewText">
            <summary>
            Gets or sets the review text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.Rating">
            <summary>
            Review rating
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.HelpfulYesTotal">
            <summary>
            Review helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.HelpfulNoTotal">
            <summary>
            Review not helpful votes total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.IsApproved">
            <summary>
            Gets or sets a value indicating whether the product review is approved
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductReview.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant">
            <summary>
            Represents an order product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.#ctor">
            <summary>
            Creates a new instance of the DBOrderProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.OrderProductVariantId">
            <summary>
            Gets or sets the order product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.OrderProductVariantGuid">
            <summary>
            Gets or sets the order product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceInclTax">
            <summary>
            Gets or sets the unit price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceExclTax">
            <summary>
            Gets or sets the unit price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceInclTax">
            <summary>
            Gets or sets the price in primary store currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceExclTax">
            <summary>
            Gets or sets the price in primary store currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.UnitPriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the unit price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.PriceExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the price in customer currency (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.AttributeDescription">
            <summary>
            Gets or sets the attribute description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.AttributesXml">
            <summary>
            Gets or sets the product variant attributes in XML format
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DiscountAmountInclTax">
            <summary>
            Gets or sets the discount amount (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DiscountAmountExclTax">
            <summary>
            Gets or sets the discount amount (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.DownloadCount">
            <summary>
            Gets or sets the download count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.IsDownloadActivated">
            <summary>
            Gets or sets a value indicating whether download is activated
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariant.LicenseDownloadId">
            <summary>
            Gets or sets a license download identifier (in case this is a downloadable product)
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote">
            <summary>
            Represents an order note
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.#ctor">
            <summary>
            Creates a new instance of the DBOrderNote class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.OrderNoteId">
            <summary>
            Gets or sets the order note identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.Note">
            <summary>
            Gets or sets the note
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.DisplayToCustomer">
            <summary>
            Gets or sets a value indicating whether the customer can see a note
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNote.CreatedOn">
            <summary>
            Gets or sets the date and time of order note creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionCollection">
            <summary>
            Represents a specification attribute option collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBPricelistCollection">
            <summary>
            Represents a pricelist collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBTierPriceCollection">
            <summary>
            Represents a tier price collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueCollection">
            <summary>
            Represents a checkout attribute value collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopicCollection">
            <summary>
            Represents a localized topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopicCollection">
            <summary>
            Represents a forum topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage">
            <summary>
            Represents a private message
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.#ctor">
            <summary>
            Creates a new instance of the DBPrivateMessage class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.PrivateMessageId">
            <summary>
            Gets or sets the private message identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.FromUserId">
            <summary>
            Gets or sets the user identifier who sent the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.ToUserId">
            <summary>
            Gets or sets the user identifier who should receive the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsRead">
            <summary>
            Gets or sets a value indivating whether message is read
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsDeletedByAuthor">
            <summary>
            Gets or sets a value indivating whether message is deleted by author
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.IsDeletedByRecipient">
            <summary>
            Gets or sets a value indivating whether message is deleted by recipient
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBPrivateMessage.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType">
            <summary>
            Represents an activity log type record
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType.#ctor">
            <summary>
            Creates a new instance of the DBActivityLogType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType.ActivityLogTypeId">
            <summary>
            Gets or sets the activity log type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType.Name">
            <summary>
            Gets or sets the display name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogType.Enabled">
            <summary>
            Gets or sets a value indicating whether the activity log type is enabled
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseCollection">
            <summary>
            Represents a warehouse collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightCollection">
            <summary>
            Represents a ShippingByWeight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry">
            <summary>
            Represents a ShippingByWeightAndCountry
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.#ctor">
            <summary>
            Creates a new instance of the DBShippingByWeightAndCountry class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingByWeightAndCountryId">
            <summary>
            Gets or sets the ShippingByWeightAndCountry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingMethodId">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountry.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductType">
            <summary>
            Represents a product type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.#ctor">
            <summary>
            Creates a new instance of the DBProductType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.ProductTypeId">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductType.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusCollection">
            <summary>
            Represents a payment status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage">
            <summary>
            Represents a language
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.#ctor">
            <summary>
            Creates a new instance of the DBLanguage class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.LanguageCulture">
            <summary>
            Gets or sets the language culture
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.FlagImageFileName">
            <summary>
            Gets or sets the flag image file name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.Published">
            <summary>
            Gets or sets a value indicating whether the language is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguage.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider">
            <summary>
            Acts as a base class for deriving custom language provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.DeleteLanguage(System.Int32)">
            <summary>
            Deletes a language
            </summary>
            <param name="languageId">Language identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.GetAllLanguages(System.Boolean)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.GetLanguageById(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.InsertLanguage(System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a language
            </summary>
            <param name="name">The name</param>
            <param name="languageCulture">The language culture</param>
            <param name="flagImageFileName">The flag image file name</param>
            <param name="published">A value indicating whether the language is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBLanguageProvider.UpdateLanguage(System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates a language
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="name">The name</param>
            <param name="languageCulture">The language culture</param>
            <param name="flagImageFileName">The flag image file name</param>
            <param name="published">A value indicating whether the language is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption">
            <summary>
            Represents a specification attribute option
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttributeOption class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.SpecificationAttributeOptionId">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.SpecificationAttributeId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOption.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.DBProviderSection">
            <summary>
            This class provides a way to programmatically access and modify the provider section of a configuration file. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderSection.#cctor">
            <summary>
            Initializes a new instance of the DBProviderConfiguration class.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.DefaultProvider">
            <summary>
            Gets or sets the name of the default provider
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSection.Providers">
            <summary>
            Gets a ProviderSettingsCollection object of ProviderSettings elements.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerSessionCollection">
            <summary>
            Represents a customer session collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress">
            <summary>
            Represents an address
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.#ctor">
            <summary>
            Creates a new instance of the DBAddress class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.AddressId">
            <summary>
            Gets or sets the address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.IsBillingAddress">
            <summary>
            Gets or sets a value indicating whether the address is billing or shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.StateProvinceId">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddress.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplateCollection">
            <summary>
            Represents a product template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusCollection">
            <summary>
            Represents a shipping status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant">
            <summary>
            Represents a product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.#ctor">
            <summary>
            Creates a new instance of the DBProductVariant class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.SKU">
            <summary>
            Gets or sets the SKU
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ManufacturerPartNumber">
            <summary>
            Gets or sets the manufacturer part number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsGiftCard">
            <summary>
            Gets or sets a value indicating whether the product variant is gift card
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsDownload">
            <summary>
            Gets or sets a value indicating whether the product variant is download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DownloadId">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.UnlimitedDownloads">
            <summary>
            Gets or sets a value indicating whether this downloadable product can be downloaded unlimited number of times
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MaxNumberOfDownloads">
            <summary>
            Gets or sets the maximum number of downloads
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DownloadExpirationDays">
            <summary>
            Gets or sets the number of days during customers keeps access to the file.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DownloadActivationType">
            <summary>
            Gets or sets the download activation type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.HasSampleDownload">
            <summary>
            Gets or sets a value indicating whether the product variant has a sample download file
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.SampleDownloadId">
            <summary>
            Gets or sets the sample download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.HasUserAgreement">
            <summary>
            Gets or sets a value indicating whether the product has user agreement
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.UserAgreementText">
            <summary>
            Gets or sets the text of license agreement
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsRecurring">
            <summary>
            Gets or sets a value indicating whether the product variant is recurring
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.CycleLength">
            <summary>
            Gets or sets the cycle length
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.CyclePeriod">
            <summary>
            Gets or sets the cycle period
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.TotalCycles">
            <summary>
            Gets or sets the total cycles
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsShipEnabled">
            <summary>
            Gets or sets a value indicating whether the entity is ship enabled
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsFreeShipping">
            <summary>
            Gets or sets a value indicating whether the entity is free shipping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AdditionalShippingCharge">
            <summary>
            Gets or sets the additional shipping charge
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the product variant is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ManageInventory">
            <summary>
            Gets or sets a value indicating how to manage inventory
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DisplayStockAvailability">
            <summary>
            Gets or sets a value indicating whether to display stock availability
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MinStockQuantity">
            <summary>
            Gets or sets the minimum stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.LowStockActivityId">
            <summary>
            Gets or sets the low stock activity identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.NotifyAdminForQuantityBelow">
            <summary>
            Gets or sets the quantity when admin should be notified
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AllowOutOfStockOrders">
            <summary>
            Gets or sets a value indicating whether to allow orders when out of stock
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OrderMinimumQuantity">
            <summary>
            Gets or sets the order minimum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OrderMaximumQuantity">
            <summary>
            Gets or sets the order maximum quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DisableBuyButton">
            <summary>
            Gets or sets a value indicating whether to disable buy button
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.OldPrice">
            <summary>
            Gets or sets the old price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.ProductCost">
            <summary>
            Gets or sets the product cost
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.CustomerEntersPrice">
            <summary>
            Gets or sets a value indicating whether a customer enters price
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MinimumCustomerEnteredPrice">
            <summary>
            Gets or sets the minimum price entered by a customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.MaximumCustomerEnteredPrice">
            <summary>
            Gets or sets the maximum price entered by a customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Weight">
            <summary>
            Gets or sets the weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Length">
            <summary>
            Gets or sets the length
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AvailableStartDateTime">
            <summary>
            Gets or sets the available start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.AvailableEndDateTime">
            <summary>
            Gets or sets the shipped end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariant.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplateCollection">
            <summary>
            Represents a message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPicture">
            <summary>
            Represents a picture
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.#ctor">
            <summary>
            Creates a new instance of the DBPicture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.PictureBinary">
            <summary>
            Gets or sets the picture binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.Extension">
            <summary>
            Gets or sets the picture extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBPicture.IsNew">
            <summary>
            Gets or sets a value indicating whether the picture is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency">
            <summary>
            Represents a currency
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.#ctor">
            <summary>
            Creates a new instance of the DBCurrency class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CurrencyId">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CurrencyCode">
            <summary>
            Gets or sets the currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Rate">
            <summary>
            Gets or sets the rate
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.DisplayLocale">
            <summary>
            Gets or sets the display locale
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CustomFormatting">
            <summary>
            Gets or sets the custom formatting
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrency.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider">
            <summary>
            Acts as a base class for deriving custom warehouse provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.GetAllWarehouses">
            <summary>
            Gets all warehouses
            </summary>
            <returns>Warehouse collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.GetWarehouseById(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="warehouseId">The warehouse identifier</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.InsertWarehouse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a warehouse
            </summary>
            <param name="name">The name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouseProvider.UpdateWarehouse(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the warehouse
            </summary>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="name">The name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider">
            <summary>
            Acts as a base class for deriving custom manufacturer provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetAllManufacturers(System.Boolean,System.Int32)">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetManufacturerById(System.Int32,System.Int32)">
            <summary>
            Gets a manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.InsertManufacturer(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="pictureId">The parent picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.UpdateManufacturer(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="pictureId">The parent picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetManufacturerLocalizedById(System.Int32)">
            <summary>
            Gets localized manufacturer by id
            </summary>
            <param name="manufacturerLocalizedId">Localized manufacturer identifier</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetManufacturerLocalizedByManufacturerIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized manufacturer by manufacturer id and language id
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.InsertManufacturerLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se name text</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.UpdateManufacturerLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized manufacturer
            </summary>
            <param name="manufacturerLocalizedId">Localized manufacturer identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se name text</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.DeleteProductManufacturer(System.Int32)">
            <summary>
            Deletes a product manufacturer mapping
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturersByManufacturerId(System.Int32,System.Boolean)">
            <summary>
            Gets product product manufacturer collection
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturersByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.GetProductManufacturerById(System.Int32)">
            <summary>
            Gets a product manufacturer mapping 
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifier</param>
            <returns>Product manufacturer mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.InsertProductManufacturer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product manufacturer mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerProvider.UpdateProductManufacturer(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product manufacturer mapping
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider">
            <summary>
            Acts as a base class for deriving custom locale string resource provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.DeleteLocaleStringResource(System.Int32)">
            <summary>
            Deletes a locale string resource
            </summary>
            <param name="localeStringResourceId">Locale string resource identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.GetLocaleStringResourceById(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="localeStringResourceId">Locale string resource identifier</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.GetAllResourcesByLanguageId(System.Int32)">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Locale string resource collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.InsertLocaleStringResource(System.Int32,System.String,System.String)">
            <summary>
            Inserts a locale string resource
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="resourceName">The resource name</param>
            <param name="resourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.UpdateLocaleStringResource(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the locale string resource
            </summary>
            <param name="localeStringResourceId">The locale string resource identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="resourceName">The resource name</param>
            <param name="resourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.GetAllLocaleStringResourcesAsXml(System.Int32)">
            <summary>
            Loads all locale string resources as XML
            </summary>
            <param name="languageId">The Language identifier</param>
            <returns>XML</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceProvider.InsertAllLocaleStringResourcesFromXml(System.Int32,System.String)">
            <summary>
            Inserts all locale string resources from XML
            </summary>
            <param name="languageId">The Language identifier</param>
            <param name="xml">The XML package</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistoryCollection">
            <summary>
            Represents a recurring payment history collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerCollection">
            <summary>
            Represents a customer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttributeCollection">
            <summary>
            Represents a customer attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider">
            <summary>
            Acts as a base class for deriving custom topic provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="topicId">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetTopicById(System.Int32)">
            <summary>
            Gets a topic by template identifier
            </summary>
            <param name="topicId">Topic identifier</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.InsertTopic(System.String)">
            <summary>
            Inserts a topic
            </summary>
            <param name="name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.UpdateTopic(System.Int32,System.String)">
            <summary>
            Updates the topic
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetAllTopics">
            <summary>
            Gets all topics
            </summary>
            <returns>Topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopicById(System.Int32)">
            <summary>
            Gets a localized topic by identifier
            </summary>
            <param name="localizedTopicId">Localized topic identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopic(System.Int32,System.Int32)">
            <summary>
            Gets a localized topic by parent topic identifier and language identifier
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetLocalizedTopic(System.String,System.Int32)">
            <summary>
            Gets a localized topic by name and language identifier
            </summary>
            <param name="name">Topic name</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.DeleteLocalizedTopic(System.Int32)">
            <summary>
            Deletes a localized topic
            </summary>
            <param name="localizedTopicId">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.GetAllLocalizedTopics(System.String)">
            <summary>
            Gets all localized topics
            </summary>
            <param name="topicName">Topic name</param>
            <returns>Localized topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.InsertLocalizedTopic(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Inserts a localized topic
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The title</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicProvider.UpdateLocalizedTopic(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Updates the localized topic
            </summary>
            <param name="topicLocalizedId">The localized topic identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The title</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <returns>Localized topic</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic">
            <summary>
            Represents a localized topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.#ctor">
            <summary>
            Creates a new instance of the DBLocalizedTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.TopicLocalizedId">
            <summary>
            Gets or sets the localized topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.TopicId">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBLocalizedTopic.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplateCollection">
            <summary>
            Represents a category temaplte collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirementCollection">
            <summary>
            Represents a discount requirement collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProduct">
            <summary>
            Represents a product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.#ctor">
            <summary>
            Creates a new instance of the DBProduct class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ShortDescription">
            <summary>
            Gets or sets the short description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.FullDescription">
            <summary>
            Gets or sets the full description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ProductTypeId">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.TemplateId">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.ShowOnHomePage">
            <summary>
            Gets or sets a value indicating whether to show the product on home page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AllowCustomerReviews">
            <summary>
            Gets or sets a value indicating whether the product allows customer reviews
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.AllowCustomerRatings">
            <summary>
            Gets or sets a value indicating whether the product allows customer ratings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.RatingSum">
            <summary>
            Gets or sets the rating sum
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.TotalRatingVotes">
            <summary>
            Gets or sets the total rating votes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.CreatedOn">
            <summary>
            Gets or sets the date and time of product creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProduct.UpdatedOn">
            <summary>
            Gets or sets the date and time of product update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight">
            <summary>
            Represents a measure weight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.#ctor">
            <summary>
            Creates a new instance of the DBMeasureWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.MeasureWeightId">
            <summary>
            Gets or sets the measure weight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.Ratio">
            <summary>
            Gets or sets the ratio
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeight.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerCollection">
            <summary>
            Represents a manufacturer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider">
            <summary>
            Acts as a base class for deriving custom news provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsById(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="newsId">The news identifier</param>
            <returns>News</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.DeleteNews(System.Int32)">
            <summary>
            Deletes a news
            </summary>
            <param name="newsId">The news identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetAllNews(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets news item collection
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.InsertNews(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a news item
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="title">The news title</param>
            <param name="shortText">The short text</param>
            <param name="fullText">The full text</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="allowComments">A value indicating whether the entity allows comments</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.UpdateNews(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the news item
            </summary>
            <param name="newsId">The news identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The news title</param>
            <param name="shortText">The short text</param>
            <param name="fullText">The full text</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="allowComments">A value indicating whether the entity allows comments</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsCommentById(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="newsCommentId">News comment identifer</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetNewsCommentsByNewsId(System.Int32)">
            <summary>
            Gets a news comment collection by news identifier
            </summary>
            <param name="newsId">The news identifier</param>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.DeleteNewsComment(System.Int32)">
            <summary>
            Deletes a news comment
            </summary>
            <param name="newsCommentId">The news comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.GetAllNewsComments">
            <summary>
            Gets all news comments
            </summary>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="newsId">The news identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The title</param>
            <param name="comment">The comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsProvider.UpdateNewsComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the news comment
            </summary>
            <param name="newsCommentId">The news comment identifier</param>
            <param name="newsId">The news identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The title</param>
            <param name="comment">The comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider">
            <summary>
            Acts as a base class for deriving custom download provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.GetDownloadById(System.Int32)">
            <summary>
            Gets a download
            </summary>
            <param name="downloadId">Download identifier</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.DeleteDownload(System.Int32)">
            <summary>
            Deletes a download
            </summary>
            <param name="downloadId">Download identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.InsertDownload(System.Boolean,System.String,System.Byte[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a download
            </summary>
            <param name="useDownloadUrl">The value indicating whether DownloadURL property should be used</param>
            <param name="downloadUrl">The download URL</param>
            <param name="downloadBinary">The download binary</param>
            <param name="contentType">The content type</param>
            <param name="filename">The filename of the download</param>
            <param name="extension">The extension</param>
            <param name="isNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadProvider.UpdateDownload(System.Int32,System.Boolean,System.String,System.Byte[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates the download
            </summary>
            <param name="downloadId">The download identifier</param>
            <param name="useDownloadUrl">The value indicating whether DownloadURL property should be used</param>
            <param name="downloadUrl">The download URL</param>
            <param name="downloadBinary">The download binary</param>
            <param name="contentType">The content type</param>
            <param name="filename">The filename of the download</param>
            <param name="extension">The extension</param>
            <param name="isNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerActionCollection">
            <summary>
            Represents a customer action collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBACLCollection">
            <summary>
            Represents an ACL collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized">
            <summary>
            Represents a localized specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttributeLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized.SpecificationAttributeLocalizedId">
            <summary>
            Gets or sets the localized specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized.SpecificationAttributeId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized">
            <summary>
            Represents a localized product
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.#ctor">
            <summary>
            Creates a new instance of the DBProductLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.ProductLocalizedId">
            <summary>
            Gets or sets the localized product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.ShortDescription">
            <summary>
            Gets or sets the short description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.FullDescription">
            <summary>
            Gets or sets the full description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductLocalized.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription">
            <summary>
            Represents DBNewsLetterSubscription entity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription.NewsLetterSubscriptionId">
            <summary>
            Gets or sets the newsletter subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription.NewsLetterSubscriptionGuid">
            <summary>
            Gets or sets the newsletter subscription GUID
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription.Email">
            <summary>
            Gets or sets the subcriber email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription.IsActive">
            <summary>
            Gets or sets a value indicating whether subscription is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscription.CreatedOn">
            <summary>
            Gets or sets the date and time when subscription was created
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.DBProviderSectionNameAttribute">
            <summary>
            Provider section name attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderSectionNameAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of DBProviderSectionNameAttribute 
            </summary>
            <param name="sectionName">The name of the provider configuration section</param>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderSectionNameAttribute.SectionName">
            <summary>
            Gets or sets the section name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopicCollection">
            <summary>
            Represents a topic collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollCollection">
            <summary>
            Represents a poll collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup">
            <summary>
            Represents a forum group
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.#ctor">
            <summary>
            Creates a new instance of the DBForumGroup class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.ForumGroupId">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumGroup.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplateCollection">
            <summary>
            Represents a localized message template collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResourceCollection">
            <summary>
            Represents a locale string resource collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider">
            <summary>
            Acts as a base class for deriving custom shipping status provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider.GetShippingStatusById(System.Int32)">
            <summary>
            Gets a shipping status by identifier
            </summary>
            <param name="shippingStatusId">Shipping status identifier</param>
            <returns>Shipping status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatusProvider.GetAllShippingStatuses">
            <summary>
            Gets all shipping statuses
            </summary>
            <returns>Shipping status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider">
            <summary>
            Acts as a base class for deriving custom shipping method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.DeleteShippingMethod(System.Int32)">
            <summary>
            Deletes a shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.GetShippingMethodById(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.GetAllShippingMethods(System.Nullable{System.Int32})">
            <summary>
            Gets all shipping methods
            </summary>
            <param name="filterByCountryId">The country indentifier</param>
            <returns>Shipping method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.InsertShippingMethod(System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping method
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.UpdateShippingMethod(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.InsertShippingMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Inserts shipping method country mapping
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.DoesShippingMethodCountryMappingExist(System.Int32,System.Int32)">
            <summary>
            Checking whether the shipping method country mapping exists
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>True if mapping exist, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethodProvider.DeleteShippingMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Deletes shipping method country mapping
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider">
            <summary>
            Acts as a base class for deriving custom template provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteCategoryTemplate(System.Int32)">
            <summary>
            Deletes a category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllCategoryTemplates">
            <summary>
            Gets all category templates
            </summary>
            <returns>Category template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetCategoryTemplateById(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertCategoryTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a category template
            </summary>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateCategoryTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteManufacturerTemplate(System.Int32)">
            <summary>
            Deletes a manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllManufacturerTemplates">
            <summary>
            Gets all manufacturer templates
            </summary>
            <returns>Manufacturer template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetManufacturerTemplateById(System.Int32)">
            <summary>
            Gets a manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifier</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertManufacturerTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer template
            </summary>
            <param name="name">The manufacturer template identifier</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateManufacturerTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifer</param>
            <param name="name">The manufacturer template identifier</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.DeleteProductTemplate(System.Int32)">
            <summary>
            Deletes a product template
            </summary>
            <param name="productTemplateId">Product template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetAllProductTemplates">
            <summary>
            Gets all product templates
            </summary>
            <returns>Product template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.GetProductTemplateById(System.Int32)">
            <summary>
            Gets a product template
            </summary>
            <param name="productTemplateId">Product template identifier</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.InsertProductTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product template
            </summary>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBTemplateProvider.UpdateProductTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product template
            </summary>
            <param name="productTemplateId">The product template identifier</param>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeCollection">
            <summary>
            Represents a checkout attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory">
            <summary>
            Represents a recurring payment history
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory.#ctor">
            <summary>
            Creates a new instance of the DBRecurringPaymentHistory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory.RecurringPaymentHistoryId">
            <summary>
            Gets or sets the recurring payment history identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory.RecurringPaymentId">
            <summary>
            Gets or sets the recurring payment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentHistory.CreatedOn">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardUsageHistoryCollection">
            <summary>
            Represents a gift card usage history collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswerCollection">
            <summary>
            Represents a poll answer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment">
            <summary>
            Represents a news comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.#ctor">
            <summary>
            Creates a new instance of the DBNewsComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.NewsCommentId">
            <summary>
            Gets or sets the news comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.NewsId">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.Comment">
            <summary>
            Gets or sets the comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting">
            <summary>
            Represents a setting
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.#ctor">
            <summary>
            Creates a new instance of the DBSetting class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.SettingId">
            <summary>
            Gets or sets the setting identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSetting.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized">
            <summary>
            Represents a localized category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.#ctor">
            <summary>
            Creates a new instance of the DBCategoryLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.CategoryLocalizedId">
            <summary>
            Gets or sets the localized category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.CategoryId">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryLocalized.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryCollection">
            <summary>
            Represents a tax category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute">
            <summary>
            Represents a product attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.ProductAttributeId">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttribute.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownloadCollection">
            <summary>
            Represents a download collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider">
            <summary>
            Acts as a base class for deriving custom currency provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.DeleteCurrency(System.Int32)">
            <summary>
            Deletes currency
            </summary>
            <param name="currencyId">Currency identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.GetCurrencyById(System.Int32)">
            <summary>
            Gets a currency
            </summary>
            <param name="currencyId">Currency identifier</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.GetAllCurrencies(System.Boolean)">
            <summary>
            Gets all currencies
            </summary>
            <returns>Currency collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.InsertCurrency(System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a currency
            </summary>
            <param name="name">The name</param>
            <param name="currencyCode">The currency code</param>
            <param name="rate">The rate</param>
            <param name="displayLocale">The display locale</param>
            <param name="customFormatting">The custom formatting</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyProvider.UpdateCurrency(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the currency
            </summary>
            <param name="currencyId">Currency identifier</param>
            <param name="name">The name</param>
            <param name="currencyCode">The currency code</param>
            <param name="rate">The rate</param>
            <param name="displayLocale">The display locale</param>
            <param name="customFormatting">The custom formatting</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized">
            <summary>
            Represents a localized product attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.#ctor">
            <summary>
            Creates a new instance of the DBProductAttributeLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.ProductAttributeLocalizedId">
            <summary>
            Gets or sets the localized product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.ProductAttributeId">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeLocalized.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized">
            <summary>
            Represents a localized product variant attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttributeValueLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized.ProductVariantAttributeValueLocalizedId">
            <summary>
            Gets or sets the localized product variant attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized.ProductVariantAttributeValueId">
            <summary>
            Gets or sets the product variant attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine">
            <summary>
            Represents a best sellers report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.#ctor">
            <summary>
            Creates a new instance of the DBBestSellersReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.SalesTotalCount">
            <summary>
            Gets or sets the total count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBBestSellersReportLine.SalesTotalAmount">
            <summary>
            Gets or sets the total amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryCollection">
            <summary>
            Represents a category collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider">
            <summary>
            Acts as a base class for deriving custom customer activity provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.InsertActivityType(System.String,System.String,System.Boolean)">
            <summary>
            Inserts an activity log type item
            </summary>
            <param name="systemKeyword">The system keyword</param>
            <param name="name">The display name</param>
            <param name="enabled">Value indicating whether the activity log type is enabled</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.UpdateActivityType(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Updates an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="name">The display name</param>
            <param name="enabled">Value indicating whether the activity log type is enabled</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.DeleteActivityType(System.Int32)">
            <summary>
            Deletes an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.GetAllActivityTypes">
            <summary>
            Gets all activity log type items
            </summary>
            <returns>Activity log type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.GetActivityTypeById(System.Int32)">
            <summary>
            Gets an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.InsertActivity(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an activity log item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="comment">The activity comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.UpdateActivity(System.Int32,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates an activity log 
            </summary>
            <param name="activityLogId">Activity log identifier</param>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="comment">The activity comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.DeleteActivity(System.Int32)">
            <summary>
            Deletes an activity log item
            </summary>
            <param name="activityLogId">Activity log type identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.GetAllActivities(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all activity log items
            </summary>
            <param name="createdOnFrom">Log item creation from; null to load all customers</param>
            <param name="createdOnTo">Log item creation to; null to load all customers</param>
            <param name="email">Customer Email</param>
            <param name="username">Customer username</param>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Activity log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.GetActivityById(System.Int32)">
            <summary>
            Gets an activity log item
            </summary>
            <param name="activityLogId">Activity log identifier</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBCustomerActivityProvider.ClearAllActivities">
            <summary>
            Clears activity log
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog">
            <summary>
            Represents an activity log record
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.#ctor">
            <summary>
            Creates a new instance of the DBActivityLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.ActivityLogId">
            <summary>
            Gets or sets the activity log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.ActivityLogTypeId">
            <summary>
            Gets or sets the activity log type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.Comment">
            <summary>
            Gets or sets the activity comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign">
            <summary>
            Represents a campaign
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.#ctor">
            <summary>
            Creates a new instance of the DBCampaign class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.CampaignId">
            <summary>
            Gets or sets the campaign identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaign.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder">
            <summary>
            Represents an order
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.#ctor">
            <summary>
            Creates a new instance of the DBOrder class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderGuid">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerLanguageId">
            <summary>
            Gets or sets the customer language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerTaxDisplayTypeId">
            <summary>
            Gets or sets the customer tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerIP">
            <summary>
            Gets or sets the customer IP
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalInclTax">
            <summary>
            Gets or sets the order subtotal (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalExclTax">
            <summary>
            Gets or sets the order subtotal (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingInclTax">
            <summary>
            Gets or sets the order shipping (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingExclTax">
            <summary>
            Gets or sets the order shipping (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeInclTax">
            <summary>
            Gets or sets the payment method additional fee (incl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeExclTax">
            <summary>
            Gets or sets the payment method additional fee (excl tax)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTax">
            <summary>
            Gets or sets the order tax
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTotal">
            <summary>
            Gets or sets the order total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderDiscount">
            <summary>
            Gets or sets the order discount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderSubtotalExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order subtotal excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderShippingExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the order shipping excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeInclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee incl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodAdditionalFeeExclTaxInCustomerCurrency">
            <summary>
            Gets or sets the payment method additional fee excl tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTaxInCustomerCurrency">
            <summary>
            Gets or sets the order tax (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderTotalInCustomerCurrency">
            <summary>
            Gets or sets the order total (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderDiscountInCustomerCurrency">
            <summary>
            Gets or sets the order discount (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CheckoutAttributeDescription">
            <summary>
            Gets or sets the checkout attribute description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CheckoutAttributesXml">
            <summary>
            Gets or sets the checkout attributes in XML format
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CustomerCurrencyCode">
            <summary>
            Gets or sets the customer currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderWeight">
            <summary>
            Gets or sets the order weight
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AffiliateId">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.OrderStatusId">
            <summary>
            Gets or sets an order status identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AllowStoringCreditCardNumber">
            <summary>
            Gets or sets a value indicating whether storing of credit card number is allowed
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardType">
            <summary>
            Gets or sets the card type
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardName">
            <summary>
            Gets or sets the card name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardNumber">
            <summary>
            Gets or sets the card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.MaskedCreditCardNumber">
            <summary>
            Gets or sets the masked credit card number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardCvv2">
            <summary>
            Gets or sets the card CVV2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardExpirationMonth">
            <summary>
            Gets or sets the card expiration month
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CardExpirationYear">
            <summary>
            Gets or sets the card expiration year
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodId">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentMethodName">
            <summary>
            Gets or sets the payment method name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionId">
            <summary>
            Gets or sets the authorization transaction identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionCode">
            <summary>
            Gets or sets the authorization transaction code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.AuthorizationTransactionResult">
            <summary>
            Gets or sets the authorization transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CaptureTransactionId">
            <summary>
            Gets or sets the capture transaction identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CaptureTransactionResult">
            <summary>
            Gets or sets the capture transaction result
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.SubscriptionTransactionId">
            <summary>
            Gets or sets the subscription transaction identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PurchaseOrderNumber">
            <summary>
            Gets or sets the purchase order number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaymentStatusId">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.PaidDate">
            <summary>
            Gets or sets the paid date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingFirstName">
            <summary>
            Gets or sets the billing first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingLastName">
            <summary>
            Gets or sets the billing last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingPhoneNumber">
            <summary>
            Gets or sets the billing phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingEmail">
            <summary>
            Gets or sets the billing email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingFaxNumber">
            <summary>
            Gets or sets the billing fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCompany">
            <summary>
            Gets or sets the billing company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingAddress1">
            <summary>
            Gets or sets the billing address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingAddress2">
            <summary>
            Gets or sets the billing address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCity">
            <summary>
            Gets or sets the billing city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingStateProvince">
            <summary>
            Gets or sets the billing state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingStateProvinceId">
            <summary>
            Gets or sets the billing state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingZipPostalCode">
            <summary>
            Gets or sets the billing zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCountry">
            <summary>
            Gets or sets the billing country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.BillingCountryId">
            <summary>
            Gets or sets the billing country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStatusId">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingFirstName">
            <summary>
            Gets or sets the shipping first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingLastName">
            <summary>
            Gets or sets the shipping last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingPhoneNumber">
            <summary>
            Gets or sets the shipping phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingEmail">
            <summary>
            Gets or sets the shipping email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingFaxNumber">
            <summary>
            Gets or sets the shipping fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCompany">
            <summary>
            Gets or sets the shipping  company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingAddress1">
            <summary>
            Gets or sets the shipping address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingAddress2">
            <summary>
            Gets or sets the shipping address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCity">
            <summary>
            Gets or sets the shipping city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStateProvince">
            <summary>
            Gets or sets the shipping state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingStateProvinceId">
            <summary>
            Gets or sets the shipping state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingZipPostalCode">
            <summary>
            Gets or sets the shipping zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCountry">
            <summary>
            Gets or sets the shipping country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingCountryId">
            <summary>
            Gets or sets the shipping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingMethod">
            <summary>
            Gets or sets the shipping method
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippingRateComputationMethodId">
            <summary>
            Gets or sets the shipping rate computation method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.ShippedDate">
            <summary>
            Gets or sets the shipped date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.DeliveryDate">
            <summary>
            Gets or sets the delivery date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.TrackingNumber">
            <summary>
            Gets or sets the tracking number of current order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrder.CreatedOn">
            <summary>
            Gets or sets the date and time of order creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimensionCollection">
            <summary>
            Represents a measure dimension collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension">
            <summary>
            Represents a measure dimension
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.#ctor">
            <summary>
            Creates a new instance of the DBMeasureDimension class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.MeasureDimensionId">
            <summary>
            Gets or sets the measure dimension identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.Ratio">
            <summary>
            Gets or sets the ratio
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureDimension.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry">
            <summary>
            Represents a country
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.#ctor">
            <summary>
            Creates a new instance of the DBCountry class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsRegistration">
            <summary>
            Gets or sets a value indicating whether registration is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsBilling">
            <summary>
            Gets or sets a value indicating whether billing is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.AllowsShipping">
            <summary>
            Gets or sets a value indicating whether shipping is allowed to this country
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.TwoLetterIsoCode">
            <summary>
            Gets or sets the two letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.ThreeLetterIsoCode">
            <summary>
            Gets or sets the three letter ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.NumericIsoCode">
            <summary>
            Gets or sets the numeric ISO code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBCountry.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider">
            <summary>
            Acts as a base class for deriving custom tax category provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.DeleteTaxCategory(System.Int32)">
            <summary>
            Deletes a tax category
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.GetAllTaxCategories">
            <summary>
            Gets all tax categories
            </summary>
            <returns>Tax category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.GetTaxCategoryById(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="taxCategoryId">Tax category identifier</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.InsertTaxCategory(System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a tax category
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategoryProvider.UpdateTaxCategory(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the tax category
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider">
            <summary>
            Acts as a base class for deriving custom picture provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.GetPictureById(System.Int32)">
            <summary>
            Gets a picture
            </summary>
            <param name="pictureId">Picture identifier</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.DeletePicture(System.Int32)">
            <summary>
            Deletes a picture
            </summary>
            <param name="pictureId">Picture identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.InsertPicture(System.Byte[],System.String,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="pictureBinary">The picture binary</param>
            <param name="extension">The picture extension</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.UpdatePicture(System.Int32,System.Byte[],System.String,System.Boolean)">
            <summary>
            Updates the picture
            </summary>
            <param name="pictureId">The picture identifier</param>
            <param name="pictureBinary">The picture binary</param>
            <param name="extension">The picture extension</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBPictureProvider.GetPictures(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of pictures
            </summary>
            <param name="pageIndex">Current page</param>
            <param name="pageSize">Items on each page</param>
            <param name="totalRecords">Output. how many records in results</param>
            <returns>Paged list of pictures</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider">
            <summary>
            Acts as a base class for deriving custom message template provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetMessageTemplateById(System.Int32)">
            <summary>
            Gets a message template by template identifier
            </summary>
            <param name="messageTemplateId">Message template identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetAllMessageTemplates">
            <summary>
            Gets all message templates
            </summary>
            <returns>Message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetLocalizedMessageTemplateById(System.Int32)">
            <summary>
            Gets a localized message template by identifier
            </summary>
            <param name="localizedMessageTemplateId">Localized message template identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetLocalizedMessageTemplate(System.String,System.Int32)">
            <summary>
            Gets a localized message template by name and language identifier
            </summary>
            <param name="name">Message template name</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.DeleteLocalizedMessageTemplate(System.Int32)">
            <summary>
            Deletes a localized message template
            </summary>
            <param name="localizedMessageTemplateId">Message template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetAllLocalizedMessageTemplates(System.String)">
            <summary>
            Gets all localized message templates
            </summary>
            <param name="messageTemplateName">Message template name</param>
            <returns>Localized message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.InsertLocalizedMessageTemplate(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a localized message template
            </summary>
            <param name="messageTemplateId">The message template identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="bccEmailAddresses">The BCC Email addresses</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="isActive">A value indicating whether the message template is active</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.UpdateLocalizedMessageTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates the localized message template
            </summary>
            <param name="messageTemplateLocalizedId">The localized message template identifier</param>
            <param name="messageTemplateId">The message template identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="bccEmailAddresses">The BCC Email addresses</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="isActive">A value indicating whether the message template is active</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetQueuedEmailById(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
            <returns>Email item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.DeleteQueuedEmail(System.Int32)">
            <summary>
            Deletes a queued email
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetAllQueuedEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="fromEmail">From Email</param>
            <param name="toEmail">To Email</param>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="queuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="loadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="maxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.InsertQueuedEmail(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="priority">The priority</param>
            <param name="from">From</param>
            <param name="fromName">From name</param>
            <param name="to">To</param>
            <param name="toName">To name</param>
            <param name="cc">Cc</param>
            <param name="bcc">Bcc</param>
            <param name="subject">Subject</param>
            <param name="body">Body</param>
            <param name="createdOn">The date and time of item creation</param>
            <param name="sendTries">The send tries</param>
            <param name="sentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.UpdateQueuedEmail(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Updates a queued email
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
            <param name="priority">The priority</param>
            <param name="from">From</param>
            <param name="fromName">From name</param>
            <param name="to">To</param>
            <param name="toName">To name</param>
            <param name="cc">Cc</param>
            <param name="bcc">Bcc</param>
            <param name="subject">Subject</param>
            <param name="body">Body</param>
            <param name="createdOn">The date and time of item creation</param>
            <param name="sendTries">The send tries</param>
            <param name="sentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.InsertNewsLetterSubscription(System.Guid,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts the new newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <param name="email">The subscriber email</param>
            <param name="isActive">A value indicating whether subscription is active</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetNewsLetterSubscriptionById(System.Int32)">
            <summary>
            Gets the newsletter subscription by newsletter subscription identifier
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetNewsLetterSubscriptionByGuid(System.Guid)">
            <summary>
            Gets the newsletter subscription by newsletter subscription GUID
            </summary>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetNewsLetterSubscriptionByEmail(System.String)">
            <summary>
            Gets the newsletter subscription by email
            </summary>
            <param name="email">The Email</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.GetAllNewsLetterSubscriptions(System.Boolean)">
            <summary>
            Gets the newsletter subscription collection
            </summary>
            <param name="showHidden">A value indicating whether the not active subscriptions should be loaded</param>
            <returns>NewsLetterSubscription entity collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.UpdateNewsLetterSubscription(System.Int32,System.Guid,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <param name="email">The subscriber email</param>
            <param name="isActive">A value indicating whether subscription is active</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageProvider.DeleteNewsLetterSubscription(System.Int32)">
            <summary>
            Deletes the newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory">
            <summary>
            Represents a discount usage history entry
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.#ctor">
            <summary>
            Creates a new instance of the DBDiscountUsageHistory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.DiscountUsageHistoryId">
            <summary>
            Gets or sets the discount usage history entry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine">
            <summary>
            Represents an order average report line
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.#ctor">
            <summary>
            Creates a new instance of the DBOrderAverageReportLine class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.SumOrders">
            <summary>
            Gets or sets the sum total
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderAverageReportLine.CountOrders">
            <summary>
            Gets or sets the count
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole">
            <summary>
            Represents a customer role
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.#ctor">
            <summary>
            Creates a new instance of the DBCustomerRole class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Name">
            <summary>
            Gets or sets the customer role name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.FreeShipping">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as free shiping
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.TaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Active">
            <summary>
            Gets or sets a value indicating whether the customer role is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRole.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer role has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate">
            <summary>
            Represents a manufacturer template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.#ctor">
            <summary>
            Creates a new instance of the DBManufacturerTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.ManufacturerTemplateId">
            <summary>
            Gets or sets the manufacturer template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBManufacturerTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignCollection">
            <summary>
            Represents a campaign collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttributeCollection">
            <summary>
            Represents a product specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod">
            <summary>
            Represents a payment method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.#ctor">
            <summary>
            Creates a new instance of the DBPaymentMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.PaymentMethodId">
            <summary>
            Gets or sets the payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.VisibleName">
            <summary>
            Gets or sets the visible name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.ConfigureTemplatePath">
            <summary>
            Gets or sets the configure template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.UserTemplatePath">
            <summary>
            Gets or sets the user template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.ClassName">
            <summary>
            Gets or sets the class name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.IsActive">
            <summary>
            Gets or sets a value indicating whether the payment method is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCart">
            <summary>
            Represents a shopping cart
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus">
            <summary>
            Represents an order status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.#ctor">
            <summary>
            Creates a new instance of the DBOrderStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.OrderStatusId">
            <summary>
            Gets or sets the order status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate">
            <summary>
            Represents a message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.#ctor">
            <summary>
            Creates a new instance of the DBMessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.MessageTemplateId">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBMessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider">
            <summary>
            Acts as a base class for deriving custom country provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country
            </summary>
            <param name="countryId">Country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountries(System.Boolean)">
            <summary>
            Gets all countries
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForRegistration(System.Boolean)">
            <summary>
            Gets all countries that allow registration
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForBilling(System.Boolean)">
            <summary>
            Gets all countries that allow billing
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetAllCountriesForShipping(System.Boolean)">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryById(System.Int32)">
            <summary>
            Gets a country 
            </summary>
            <param name="countryId">Country identifier</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryByTwoLetterIsoCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="twoLetterIsoCode">Country two letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.GetCountryByThreeLetterIsoCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="threeLetterIsoCode">Country three letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.InsertCountry(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a country
            </summary>
            <param name="name">The name</param>
            <param name="allowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="allowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="allowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="twoLetterIsoCode">The two letter ISO code</param>
            <param name="threeLetterIsoCode">The three letter ISO code</param>
            <param name="numericIsoCode">The numeric ISO code</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryProvider.UpdateCountry(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the country
            </summary>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="allowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="allowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="allowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="twoLetterIsoCode">The two letter ISO code</param>
            <param name="threeLetterIsoCode">The three letter ISO code</param>
            <param name="numericIsoCode">The numeric ISO code</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddressCollection">
            <summary>
            Represents an IP address collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilterCollection">
            <summary>
            Represents a collection of specification attribute filter option
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelistCollection">
            <summary>
            Represents a ProductVariantPricelist Collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment">
            <summary>
            Represents a recurring payment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.#ctor">
            <summary>
            Creates a new instance of the DBRecurringPayment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.RecurringPaymentId">
            <summary>
            Gets or sets the recurring payment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.InitialOrderId">
            <summary>
            Gets or sets the initial order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.CycleLength">
            <summary>
            Gets or sets the cycle length
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.CyclePeriod">
            <summary>
            Gets or sets the cycle period
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.TotalCycles">
            <summary>
            Gets or sets the total cycles
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.StartDate">
            <summary>
            Gets or sets the start date
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.IsActive">
            <summary>
            Gets or sets a value indicating whether the payment is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPayment.CreatedOn">
            <summary>
            Gets or sets the date and time of payment creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCardCollection">
            <summary>
            Represents a gift card collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic">
            <summary>
            Represents a topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.#ctor">
            <summary>
            Creates a new instance of the DBTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.TopicId">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Topics.DBTopic.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPostCollection">
            <summary>
            Represents a forum post collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost">
            <summary>
            Represents a forum post
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.#ctor">
            <summary>
            Creates a new instance of the DBForumPost class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.ForumPostId">
            <summary>
            Gets or sets the forum post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.TopicId">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.UserId">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumPost.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod">
            <summary>
            Represents a shipping method
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.#ctor">
            <summary>
            Creates a new instance of the DBShippingMethod class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.ShippingMethodId">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingMethod.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal">
            <summary>
            Represents a ShippingByTotal
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.#ctor">
            <summary>
            Creates a new instance of the DBShippingByTotal class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingByTotalId">
            <summary>
            Gets or sets the ShippingByTotal identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingMethodId">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotal.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount">
            <summary>
            Represents a discount
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.#ctor">
            <summary>
            Creates a new instance of the DBDiscount class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountTypeId">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountRequirementId">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountLimitationId">
            <summary>
            Gets or sets the discount limitation identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.DiscountAmount">
            <summary>
            Gets or sets the discount amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.StartDate">
            <summary>
            Gets or sets the discount start date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.EndDate">
            <summary>
            Gets or sets the discount end date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.RequiresCouponCode">
            <summary>
            Gets or sets a value indicating whether discount requires coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.CouponCode">
            <summary>
            Gets or sets the coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscount.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantCollection">
            <summary>
            Represents a product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeCollection">
            <summary>
            Represents a product attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProductVariantCollection">
            <summary>
            Represents an order product variant collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate">
            <summary>
            Represents a localized message template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.#ctor">
            <summary>
            Creates a new instance of the DBLocalizedMessageTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.MessageTemplateLocalizedId">
            <summary>
            Gets or sets the localized message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.MessageTemplateId">
            <summary>
            Gets or sets the message template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.BccEmailAddresses">
            <summary>
            Gets or sets the BCC Email addresses
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBLocalizedMessageTemplate.IsActive">
            <summary>
            Gets or sets a value indicating whether the template is active
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBPictureCollection">
            <summary>
            Represents a picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.DBDownload">
            <summary>
            Represents a download
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.#ctor">
            <summary>
            Creates a new instance of the DBDownload class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadId">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.UseDownloadUrl">
            <summary>
            Gets a sets a value indicating whether DownloadURL property should be used
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadUrl">
            <summary>
            Gets a sets a download URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.DownloadBinary">
            <summary>
            Gets or sets the download binary
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.ContentType">
            <summary>
            The mime-type of the download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.Filename">
            <summary>
            The filename of the download
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.Extension">
            <summary>
            Gets or sets the extension
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Media.DBDownload.IsNew">
            <summary>
            Gets or sets a value indicating whether the download is new
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCurrencyCollection">
            <summary>
            Represents a currency collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider">
            <summary>
            Acts as a base class for deriving custom specification attribute provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributes(System.Int32)">
            <summary>
            Gets specification attribute collection
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttribute(System.String,System.Int32)">
            <summary>
            Inserts a specification attribute
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttribute(System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized specification attribute by id
            </summary>
            <param name="specificationAttributeLocalizedId">Localized specification identifier</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeLocalizedBySpecificationAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized specification attribute by specification attribute id and language id
            </summary>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttributeLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized specification attribute
            </summary>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized specification attribute
            </summary>
            <param name="specificationAttributeLocalizedId">Localized specification attribute identifier</param>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptions(System.Int32)">
            <summary>
            Gets a specification attribute option collection
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionById(System.Int32,System.Int32)">
            <summary>
            Gets a specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionsBySpecificationAttributeId(System.Int32,System.Int32)">
            <summary>
            Gets specification attribute option collection
            </summary>
            <param name="specificationAttributeId">Specification attribute unique identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttributeOption(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts a specification attribute option
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttributeOption(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteSpecificationAttributeOption(System.Int32)">
            <summary>
            Deletes a specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionLocalizedById(System.Int32)">
            <summary>
            Gets localized specification attribute option by id
            </summary>
            <param name="specificationAttributeOptionLocalizedId">Localized specification attribute option identifier</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionLocalizedBySpecificationAttributeOptionIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized specification attribute option by specification attribute option id and language id
            </summary>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertSpecificationAttributeOptionLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateSpecificationAttributeOptionLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized specification attribute option
            </summary>
            <param name="specificationAttributeOptionLocalizedId">Localized specification attribute option identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.DeleteProductSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeId">Product specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetProductSpecificationAttributesByProductId(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="allowFiltering">0 to load attributes with AllowFiltering set to false, 0 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="showOnProductPage">0 to load attributes with ShowOnProductPage set to false, 0 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetProductSpecificationAttributeById(System.Int32)">
            <summary>
            Gets a product specification attribute mapping 
            </summary>
            <param name="productSpecificationAttributeId">Product specification attribute mapping identifier</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.InsertProductSpecificationAttribute(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a product specification attribute mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.UpdateProductSpecificationAttribute(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates the product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeId">product specification attribute mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute onn the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterByCategoryId(System.Int32,System.Int32)">
            <summary>
            Gets all specification attribute option filter mapping collection by category id
            </summary>
            <param name="categoryId">Product category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option filter mapping collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider">
            <summary>
            Acts as a base class for deriving custom search log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.SearchTermReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="count">Item count. 0 if you want to get all items</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.GetAllSearchLogs">
            <summary>
            Gets all search log items
            </summary>
            <returns>Search log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.GetSearchLogById(System.Int32)">
            <summary>
            Gets a search log item
            </summary>
            <param name="searchLogId">The search log item identifier</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.InsertSearchLog(System.String,System.Int32,System.DateTime)">
            <summary>
            Inserts a search log item
            </summary>
            <param name="searchTerm">The search term</param>
            <param name="customerId">The customer identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogProvider.ClearSearchLog">
            <summary>
            Clear search log
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider">
            <summary>
            Acts as a base class for deriving custom measure provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.DeleteMeasureDimension(System.Int32)">
            <summary>
            Deletes measure dimension
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetMeasureDimensionById(System.Int32)">
            <summary>
            Gets a measure dimension by identifier
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
            <returns>Measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetAllMeasureDimensions">
            <summary>
            Gets all measure dimensions
            </summary>
            <returns>Measure dimension collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.InsertMeasureDimension(System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Inserts a measure dimension
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.UpdateMeasureDimension(System.Int32,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Updates the measure dimension
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.DeleteMeasureWeight(System.Int32)">
            <summary>
            Deletes measure weight
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetMeasureWeightById(System.Int32)">
            <summary>
            Gets a measure weight by identifier
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
            <returns>Measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.GetAllMeasureWeights">
            <summary>
            Gets all measure weights
            </summary>
            <returns>Measure weight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.InsertMeasureWeight(System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Inserts a measure weight
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureProvider.UpdateMeasureWeight(System.Int32,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Updates the measure weight
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure weight</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider">
            <summary>
            Acts as a base class for deriving custom discount provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountById(System.Int32)">
            <summary>
            Gets a discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscounts(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all discounts
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="discountTypeId">Discount type identifier; null to load all discount</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.InsertDiscount(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Inserts a discount
            </summary>
            <param name="discountTypeId">The discount type identifier</param>
            <param name="discountRequirementId">The discount requirement identifier</param>
            <param name="discountLimitationId">The discount limitation identifier</param>
            <param name="name">The name</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="discountPercentage">The discount percentage</param>
            <param name="discountAmount">The discount amount</param>
            <param name="startDate">The discount start date and time</param>
            <param name="endDate">The discount end date and time</param>
            <param name="requiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="couponCode">The coupon code</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.UpdateDiscount(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Updates the discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <param name="discountTypeId">The discount type identifier</param>
            <param name="discountRequirementId">The discount requirement identifier</param>
            <param name="discountLimitationId">The discount limitation identifier</param>
            <param name="name">The name</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="discountPercentage">The discount percentage</param>
            <param name="discountAmount">The discount amount</param>
            <param name="startDate">The discount start date and time</param>
            <param name="endDate">The discount end date and time</param>
            <param name="requiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="couponCode">The coupon code</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.AddDiscountToProductVariant(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.RemoveDiscountFromProductVariant(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountsByProductVariantId(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.AddDiscountToCategory(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.RemoveDiscountFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountsByCategoryId(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.AddDiscountRestriction(System.Int32,System.Int32)">
            <summary>
            Adds a discount requirement
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.RemoveDiscountRestriction(System.Int32,System.Int32)">
            <summary>
            Removes discount requirement
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountRequirements">
            <summary>
            Gets all discount requirements
            </summary>
            <returns>Discount requirement collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountTypes">
            <summary>
            Gets all discount types
            </summary>
            <returns>Discount type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountLimitations">
            <summary>
            Gets all discount limitations
            </summary>
            <returns>Discount limitation collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.DeleteDiscountUsageHistory(System.Int32)">
            <summary>
            Deletes a discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">Discount usage history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetDiscountUsageHistoryById(System.Int32)">
            <summary>
            Gets a discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">Discount usage history entry identifier</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.GetAllDiscountUsageHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all discount usage history entries
            </summary>
            <param name="discountId">Discount type identifier; null to load all</param>
            <param name="customerId">Customer identifier; null to load all</param>
            <param name="orderId">Order identifier; null to load all</param>
            <returns>Discount usage history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.InsertDiscountUsageHistory(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a discount usage history entry
            </summary>
            <param name="discountId">Discount type identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountProvider.UpdateDiscountUsageHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">discount usage history entry identifier</param>
            <param name="discountId">Discount type identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider">
            <summary>
            Acts as a base class for deriving custom log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.DeleteBlogPost(System.Int32)">
            <summary>
            Deletes an blog post
            </summary>
            <param name="blogPostId">Blog post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogPostById(System.Int32)">
            <summary>
            Gets an blog post
            </summary>
            <param name="blogPostId">Blog post identifier</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetAllBlogPosts(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Blog posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.InsertBlogPost(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Inserts an blog post
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="blogPostTitle">The blog post title</param>
            <param name="blogPostBody">The blog post title</param>
            <param name="blogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="createdById">The user identifier who created the blog post</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.UpdateBlogPost(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Updates the blog post
            </summary>
            <param name="blogPostId">The blog post identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="blogPostTitle">The blog post title</param>
            <param name="blogPostBody">The blog post title</param>
            <param name="blogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="createdById">The user identifier who created the blog post</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.DeleteBlogComment(System.Int32)">
            <summary>
            Deletes a blog comment
            </summary>
            <param name="blogCommentId">Blog comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogCommentById(System.Int32)">
            <summary>
            Gets a blog comment
            </summary>
            <param name="blogCommentId">Blog comment identifier</param>
            <returns>A blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetBlogCommentsByBlogPostId(System.Int32)">
            <summary>
            Gets a collection of blog comments by blog post identifier
            </summary>
            <param name="blogPostId">Blog post identifier</param>
            <returns>A collection of blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.GetAllBlogComments">
            <summary>
            Gets all blog comments
            </summary>
            <returns>Blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.InsertBlogComment(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a blog comment
            </summary>
            <param name="blogPostId">The blog post identifier</param>
            <param name="customerId">The customer identifier who commented the blog post</param>
            <param name="ipAddress">The IP address</param>
            <param name="commentText">The comment text</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogProvider.UpdateBlogComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Updates the blog comment
            </summary>
            <param name="blogCommentId">The blog comment identifier</param>
            <param name="blogPostId">The blog post identifier</param>
            <param name="customerId">The customer identifier who commented the blog post</param>
            <param name="ipAddress">The IP address</param>
            <param name="commentText">The comment text</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider">
            <summary>
            Acts as a base class for deriving custom affiliate provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.GetAffiliateById(System.Int32)">
            <summary>
            Gets an affiliate by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.GetAllAffiliates">
            <summary>
            Gets all affiliates
            </summary>
            <returns>Affiliate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.InsertAffiliate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Inserts an affiliate
            </summary>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="middleName">The middle name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateProvider.UpdateAffiliate(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the affiliate
            </summary>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="middleName">The middle name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider">
            <summary>
            Acts as a base class for deriving custom checkout attribute provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.DeleteCheckoutAttribute(System.Int32)">
            <summary>
            Deletes a checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetAllCheckoutAttributes(System.Int32,System.Boolean)">
            <summary>
            Gets all checkout attributes
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="dontLoadShippableProductRequired">Value indicating whether to do not load attributes for checkout attibutes which require shippable products</param>
            <returns>Checkout attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a checkout attribute 
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.InsertCheckoutAttribute(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a checkout attribute
            </summary>
            <param name="name">Name</param>
            <param name="textPrompt">Text prompt</param>
            <param name="isRequired">Value indicating whether the entity is required</param>
            <param name="shippableProductRequired">Value indicating whether shippable products are required in order to display this attribute</param>
            <param name="isTaxExempt">Value indicating whether the attribute is marked as tax exempt</param>
            <param name="taxCategoryId">Tax category identifier</param>
            <param name="attributeControlTypeId">Attribute control type identifier</param>
            <param name="displayOrder">Display order</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.UpdateCheckoutAttribute(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="name">Name</param>
            <param name="textPrompt">Text prompt</param>
            <param name="isRequired">Value indicating whether the entity is required</param>
            <param name="shippableProductRequired">Value indicating whether shippable products are required in order to display this attribute</param>
            <param name="isTaxExempt">Value indicating whether the attribute is marked as tax exempt</param>
            <param name="taxCategoryId">Tax category identifier</param>
            <param name="attributeControlTypeId">Attribute control type identifier</param>
            <param name="displayOrder">Display order</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized checkout attribute by id
            </summary>
            <param name="checkoutAttributeLocalizedId">Localized checkout attribute identifier</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeLocalizedByCheckoutAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized checkout attribute by checkout attribute id and language id
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.InsertCheckoutAttributeLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="textPrompt">Text prompt</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.UpdateCheckoutAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized checkout attribute
            </summary>
            <param name="checkoutAttributeLocalizedId">Localized checkout attribute identifier</param>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="textPrompt">Text prompt</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.DeleteCheckoutAttributeValue(System.Int32)">
            <summary>
            Deletes a checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeValues(System.Int32,System.Int32)">
            <summary>
            Gets checkout attribute values by checkout attribute identifier
            </summary>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute value collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeValueById(System.Int32,System.Int32)">
            <summary>
            Gets a checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.InsertCheckoutAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a checkout attribute value
            </summary>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="name">The checkout attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.UpdateCheckoutAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">The checkout attribute value identifier</param>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="name">The checkout attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeValueLocalizedById(System.Int32)">
            <summary>
            Gets localized checkout attribute value by id
            </summary>
            <param name="checkoutAttributeValueLocalizedId">Localized checkout attribute value identifier</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.GetCheckoutAttributeValueLocalizedByCheckoutAttributeValueIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized checkout attribute value by checkout attribute value id and language id
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.InsertCheckoutAttributeValueLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeProvider.UpdateCheckoutAttributeValueLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized checkout attribute value
            </summary>
            <param name="checkoutAttributeValueLocalizedId">Localized checkout attribute value identifier</param>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory">
            <summary>
            Represents a reward point history entry
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.#ctor">
            <summary>
            Creates a new instance of the DBRewardPointsHistory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.RewardPointsHistoryId">
            <summary>
            Gets or sets the reward point history entry identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.Points">
            <summary>
            Gets or sets the points redeemed/added
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.PointsBalance">
            <summary>
            Gets or sets the points balance
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.UsedAmount">
            <summary>
            Gets or sets the used amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.UsedAmountInCustomerCurrency">
            <summary>
            Gets or sets the used amount (customer currency)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.CustomerCurrencyCode">
            <summary>
            Gets or sets the customer currency code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.Message">
            <summary>
            Gets or sets the message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription">
            <summary>
            Represents a forum subscription item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.#ctor">
            <summary>
            Creates a new instance of the DBForumSubscription class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.ForumSubscriptionId">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.SubscriptionGuid">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.UserId">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.ForumId">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.TopicId">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscription.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory">
            <summary>
            Represents a category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.#ctor">
            <summary>
            Creates a new instance of the DBCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.CategoryId">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.TemplateId">
            <summary>
            Gets or sets the template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.ParentCategoryId">
            <summary>
            Gets or sets the parent category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.PriceRanges">
            <summary>
            Gets or sets the available price ranges
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.ShowOnHomePage">
            <summary>
            Gets or sets a value indicating whether to show the category on home page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBCategory.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate">
            <summary>
            Represents a product template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.#ctor">
            <summary>
            Creates a new instance of the DBProductTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.ProductTemplateId">
            <summary>
            Gets or sets the product template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBProductTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderCollection">
            <summary>
            Represents a tax provider collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodCollection">
            <summary>
            Represents a shipping rate computation method collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountCollection">
            <summary>
            Represents a discount collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate">
            <summary>
            Represents an affiliate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.#ctor">
            <summary>
            Creates a new instance of the DBAffiliate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.AffiliateId">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.MiddleName">
            <summary>
            Gets or sets the middle name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliate.Active">
            <summary>
            Gets or sets a value indicating whether the entity is active
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductTypeCollection">
            <summary>
            Represents a product type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus">
            <summary>
            Represents a payment status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.#ctor">
            <summary>
            Creates a new instance of the DBPaymentStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.PaymentStatusId">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource">
            <summary>
            Represents a locale string resource
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.#ctor">
            <summary>
            Creates a new instance of the DBLocaleStringResource class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.LocaleStringResourceId">
            <summary>
            Gets or sets the locale string resource identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.ResourceName">
            <summary>
            Gets or sets the resource name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Localization.DBLocaleStringResource.ResourceValue">
            <summary>
            Gets or sets the resource value
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider">
            <summary>
            Acts as a base class for deriving custom tax rate provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.DeleteTaxRate(System.Int32)">
            <summary>
            Deletes a tax rate
            </summary>
            <param name="taxRateId">Tax rate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.GetTaxRateById(System.Int32)">
            <summary>
            Gets a tax rate
            </summary>
            <param name="taxRateId">Tax rate identifier</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.GetAllTaxRates">
            <summary>
            Gets all tax rates
            </summary>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.InsertTaxRate(System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Inserts a tax rate
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zip">The zip</param>
            <param name="percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateProvider.UpdateTaxRate(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Updates the tax rate
            </summary>
            <param name="taxRateId">The tax rate identifier</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zip">The zip</param>
            <param name="percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider">
            <summary>
            Acts as a base class for deriving custom product provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProducts(System.Boolean,System.Int32)">
            <summary>
            Gets all products
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProducts(System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="productTagId">Product tag identifier</param>
            <param name="featuredProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="priceMin">Minimum price</param>
            <param name="priceMax">Maximum price</param>
            <param name="keywords">Keywords</param>
            <param name="searchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="filteredSpecs">Filtered product specification identifiers</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="orderBy">Order by</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProducts(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="seriesId">SeriesID identifier in Catalog</param>
            <param name="productTagId">Product tag identifier</param>
            <param name="featuredProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="priceMin">Minimum price</param>
            <param name="priceMax">Maximum price</param>
            <param name="keywords">Keywords</param>
            <param name="searchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="filteredSpecs">Filtered product specification identifiers</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="orderBy">Order by</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductsDisplayedOnHomePage(System.Boolean,System.Int32)">
            <summary>
            Gets all products displayed on the home page
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductById(System.Int32,System.Int32)">
            <summary>
            Gets a product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProduct(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product
            </summary>
            <param name="name">The name</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="adminComment">The admin comment</param>
            <param name="productTypeId">The product type identifier</param>
            <param name="templateId">The template identifier</param>
            <param name="showOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="allowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="allowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="ratingSum">The rating sum</param>
            <param name="totalRatingVotes">The total rating votes</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of product creation</param>
            <param name="updatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProduct(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="name">The name</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="adminComment">The admin comment</param>
            <param name="productTypeId">The product type identifier</param>
            <param name="templateId">The template identifier</param>
            <param name="showOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="allowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="allowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="ratingSum">The rating sum</param>
            <param name="totalRatingVotes">The total rating votes</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of product creation</param>
            <param name="updatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductLocalizedById(System.Int32)">
            <summary>
            Gets localized product by id
            </summary>
            <param name="productLocalizedId">Localized product identifier</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductLocalizedByProductIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product by product id and language id
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized product
            </summary>
            <param name="productLocalizedId">Localized product identifier</param>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantLocalizedById(System.Int32)">
            <summary>
            Gets localized product variant by id
            </summary>
            <param name="productVariantLocalizedId">Localized product variant identifier</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantLocalizedByProductVariantIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product variant by product variant id and language id
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductVariants(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all product variants
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="keywords">Keywords</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Product variants</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductVariantLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductVariantLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized product variant
            </summary>
            <param name="productVariantLocalizedId">Localized product variant identifier</param>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductsAlsoPurchasedById(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.SetProductRating(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets a product rating
            </summary>
            <param name="productId">Product identifer</param>
            <param name="customerId">Customer identifer</param>
            <param name="rating">Rating</param>
            <param name="ratedOn">Rating was created on</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRecentlyAddedProducts(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a recently added products list
            </summary>
            <param name="number">Number of products to load</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Recently added products list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductPicture(System.Int32)">
            <summary>
            Deletes a product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductPictureById(System.Int32)">
            <summary>
            Gets a product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductPicture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a product picture mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="pictureId">Picture identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductPicture(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="pictureId">Picture identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductPicturesByProductId(System.Int32,System.Int32)">
            <summary>
            Gets all product picture mappings by product identifier
            </summary>
            <param name="productId">Product identifier</param>
            <param name="pictureCount">Number of picture to load</param>
            <returns>Product picture mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductReviewById(System.Int32)">
            <summary>
            Gets a product review
            </summary>
            <param name="productReviewId">Product review identifier</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductReviewByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product review collection by product identifier
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductReview(System.Int32)">
            <summary>
            Deletes a product review
            </summary>
            <param name="productReviewId">Product review identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductReviews(System.Boolean)">
            <summary>
            Gets all product reviews
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Inserts a product review
            </summary>
            <param name="productId">The product identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The review title</param>
            <param name="reviewText">The review text</param>
            <param name="rating">The review rating</param>
            <param name="helpfulYesTotal">Review helpful votes total</param>
            <param name="helpfulNoTotal">Review not helpful votes total</param>
            <param name="isApproved">A value indicating whether the product review is approved</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductReview(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Updates the product review
            </summary>
            <param name="productReviewId">The product review identifier</param>
            <param name="productId">The product identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The review title</param>
            <param name="reviewText">The review text</param>
            <param name="rating">The review rating</param>
            <param name="helpfulYesTotal">Review helpful votes total</param>
            <param name="helpfulNoTotal">Review not helpful votes total</param>
            <param name="isApproved">A value indicating whether the product review is approved</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.SetProductRatingHelpfulness(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets a product rating helpfulness
            </summary>
            <param name="productReviewId">Product review identifer</param>
            <param name="customerId">Customer identifer</param>
            <param name="wasHelpful">A value indicating whether the product review was helpful or not </param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantById(System.Int32,System.Int32)">
            <summary>
            Gets a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantBySKU(System.String)">
            <summary>
            Gets a product variant by SKU
            </summary>
            <param name="sku">SKU</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetLowStockProductVariants">
            <summary>
            Get low stock product variants
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductVariant(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product variant
            </summary>
            <param name="productId">The product identifier</param>
            <param name="name">The name</param>
            <param name="sku">The SKU</param>
            <param name="description">The description</param>
            <param name="adminComment">The admin comment</param>
            <param name="manufacturerPartNumber">The manufacturer part number</param>
            <param name="isGiftCard">A value indicating whether the product variant is gift card</param>
            <param name="isDownload">A value indicating whether the product variant is download</param>
            <param name="downloadId">The download identifier</param>
            <param name="unlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="maxNumberOfDownloads">The maximum number of downloads</param>
            <param name="downloadExpirationDays">The number of days during customers keeps access to the file</param>
            <param name="downloadActivationType">The download activation type</param>
            <param name="hasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="sampleDownloadId">The sample download identifier</param>
            <param name="hasUserAgreement">A value indicating whether the product variant has a user agreement</param>
            <param name="userAgreementText">The text of user agreement</param>
            <param name="isRecurring">A value indicating whether the product variant is recurring</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="isShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="isFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="additionalShippingCharge">The additional shipping charge</param>
            <param name="isTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="manageInventory">The value indicating how to manage inventory</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="displayStockAvailability">The value indicating whether to display stock availability</param>
            <param name="minStockQuantity">The minimum stock quantity</param>
            <param name="lowStockActivityId">The low stock activity identifier</param>
            <param name="notifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <param name="orderMinimumQuantity">The order minimum quantity</param>
            <param name="orderMaximumQuantity">The order maximum quantity</param>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="disableBuyButton">A value indicating whether to disable buy button</param>
            <param name="price">The price</param>
            <param name="oldPrice">The old price</param>
            <param name="productCost">The product cost</param>
            <param name="customerEntersPrice">The value indicating whether a customer enters price</param>
            <param name="minimumCustomerEnteredPrice">The minimum price entered by a customer</param>
            <param name="maximumCustomerEnteredPrice">The maximum price entered by a customer</param>
            <param name="weight">The weight</param>
            <param name="length">The length</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pictureId">The picture identifier</param>
            <param name="availableStartDateTime">The available start date and time</param>
            <param name="availableEndDateTime">The available end date and time</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductVariant(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product variant
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productId">The product identifier</param>
            <param name="name">The name</param>
            <param name="sku">The SKU</param>
            <param name="description">The description</param>
            <param name="adminComment">The admin comment</param>
            <param name="manufacturerPartNumber">The manufacturer part number</param>
            <param name="isGiftCard">A value indicating whether the product variant is gift card</param>
            <param name="isDownload">A value indicating whether the product variant is download</param>
            <param name="downloadId">The download identifier</param>
            <param name="unlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="maxNumberOfDownloads">The maximum number of downloads</param>
            <param name="downloadExpirationDays">The number of days during customers keeps access to the file</param>
            <param name="downloadActivationType">The download activation type</param>
            <param name="hasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="sampleDownloadId">The sample download identifier</param>
            <param name="hasUserAgreement">A value indicating whether the product variant has a user agreement</param>
            <param name="userAgreementText">The text of user agreement</param>
            <param name="isRecurring">A value indicating whether the product variant is recurring</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="isShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="isFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="additionalShippingCharge">The additional shipping charge</param>
            <param name="isTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="manageInventory">The value indicating how to manage inventory</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="displayStockAvailability">The value indicating whether to display stock availability</param>
            <param name="minStockQuantity">The minimum stock quantity</param>
            <param name="lowStockActivityId">The low stock activity identifier</param>
            <param name="notifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <param name="orderMinimumQuantity">The order minimum quantity</param>
            <param name="orderMaximumQuantity">The order maximum quantity</param>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="disableBuyButton">A value indicating whether to disable buy button</param>
            <param name="price">The price</param>
            <param name="oldPrice">The old price</param>
            <param name="productCost">The product cost</param>
            <param name="customerEntersPrice">The value indicating whether a customer enters price</param>
            <param name="minimumCustomerEnteredPrice">The minimum price entered by a customer</param>
            <param name="maximumCustomerEnteredPrice">The maximum price entered by a customer</param>
            <param name="weight">The weight</param>
            <param name="length">The length</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pictureId">The picture identifier</param>
            <param name="availableStartDateTime">The available start date and time</param>
            <param name="availableEndDateTime">The available end date and time</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantsByProductId(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="productId">The product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantsRestrictedByDiscountId(System.Int32)">
            <summary>
            Gets restricted product variants by discount identifier
            </summary>
            <param name="discountId">The discount identifier</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteRelatedProduct(System.Int32)">
            <summary>
            Deletes a related product
            </summary>
            <param name="relatedProductId">Related product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRelatedProductsByProductId1(System.Int32,System.Boolean)">
            <summary>
            Gets a related product collection by product identifier
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Related product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetRelatedProductById(System.Int32)">
            <summary>
            Gets a related product
            </summary>
            <param name="relatedProductId">Related product identifer</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertRelatedProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a related product
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="productId2">The second product identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateRelatedProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a related product
            </summary>
            <param name="relatedProductId">The related product identifier</param>
            <param name="productId1">The first product identifier</param>
            <param name="productId2">The second product identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductTypes">
            <summary>
            Gets all product types
            </summary>
            <returns>Product type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductTypeById(System.Int32)">
            <summary>
            Gets a product type
            </summary>
            <param name="productTypeId">Product type identifier</param>
            <returns>Product type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantsByPricelistId(System.Int32)">
            <summary>
            Gets all product variants directly assigned to a pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>Product variants</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllPricelists">
            <summary>
            Gets a collection of all available pricelists
            </summary>
            <returns>Collection of pricelists</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetPricelistById(System.Int32)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetPricelistByGuid(System.String)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="pricelistGuid">Pricelist GUID</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertPricelist(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a pricelist
            </summary>
            <param name="exportModeId">Mode of list creation identifier</param>
            <param name="exportTypeId">Export type identifier</param>
            <param name="affiliateId">Affiliate connected to this pricelist (optional), links will be created with AffiliateId</param>
            <param name="displayName">Displayedname</param>
            <param name="shortName">shortname to identify the pricelist</param>
            <param name="pricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="cacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="formatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="description">Displayed description</param>
            <param name="adminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="header">Headerline of the exported file (plain text)</param>
            <param name="body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="footer">Footer line of the exportet file (plain text)</param>
            <param name="priceAdjustmentTypeId">Type of price adjustment identifier</param>
            <param name="priceAdjustment">price will be adjusted by this amount</param>
            <param name="overrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="createdOn">When was this record originally created</param>
            <param name="updatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdatePricelist(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the Pricelist
            </summary>
            <param name="pricelistId">Unique Identifier</param>
            <param name="exportModeId">Mode of list creation identifier</param>
            <param name="exportTypeId">Export type identifier</param>
            <param name="affiliateId">Affiliate connected to this pricelist (optional), links will be created with AffiliateId</param>
            <param name="displayName">Displayedname</param>
            <param name="shortName">shortname to identify the pricelist</param>
            <param name="pricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="cacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="formatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="description">Displayed description</param>
            <param name="adminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="header">Headerline of the exported file (plain text)</param>
            <param name="body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="footer">Footer line of the exportet file (plain text)</param>
            <param name="priceAdjustmentTypeId">Type of price adjustment identifier</param>
            <param name="priceAdjustment">price will be adjusted by this amount</param>
            <param name="overrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="createdOn">When was this record originally created</param>
            <param name="updatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeletePricelist(System.Int32)">
            <summary>
            Deletes a pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductVariantPricelist(System.Int32)">
            <summary>
            Deletes a product variant pricelist
            </summary>
            <param name="productVariantPricelistId">ProductVariantPricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantPricelistById(System.Int32)">
            <summary>
            Gets a ProductVariantPricelist
            </summary>
            <param name="productVariantPricelistId">ProductVariantPricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductVariantPricelist(System.Int32,System.Int32)">
            <summary>
            Gets ProductVariantPricelist
            </summary>
            <param name="productVariantId">ProductVariant identifier</param>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Inserts a ProductVariantPricelist
            </summary>
            <param name="productVariantId">The product variant identifer</param>
            <param name="pricelistId">The pricelist identifier</param>
            <param name="priceAdjustmentTypeId">Price adjustment type identifier</param>
            <param name="priceAdjustment">The price will be adjusted by this amount</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Updates the ProductVariantPricelist
            </summary>
            <param name="productVariantPricelistId">The product variant pricelist identifier</param>
            <param name="productVariantId">The product variant identifer</param>
            <param name="pricelistId">The pricelist identifier</param>
            <param name="priceAdjustmentTypeId">Price adjustment type identifier</param>
            <param name="priceAdjustment">The price will be adjusted by this amount</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetTierPriceById(System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="tierPriceId">Tier price identifier</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetTierPricesByProductVariantId(System.Int32)">
            <summary>
            Gets tier prices by product variant identifier
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>Tier price collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteTierPrice(System.Int32)">
            <summary>
            Deletes a tier price
            </summary>
            <param name="tierPriceId">Tier price identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertTierPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a tier price
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="quantity">The quantity</param>
            <param name="price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateTierPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates the tier price
            </summary>
            <param name="tierPriceId">The tier price identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="quantity">The quantity</param>
            <param name="price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteCustomerRoleProductPrice(System.Int32)">
            <summary>
            Deletes a product price by customer role by identifier 
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetCustomerRoleProductPriceById(System.Int32)">
            <summary>
            Gets a product price by customer role by identifier 
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
            <returns>Product price by customer role by identifier </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllCustomerRoleProductPrices(System.Int32)">
            <summary>
            Gets a collection of product prices by customer role
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>A collection of product prices by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertCustomerRoleProductPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a product price by customer role
            </summary>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="price">The price</param>
            <returns>A product price by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateCustomerRoleProductPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates a product price by customer role
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="price">The price</param>
            <returns>A product price by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.DeleteProductTag(System.Int32)">
            <summary>
            Deletes a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetAllProductTags(System.Int32,System.String)">
            <summary>
            Gets all product tags
            </summary>
            <param name="productId">Product identifier</param>
            <param name="name">Product tag name or empty string to load all records</param>
            <returns>Product tag collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.GetProductTagById(System.Int32)">
            <summary>
            Gets a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.InsertProductTag(System.String,System.Int32)">
            <summary>
            Inserts a product tag
            </summary>
            <param name="name">Product tag name</param>
            <param name="productCount">Product count</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.UpdateProductTag(System.Int32,System.String,System.Int32)">
            <summary>
            Updates a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
            <param name="name">Product tag name</param>
            <param name="productCount">Product count</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.AddProductTagMapping(System.Int32,System.Int32)">
            <summary>
            Adds a discount tag mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductProvider.RemoveProductTagMapping(System.Int32,System.Int32)">
            <summary>
            Removes a discount tag mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction">
            <summary>
            Represents a customer action
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.#ctor">
            <summary>
            Creates a new instance of the DBCustomerAction class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.CustomerActionId">
            <summary>
            Gets or sets the customer action identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.Comment">
            <summary>
            Gets or sets the comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBCustomerAction.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountLimitationCollection">
            <summary>
            Represents a discount limitation collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized">
            <summary>
            Represents a localized specification attribute option
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttributeOptionLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized.SpecificationAttributeOptionLocalizedId">
            <summary>
            Gets or sets the localized specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized.SpecificationAttributeOptionId">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmailCollection">
            <summary>
            Represents a queued email collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized">
            <summary>
            Represents a localized product variant
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.ProductVariantLocalizedId">
            <summary>
            Gets or sets the localized product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantLocalized.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer">
            <summary>
            Represents a customer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.#ctor">
            <summary>
            Creates a new instance of the DBCustomer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CustomerGuid">
            <summary>
            Gets or sets the customer Guid
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Username">
            <summary>
            Gets or sets the username
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.PasswordHash">
            <summary>
            Gets or sets the password hash
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.SaltKey">
            <summary>
            Gets or sets the salt key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AffiliateId">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.BillingAddressId">
            <summary>
            Gets or sets the billing address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.ShippingAddressId">
            <summary>
            Gets or sets the shipping address identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LastPaymentMethodId">
            <summary>
            Gets or sets the last payment method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LastAppliedCouponCode">
            <summary>
            Gets or sets the last applied coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.GiftCardCouponCodes">
            <summary>
            Gets or sets the applied gift card coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CheckoutAttributes">
            <summary>
            Gets or sets the selected checkout attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.CurrencyId">
            <summary>
            Gets or sets the currency identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TaxDisplayTypeId">
            <summary>
            Gets or sets the tax display type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer is tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsAdmin">
            <summary>
            Gets or sets a value indicating whether the customer is administrator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsGuest">
            <summary>
            Gets or sets a value indicating whether the customer is guest
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.IsForumModerator">
            <summary>
            Gets or sets a value indicating whether the customer is forum moderator
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TotalForumPosts">
            <summary>
            Gets or sets the forum post count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Signature">
            <summary>
            Gets or sets the signature
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Active">
            <summary>
            Gets or sets a value indicating whether the customer is active
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.RegistrationDate">
            <summary>
            Gets or sets the date and time of customer registration
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.TimeZoneId">
            <summary>
            Gets or sets the time zone identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.AvatarId">
            <summary>
            Gets or sets the avatar identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomer.DealerId">
            <summary>
            Gets or sets the dealer identifier
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumSubscriptionCollection">
            <summary>
            Represents a forum subscription collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment">
            <summary>
            Represents a blog comment
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.#ctor">
            <summary>
            Creates a new instance of the DBBlogComment class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.BlogCommentId">
            <summary>
            Gets or sets the blog comment identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.BlogPostId">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CustomerId">
            <summary>
            Gets or sets the customer identifier who commented the blog post
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CommentText">
            <summary>
            Gets or sets the comment text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogComment.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLog">
            <summary>
            Represents a log record
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.#ctor">
            <summary>
            Creates a new instance of the DBLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.LogId">
            <summary>
            Gets or sets the log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.LogTypeId">
            <summary>
            Gets or sets the log type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Severity">
            <summary>
            Gets or sets the severity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Message">
            <summary>
            Gets or sets the short message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.Exception">
            <summary>
            Gets or sets the full exception
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.PageUrl">
            <summary>
            Gets or sets the page URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.ReferrerUrl">
            <summary>
            Gets or sets the referrer URL
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus">
            <summary>
            Represents a shipping status
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.#ctor">
            <summary>
            Creates a new instance of the DBShippingStatus class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.ShippingStatusId">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingStatus.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalCollection">
            <summary>
            Represents a ShippingByTotal collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement">
            <summary>
            Represents a discount requirement
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.#ctor">
            <summary>
            Creates a new instance of the DBDiscountRequirement class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.DiscountRequirementId">
            <summary>
            Gets or sets the discount requirement identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountRequirement.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.DBAffiliateCollection">
            <summary>
            Represents an affiliate collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductCollection">
            <summary>
            Represents a product collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeCollection">
            <summary>
            Represents a credit card type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderCollection">
            <summary>
            Represents an order collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByWeightAndCountry provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetById(System.Int32)">
            <summary>
            Gets a ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">ShippingByWeightAndCountry identifier</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.DeleteShippingByWeightAndCountry(System.Int32)">
            <summary>
            Deletes a ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">ShippingByWeightAndCountry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetAll">
            <summary>
            Gets all ShippingByWeightAndCountrys
            </summary>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.InsertShippingByWeightAndCountry(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeightAndCountry
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.UpdateShippingByWeightAndCountry(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">The ShippingByWeightAndCountry identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightAndCountryProvider.GetAllByShippingMethodIdAndCountryId(System.Int32,System.Int32)">
            <summary>
            Gets all ShippingByWeightAndCountrys by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByTotal provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetById(System.Int32)">
            <summary>
            Get a ShippingByTotal
            </summary>
            <param name="shippingByTotalId">ShippingByTotal identifier</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.DeleteShippingByTotal(System.Int32)">
            <summary>
            Deletes a ShippingByTotal
            </summary>
            <param name="shippingByTotalId">ShippingByTotal identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetAll">
            <summary>
            Gets all ShippingByTotals
            </summary>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.InsertShippingByTotal(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByTotal
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.UpdateShippingByTotal(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByTotal
            </summary>
            <param name="shippingByTotalId">The ShippingByTotal identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByTotalProvider.GetAllByShippingMethodId(System.Int32)">
            <summary>
            Gets all ShippingByTotals by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress">
            <summary>
            Represents IP address entity
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.#ctor">
            <summary>
            Creates a new instance of IpAddress class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.BannedIpAddressId">
            <summary>
            Gets or sets the IP address unique identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.Address">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.Comment">
            <summary>
            Gets or sets a reason why the IP was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.CreatedOn">
            <summary>
            Gets or sets when the IP address record was banned
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpAddress.UpdatedOn">
            <summary>
            Gets or sets when the banned IP address record was last updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist">
            <summary>
            Represents a ProductVariantPricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantPricelist class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.ProductVariantPricelistId">
            <summary>
            Gets or sets the product variant pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.ProductVariantId">
            <summary>
            Gets or sets the product variant identifer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PricelistId">
            <summary>
            Gets or sets the pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PriceAdjustmentTypeId">
            <summary>
            Gets or sets the type of price adjustment (if used) (relative or absolute)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductVariantPricelist.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice">
            <summary>
            Represents a tier price
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.#ctor">
            <summary>
            Creates a new instance of the DBTierPrice class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.TierPriceId">
            <summary>
            Gets or sets the tier price identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBTierPrice.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice">
            <summary>
            Represents a product price by customer role
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice.#ctor">
            <summary>
            Creates a new instance of the DBCustomerRoleProductPrice class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice.CustomerRoleProductPriceId">
            <summary>
            Gets or sets the identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPrice.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBCustomerRoleProductPriceCollection">
            <summary>
            Represents a collection of product prices by customer role
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductTagCollection">
            <summary>
            Represents a product tag collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue">
            <summary>
            Represents a checkout attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.#ctor">
            <summary>
            Creates a new instance of the DBCheckoutAttributeValue class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.CheckoutAttributeValueId">
            <summary>
            Gets or sets the checkout attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.CheckoutAttributeId">
            <summary>
            Gets or sets the checkout attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.Name">
            <summary>
            Gets or sets the checkout attribute name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValue.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute">
            <summary>
            Represents a checkout attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.#ctor">
            <summary>
            Creates a new instance of the DBCheckoutAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.CheckoutAttributeId">
            <summary>
            Gets or sets the checkout attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.TextPrompt">
            <summary>
            Gets or sets the text prompt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.ShippableProductRequired">
            <summary>
            Gets or sets a value indicating whether shippable products are required in order to display this attribute
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the attribute is marked as tax exempt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard">
            <summary>
            Represents a gift card
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.#ctor">
            <summary>
            Creates a new instance of the DBGiftCard class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.GiftCardId">
            <summary>
            Gets or sets the gift card identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.PurchasedOrderProductVariantId">
            <summary>
            Gets or sets the purchased order product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.Amount">
            <summary>
            Gets or sets the amount
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.IsGiftCardActivated">
            <summary>
            Gets or sets a value indicating whether gift card is activated
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.GiftCardCouponCode">
            <summary>
            Gets or sets a gift card coupon code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.RecipientName">
            <summary>
            Gets or sets a recipient name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.RecipientEmail">
            <summary>
            Gets or sets a recipient email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.SenderName">
            <summary>
            Gets or sets a sender name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.SenderEmail">
            <summary>
            Gets or sets a sender emai
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.Message">
            <summary>
            Gets or sets a message
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.IsRecipientNotified">
            <summary>
            Gets or sets a value indicating whether recipient is notified
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBGiftCard.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider">
            <summary>
            Acts as a base class for deriving custom maintenance provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider.Reindex">
            <summary>
            Reindex
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider.Backup(System.String)">
            <summary>
            Backup database
            </summary>
            <param name="fileName">Destination file name</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.DBMaintenanceProvider.RestoreBackup(System.String)">
            <summary>
            Restore database
            </summary>
            <param name="fileName">Target file name</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1">
            <summary>
            Provider nanager
            </summary>
            <typeparam name="T">T</typeparam>
        </member>
        <member name="F:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.s_Initialized">
            <summary>
            Initialized
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.s_InitializeException">
            <summary>
            Exception
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.s_lock">
            <summary>
            Lock object
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.s_Providers">
            <summary>
            Providers
            </summary>
        </member>
        <member name="F:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.s_Provider">
            <summary>
            Provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.#cctor">
            <summary>
            Initializes a new instance of the DBProviderManager class.
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.GetSection``1">
            <summary>
            Returns the configuration section.
            </summary>
            <typeparam name="T">Type</typeparam>
            <returns>The ConfigurationSection object.</returns>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.Provider">
            <summary>
            Gets a reference to the default provider for the application.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.DBProviderManager`1.Providers">
            <summary>
            Gets a collection of the providers for the application.
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll">
            <summary>
            Represents a poll
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.#ctor">
            <summary>
            Creates a new instance of the DBPoll class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.PollId">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPoll.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog">
            <summary>
            Represents a search log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.#ctor">
            <summary>
            Creates a new instance of the DBSearchLog class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.SearchLogId">
            <summary>
            Gets or sets the search log identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.SearchTerm">
            <summary>
            Gets or sets the search term
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLog.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse">
            <summary>
            Represents an warehouse
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.#ctor">
            <summary>
            Creates a new instance of the DBWarehouse class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.StateProvince">
            <summary>
            Gets or sets the state/province
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Warehouses.DBWarehouse.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate">
            <summary>
            Represents a category template
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.#ctor">
            <summary>
            Creates a new instance of the DBCategoryTemplate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.CategoryTemplateId">
            <summary>
            Gets or sets the category template identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.TemplatePath">
            <summary>
            Gets or sets the template path
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Templates.DBCategoryTemplate.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight">
            <summary>
            Represents a DBShippingByWeight
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.#ctor">
            <summary>
            Creates a new instance of the DBShippingByWeight class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingByWeightId">
            <summary>
            Gets or sets the ShippingByWeight identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingMethodId">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.From">
            <summary>
            Gets or sets the "from" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.To">
            <summary>
            Gets or sets the "to" value
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingChargePercentage">
            <summary>
            Gets or sets the shipping charge percentage
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeight.ShippingChargeAmount">
            <summary>
            Gets or sets the shipping charge amount
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountTypeCollection">
            <summary>
            Represents a discount type collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValueCollection">
            <summary>
            Represents a product variant attribute value collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue">
            <summary>
            Represents a product variant attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttributeValue class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.ProductVariantAttributeValueId">
            <summary>
            Gets or sets the product variant attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.ProductVariantAttributeId">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.Name">
            <summary>
            Gets or sets the product variant attribute name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeValue.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem">
            <summary>
            Represents a shopping cart item
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.#ctor">
            <summary>
            Creates a new instance of DBShoppingCartItem class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ShoppingCartItemId">
            <summary>
            Gets or sets the shopping cart item identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ShoppingCartTypeId">
            <summary>
            Gets or sets the shopping cart type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.CustomerSessionGuid">
            <summary>
            Gets or sets the customer session identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.AttributesXml">
            <summary>
            Gets or sets the product variant attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.CustomerEnteredPrice">
            <summary>
            Gets or sets the price enter by a customer
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartItem.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider">
            <summary>
            Acts as a base class for deriving custom tax provider provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.DeleteTaxProvider(System.Int32)">
            <summary>
            Deletes a tax provider
            </summary>
            <param name="taxProviderId">Tax provider identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.GetTaxProviderById(System.Int32)">
            <summary>
            Gets a tax provider
            </summary>
            <param name="taxProviderId">Tax provider identifier</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.GetAllTaxProviders">
            <summary>
            Gets all tax providers
            </summary>
            <returns>Tax rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.InsertTaxProvider(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a tax provider
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="displayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxProviderProvider.UpdateTaxProvider(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the tax provider
            </summary>
            <param name="taxProviderId">The tax provider identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="displayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider">
            <summary>
            Acts as a base class for deriving custom product attribute provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductAttribute(System.Int32)">
            <summary>
            Deletes a product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetAllProductAttributes(System.Int32)">
            <summary>
            Gets all product attributes
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a product attribute 
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductAttribute(System.String,System.String)">
            <summary>
            Inserts a product attribute
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductAttribute(System.Int32,System.String,System.String)">
            <summary>
            Updates the product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized product attribute by id
            </summary>
            <param name="productAttributeLocalizedId">Localized product attribute identifier</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductAttributeLocalizedByProductAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product attribute by product attribute id and language id
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductAttributeLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized product attribute
            </summary>
            <param name="productAttributeLocalizedId">Localized product attribute identifier</param>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductVariantAttribute(System.Int32)">
            <summary>
            Deletes a product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">Product variant attribute mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributesByProductVariantId(System.Int32)">
            <summary>
            Gets product variant attribute mappings by product identifier
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeById(System.Int32)">
            <summary>
            Gets a product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">Product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttribute(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a product variant attribute mapping
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productAttributeId">The product attribute identifier</param>
            <param name="textPrompt">The text prompt</param>
            <param name="isRequired">The value indicating whether the entity is required</param>
            <param name="attributeControlTypeId">The attribute control type identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttribute(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productAttributeId">The product attribute identifier</param>
            <param name="textPrompt">The text prompt</param>
            <param name="isRequired">The value indicating whether the entity is required</param>
            <param name="attributeControlTypeId">The attribute control type identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductVariantAttributeValue(System.Int32)">
            <summary>
            Deletes a product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValues(System.Int32,System.Int32)">
            <summary>
            Gets product variant attribute values by product identifier
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValueById(System.Int32,System.Int32)">
            <summary>
            Gets a product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a product variant attribute value
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="name">The product variant attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">The product variant attribute value identifier</param>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="name">The product variant attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValueLocalizedById(System.Int32)">
            <summary>
            Gets localized product variant attribute value by id
            </summary>
            <param name="productVariantAttributeValueLocalizedId">Localized product variant attribute value identifier</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeValueLocalizedByProductVariantAttributeValueIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product variant attribute value by product variant attribute value id and language id
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttributeValueLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttributeValueLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized product variant attribute value
            </summary>
            <param name="productVariantAttributeValueLocalizedId">Localized product variant attribute value identifier</param>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.DeleteProductVariantAttributeCombination(System.Int32)">
            <summary>
            Deletes a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetAllProductVariantAttributeCombinations(System.Int32)">
            <summary>
            Gets all product variant attribute combinations
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>Product variant attribute combination collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.GetProductVariantAttributeCombinationById(System.Int32)">
            <summary>
            Gets a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.InsertProductVariantAttributeCombination(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a product variant attribute combination
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The attributes</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductAttributeProvider.UpdateProductVariantAttributeCombination(System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The attributes</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider">
            <summary>
            Acts as a base class for deriving custom poll provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollById(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="pollId">The poll identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollBySystemKeyword(System.String)">
            <summary>
            Gets a poll
            </summary>
            <param name="systemKeyword">Poll system keyword</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPolls(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets poll collection
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="pollCount">Poll count to load. 0 if you want to get all polls</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.DeletePoll(System.Int32)">
            <summary>
            Deletes a poll
            </summary>
            <param name="pollId">The poll identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.InsertPoll(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a poll
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.UpdatePoll(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the poll
            </summary>
            <param name="pollId">The poll identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.PollVotingRecordExists(System.Int32,System.Int32)">
            <summary>
            Is voting record already exists
            </summary>
            <param name="pollId">Poll identifier</param>
            <param name="customerId">Customer identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollAnswerById(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="pollAnswerId">Poll answer identifier</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.GetPollAnswersByPollId(System.Int32)">
            <summary>
            Gets a poll answers by poll identifier
            </summary>
            <param name="pollId">Poll identifier</param>
            <returns>Poll answer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.DeletePollAnswer(System.Int32)">
            <summary>
            Deletes a poll answer
            </summary>
            <param name="pollAnswerId">Poll answer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.InsertPollAnswer(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a poll answer
            </summary>
            <param name="pollId">The poll identifier</param>
            <param name="name">The poll answer name</param>
            <param name="count">The current count</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.UpdatePollAnswer(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Updates the poll answer
            </summary>
            <param name="pollAnswerId">The poll answer identifier</param>
            <param name="pollId">The poll identifier</param>
            <param name="name">The poll answer name</param>
            <param name="count">The current count</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollProvider.CreatePollVotingRecord(System.Int32,System.Int32)">
            <summary>
            Creates a poll voting record
            </summary>
            <param name="pollAnswerId">The poll answer identifier</param>
            <param name="customerId">Customer identifer</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBannedIpNetworkCollection">
            <summary>
            Represents an IP network collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider">
            <summary>
            Acts as a base class for deriving custom campaign provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.GetCampaignById(System.Int32)">
            <summary>
            Gets a campaign by campaign identifier
            </summary>
            <param name="campaignId">Campaign identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="campaignId">Campaign identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.GetAllCampaigns">
            <summary>
            Gets all campaigns
            </summary>
            <returns>Campaign collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.InsertCampaign(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a campaign
            </summary>
            <param name="name">The name</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.DBCampaignProvider.UpdateCampaign(System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the campaign
            </summary>
            <param name="campaignId">The campaign identifier</param>
            <param name="name">The name</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter">
            <summary>
            Represents a specification attribute option filter
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeName">
            <summary>
            Gets or sets the SpecificationAttributeName
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeOptionId">
            <summary>
            Gets or sets the specification attribute option identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeOptionFilter.SpecificationAttributeOptionName">
            <summary>
            Gets or sets the SpecificationAttributeOptionName
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist">
            <summary>
            Represents a pricelist
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.#ctor">
            <summary>
            Creates a new instance of the DBPricelist class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PricelistId">
            <summary>
            Gets or sets the Pricelist identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ExportModeId">
            <summary>
            Gets or sets the Mode of list creation (Export all, assigned only, assigned only with special price)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ExportTypeId">
            <summary>
            Gets or sets the CSV or XML
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.AffiliateId">
            <summary>
            Gets or sets the Affiliate connected to this pricelist (optional), links will be created with AffiliateId
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.DisplayName">
            <summary>
            Gets or sets the Displayedname
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.ShortName">
            <summary>
            Gets or sets the shortname to identify the pricelist
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PricelistGuid">
            <summary>
            Gets or sets the unique identifier to get pricelist "anonymous"
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.CacheTime">
            <summary>
            Gets or sets the how long will the pricelist be in cached before new creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.FormatLocalization">
            <summary>
            Gets or sets the what localization will be used (numeric formats, etc.) en-US, de-DE etc.
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Description">
            <summary>
            Gets or sets the Displayed description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.AdminNotes">
            <summary>
            Gets or sets the Admin can put some notes here, not displayed in public
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Header">
            <summary>
            Gets or sets the Headerline of the exported file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Body">
            <summary>
            Gets or sets the template for an exportet productvariant, uses delimiters and replacement strings
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.Footer">
            <summary>
            Gets or sets the Footer line of the exportet file (plain text)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PriceAdjustmentTypeId">
            <summary>
            Gets or sets the type of price adjustment (if used) (relative or absolute)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.PriceAdjustment">
            <summary>
            Gets or sets the price will be adjusted by this amount (in accordance with PriceAdjustmentType)
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.OverrideIndivAdjustment">
            <summary>
            Gets or sets the use individual adjustment, if available, or override
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.CreatedOn">
            <summary>
            Gets or sets the when was this record originally created
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBPricelist.UpdatedOn">
            <summary>
            Gets or sets the last time this recordset was updated
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRecurringPaymentCollection">
            <summary>
            Represents a recurring payment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBRewardPointsHistoryCollection">
            <summary>
            Represents a reward points history collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBAddressCollection">
            <summary>
            Represents an address collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider">
            <summary>
            Acts as a base class for deriving custom forum provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteForumGroup(System.Int32)">
            <summary>
            Deletes a forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetForumGroupById(System.Int32)">
            <summary>
            Gets a forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllForumGroups">
            <summary>
            Gets all forum groups
            </summary>
            <returns>Forum groups</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertForumGroup(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum group
            </summary>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForumGroup(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteForum(System.Int32)">
            <summary>
            Deletes a forum
            </summary>
            <param name="forumId">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetForumById(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="forumId">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllForumsByGroupId(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <returns>Forums</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertForum(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="numTopics">The number of topics</param>
            <param name="numPosts">The number of posts</param>
            <param name="lastTopicId">The last topic identifier</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForum(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="numTopics">The number of topics</param>
            <param name="numPosts">The number of posts</param>
            <param name="lastTopicId">The last topic identifier</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateForumStats(System.Int32)">
            <summary>
            Update forum stats
            </summary>
            <param name="forumId">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="forumTopicId">The topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetTopicById(System.Int32,System.Boolean)">
            <summary>
            Gets a topic
            </summary>
            <param name="forumTopicId">The topic identifier</param>
            <param name="increaseViews">The value indicating whether to increase topic views</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllTopics(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all topics
            </summary>
            <param name="forumId">The forum group identifier</param>
            <param name="userId">The user identifier</param>
            <param name="keywords">Keywords</param>
            <param name="searchPosts">A value indicating whether to search in posts</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetActiveTopics(System.Int32,System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="forumId">The forum group identifier</param>
            <param name="topicCount">Topic count. 0 if you want to get all topics</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertTopic(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Inserts a topic
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="userId">The user identifier</param>
            <param name="topicTypeId">The topic type identifier</param>
            <param name="subject">The subject</param>
            <param name="numPosts">The number of posts</param>
            <param name="views">The number of views</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateTopic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Updates the topic
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="userId">The user identifier</param>
            <param name="topicTypeId">The topic type identifier</param>
            <param name="subject">The subject</param>
            <param name="numPosts">The number of posts</param>
            <param name="views">The number of views</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
            <param name="forumPostId">The post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetPostById(System.Int32)">
            <summary>
            Gets a post
            </summary>
            <param name="forumPostId">The post identifier</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllPosts(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="keywords">Keywords</param>
            <param name="ascSort">Sort order</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertPost(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a post
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="text">The text</param>
            <param name="ipAddress">The IP address</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdatePost(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the post
            </summary>
            <param name="forumPostId">The forum post identifier</param>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="text">The text</param>
            <param name="ipAddress">The IP address</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeletePrivateMessage(System.Int32)">
            <summary>
            Deletes a private message
            </summary>
            <param name="forumPrivateMessageId">The private message identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetPrivateMessageById(System.Int32)">
            <summary>
            Gets a private message
            </summary>
            <param name="forumPrivateMessageId">The private message identifier</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllPrivateMessages(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets private messages
            </summary>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="isRead">A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages</param>
            <param name="isDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="isDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="keywords">Keywords</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Private messages</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertPrivateMessage(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a private message
            </summary>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="subject">The subject</param>
            <param name="text">The text</param>
            <param name="isRead">The value indivating whether message is read</param>
            <param name="isDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="isDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdatePrivateMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the private message
            </summary>
            <param name="privateMessageId">The private message identifier</param>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="subject">The subject</param>
            <param name="text">The text</param>
            <param name="isRead">The value indivating whether message is read</param>
            <param name="isDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="isDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.DeleteSubscription(System.Int32)">
            <summary>
            Deletes a forum subscription
            </summary>
            <param name="forumSubscriptionId">The forum subscription identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetSubscriptionById(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="forumSubscriptionId">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetSubscriptionByGuid(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.InsertSubscription(System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a forum subscription
            </summary>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumProvider.UpdateSubscription(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the forum subscription
            </summary>
            <param name="subscriptionId">The forum subscription identifier</param>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogCommentCollection">
            <summary>
            Represents a blog comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingCollection">
            <summary>
            Represents a setting collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBSearchLogCollection">
            <summary>
            Represents a search log item collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBActivityLogCollection">
            <summary>
            Represents an activity log collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory">
            <summary>
            Represents a tax category
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.#ctor">
            <summary>
            Creates a new instance of the DBTaxCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxCategory.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBRelatedProductCollection">
            <summary>
            Represents a related product collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductReviewCollection">
            <summary>
            Represents a product review collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType">
            <summary>
            Represents a credit card type
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.#ctor">
            <summary>
            Creates a new instance of the DBCreditCardType class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.CreditCardTypeId">
            <summary>
            Gets or sets the credit card type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardType.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderNoteCollection">
            <summary>
            Represents an order note collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBCountryCollection">
            <summary>
            Represents a country collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider">
            <summary>
            Represents a banned IP address
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpAddressById(System.Int32)">
            <summary>
            Gets an IP address by its identifier
            </summary>
            <param name="bannedIpAddressId">IP Address unique identifier</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpAddressAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.InsertBannedIpAddress(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP address
            </summary>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.UpdateBannedIpAddress(System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP address
            </summary>
            <param name="bannedIpAddressId">IP address unique identifier</param>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was last updated</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.DeleteBannedIpAddress(System.Int32)">
            <summary>
            Deletes an IP address
            </summary>
            <param name="bannedIpAddressId">IP address unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpNetworkById(System.Int32)">
            <summary>
            Gets an IP network by its Id
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.GetIpNetworkAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.InsertBannedIpNetwork(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP network
            </summary>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.UpdateBannedIpNetwork(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP network
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBBlacklistProvider.DeleteBannedIpNetwork(System.Int32)">
            <summary>
            Deletes an IP network
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail">
            <summary>
            Represents a queued email
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.#ctor">
            <summary>
            Creates a new instance of the DBQueuedEmail class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.QueuedEmailId">
            <summary>
            Gets or sets the ueued email identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Priority">
            <summary>
            Gets or sets the priority
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.From">
            <summary>
            Gets or sets the From property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.FromName">
            <summary>
            Gets or sets the FromName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.To">
            <summary>
            Gets or sets the To property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.ToName">
            <summary>
            Gets or sets the ToName property
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.CC">
            <summary>
            Gets or sets the CC
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Bcc">
            <summary>
            Gets or sets the Bcc
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.CreatedOn">
            <summary>
            Gets or sets the date and time of item creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.SendTries">
            <summary>
            Gets or sets the send tries
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Messages.DBQueuedEmail.SentOn">
            <summary>
            Gets or sets the sent date and time
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductTag">
            <summary>
            Represents a product tag
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductTag.#ctor">
            <summary>
            Creates a new instance of the DBProductTag class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductTag.ProductTagId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductTag.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductTag.ProductCount">
            <summary>
            Gets or sets the tagged product count
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized">
            <summary>
            Represents a localized checkout attribute value
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized.#ctor">
            <summary>
            Creates a new instance of the DBCheckoutAttributeValueLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized.CheckoutAttributeValueLocalizedId">
            <summary>
            Gets or sets the localized checkout attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized.CheckoutAttributeValueId">
            <summary>
            Gets or sets the checkout attribute value identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeValueLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerRoleCollection">
            <summary>
            Represents a customer role collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute">
            <summary>
            Represents a customer attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.#ctor">
            <summary>
            Creates a new instance of the DBCustomerAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.CustomerAttributeId">
            <summary>
            Gets or sets the customer attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.CustomerManagement.DBCustomerAttribute.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic">
            <summary>
            Represents a forum topic
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.#ctor">
            <summary>
            Creates a new instance of the DBForumTopic class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.ForumTopicId">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.ForumId">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.UserId">
            <summary>
            Gets or sets the user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.TopicTypeId">
            <summary>
            Gets or sets the topic type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.Views">
            <summary>
            Gets or sets the number of views
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostId">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostUserId">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumTopic.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRateCollection">
            <summary>
            Represents a tax rate collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute">
            <summary>
            Represents a specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the DBSpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.SpecificationAttributeId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture">
            <summary>
            Represents a product picture mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.#ctor">
            <summary>
            Creates a new instance of the DBProductPicture class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.ProductPictureId">
            <summary>
            Gets or sets the ProductPicture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.DBProductPicture.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider">
            <summary>
            Acts as a base class for deriving custom state/province provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.DeleteStateProvince(System.Int32)">
            <summary>
            Deletes a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvinceById(System.Int32)">
            <summary>
            Gets a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvinceByAbbreviation(System.String)">
            <summary>
            Gets a state/province 
            </summary>
            <param name="abbreviation">The state/province abbreviation</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.GetStateProvincesByCountryId(System.Int32)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="countryId">Country identifier</param>
            <returns>State/province collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.InsertStateProvince(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a state/province
            </summary>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="abbreviation">The abbreviation</param>
            <param name="displayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvinceProvider.UpdateStateProvince(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="abbreviation">The abbreviation</param>
            <param name="displayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider">
            <summary>
            Acts as a base class for deriving custom payment status provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider.GetPaymentStatusById(System.Int32)">
            <summary>
            Gets a payment status by identifier
            </summary>
            <param name="paymentStatusId">payment status identifier</param>
            <returns>Payment status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentStatusProvider.GetAllPaymentStatuses">
            <summary>
            Gets all payment statuses
            </summary>
            <returns>Payment status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider">
            <summary>
            Acts as a base class for deriving custom log provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.DeleteLog(System.Int32)">
            <summary>
            Deletes a log item
            </summary>
            <param name="logId">Log item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.ClearLog">
            <summary>
            Clears a log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.GetAllLogs">
            <summary>
            Gets all log items
            </summary>
            <returns>Log item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.GetLogById(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="logId">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.DBLogProvider.InsertLog(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a log item
            </summary>
            <param name="logTypeId">Log item type identifier</param>
            <param name="severity">The severity</param>
            <param name="message">The short message</param>
            <param name="exception">The full exception</param>
            <param name="ipAddress">The IP address</param>
            <param name="customerId">The customer identifier</param>
            <param name="pageUrl">The page URL</param>
            <param name="referrerUrl">The referrer URL</param>
            <param name="createdOn">The date and time of instance creationL</param>
            <returns>Log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized">
            <summary>
            Represents a localized checkout attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.#ctor">
            <summary>
            Creates a new instance of the DBCheckoutAttributeLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.CheckoutAttributeLocalizedId">
            <summary>
            Gets or sets the localized checkout attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.CheckoutAttributeId">
            <summary>
            Gets or sets the checkout attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBCheckoutAttributeLocalized.TextPrompt">
            <summary>
            Gets or sets the text prompt
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider">
            <summary>
            Acts as a base class for deriving custom order provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderById(System.Int32)">
            <summary>
            Gets an order
            </summary>
            <param name="orderId">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderByGuid(System.Guid)">
            <summary>
            Gets an order
            </summary>
            <param name="orderGuid">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.SearchOrders(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search orders
            </summary>
            <param name="startTime">Order start time; null to load all orders</param>
            <param name="endTime">Order end time; null to load all orders</param>
            <param name="customerEmail">Customer email</param>
            <param name="orderStatusId">Order status identifier; null to load all orders</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all orders</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all orders</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrdersByCustomerId(System.Int32)">
            <summary>
            Gets all orders by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderByAuthorizationTransactionIdAndPaymentMethodId(System.String,System.Int32)">
            <summary>
            Gets an order by authorization transaction identifier
            </summary>
            <param name="authorizationTransactionId">Authorization transaction identifier</param>
            <param name="paymentMethodId">Payment method identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrdersByAffiliateId(System.Int32)">
            <summary>
            Gets all orders by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrder(System.Guid,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts an order
            </summary>
            <param name="orderGuid">The order identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="customerLanguageId">The customer language identifier</param>
            <param name="customerTaxDisplayTypeId">The customer tax display type identifier</param>
            <param name="customerIP">The customer IP address</param>
            <param name="orderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="orderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="orderShippingInclTax">The order shipping (incl tax)</param>
            <param name="orderShippingExclTax">The order shipping (excl tax)</param>
            <param name="paymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="paymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="orderTax">The order tax</param>
            <param name="orderTotal">The order total</param>
            <param name="orderDiscount">The order discount</param>
            <param name="orderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="orderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="orderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="orderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="orderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="orderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="orderDiscountInCustomerCurrency">The order discount (customer currency)</param>
            <param name="checkoutAttributeDescription">The checkout attribute description</param>
            <param name="checkoutAttributesXml">The checkout attributes in XML format</param>
            <param name="customerCurrencyCode">The customer currency code</param>
            <param name="orderWeight">The order weight</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="orderStatusId">The order status identifier</param>
            <param name="allowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="cardType">The card type</param>
            <param name="cardName">The card name</param>
            <param name="cardNumber">The card number</param>
            <param name="maskedCreditCardNumber">The masked credit card number</param>
            <param name="cardCvv2">The card CVV2</param>
            <param name="cardExpirationMonth">The card expiration month</param>
            <param name="cardExpirationYear">The card expiration year</param>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="paymentMethodName">The payment method name</param>
            <param name="authorizationTransactionId">The authorization transaction identifier</param>
            <param name="authorizationTransactionCode">The authorization transaction code</param>
            <param name="authorizationTransactionResult">The authorization transaction result</param>
            <param name="captureTransactionId">The capture transaction identifier</param>
            <param name="captureTransactionResult">The capture transaction result</param>
            <param name="subscriptionTransactionId">The subscription transaction identifier</param>
            <param name="purchaseOrderNumber">The purchase order number</param>
            <param name="paymentStatusId">The payment status identifier</param>
            <param name="paidDate">The paid date and time</param>
            <param name="billingFirstName">The billing first name</param>
            <param name="billingLastName">The billing last name</param>
            <param name="billingPhoneNumber">he billing phone number</param>
            <param name="billingEmail">The billing email</param>
            <param name="billingFaxNumber">The billing fax number</param>
            <param name="billingCompany">The billing company</param>
            <param name="billingAddress1">The billing address 1</param>
            <param name="billingAddress2">The billing address 2</param>
            <param name="billingCity">The billing city</param>
            <param name="billingStateProvince">The billing state/province</param>
            <param name="billingStateProvinceId">The billing state/province identifier</param>
            <param name="billingZipPostalCode">The billing zip/postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="billingCountryId">The billing country identifier</param>
            <param name="shippingStatusId">The shipping status identifier</param>
            <param name="shippingFirstName">The shipping first name</param>
            <param name="shippingLastName">The shipping last name</param>
            <param name="shippingPhoneNumber">The shipping phone number</param>
            <param name="shippingEmail">The shipping email</param>
            <param name="shippingFaxNumber">The shipping fax number</param>
            <param name="shippingCompany">The shipping  company</param>
            <param name="shippingAddress1">The shipping address 1</param>
            <param name="shippingAddress2">The shipping address 2</param>
            <param name="shippingCity">The shipping city</param>
            <param name="shippingStateProvince">The shipping state/province</param>
            <param name="shippingStateProvinceId">The shipping state/province identifier</param>
            <param name="shippingZipPostalCode">The shipping zip/postal code</param>
            <param name="shippingCountry">The shipping country</param>
            <param name="shippingCountryId">The shipping country identifier</param>
            <param name="shippingMethod">The shipping method</param>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="shippedDate">The shipped date and time</param>
            <param name="deliveryDate">The delivery date and time</param>
            <param name="trackingNumber">The tracking number of order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrder(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the order
            </summary>
            <param name="orderId">The order identifier</param>
            <param name="orderGuid">The order identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="customerLanguageId">The customer language identifier</param>
            <param name="customerTaxDisplayTypeId">The customer tax display type identifier</param>
            <param name="customerIP">The customer IP address</param>
            <param name="orderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="orderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="orderShippingInclTax">The order shipping (incl tax)</param>
            <param name="orderShippingExclTax">The order shipping (excl tax)</param>
            <param name="paymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="paymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="orderTax">The order tax</param>
            <param name="orderTotal">The order total</param>
            <param name="orderDiscount">The order discount</param>
            <param name="orderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="orderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="orderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="orderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="orderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="orderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="orderDiscountInCustomerCurrency">The order discount (customer currency)</param>
            <param name="checkoutAttributeDescription">The checkout attribute description</param>
            <param name="checkoutAttributesXml">The checkout attributes in XML format</param>
            <param name="customerCurrencyCode">The customer currency code</param>
            <param name="orderWeight">The order weight</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="orderStatusId">The order status identifier</param>
            <param name="allowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="cardType">The card type</param>
            <param name="cardName">The card name</param>
            <param name="cardNumber">The card number</param>
            <param name="maskedCreditCardNumber">The masked credit card number</param>
            <param name="cardCvv2">The card CVV2</param>
            <param name="cardExpirationMonth">The card expiration month</param>
            <param name="cardExpirationYear">The card expiration year</param>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="paymentMethodName">The payment method name</param>
            <param name="authorizationTransactionId">The authorization transaction identifier</param>
            <param name="authorizationTransactionCode">The authorization transaction code</param>
            <param name="authorizationTransactionResult">The authorization transaction result</param>
            <param name="captureTransactionId">The capture transaction identifier</param>
            <param name="captureTransactionResult">The capture transaction result</param>
            <param name="subscriptionTransactionId">The subscription transaction identifier</param>
            <param name="purchaseOrderNumber">The purchase order number</param>
            <param name="paymentStatusId">The payment status identifier</param>
            <param name="paidDate">The paid date and time</param>
            <param name="billingFirstName">The billing first name</param>
            <param name="billingLastName">The billing last name</param>
            <param name="billingPhoneNumber">he billing phone number</param>
            <param name="billingEmail">The billing email</param>
            <param name="billingFaxNumber">The billing fax number</param>
            <param name="billingCompany">The billing company</param>
            <param name="billingAddress1">The billing address 1</param>
            <param name="billingAddress2">The billing address 2</param>
            <param name="billingCity">The billing city</param>
            <param name="billingStateProvince">The billing state/province</param>
            <param name="billingStateProvinceId">The billing state/province identifier</param>
            <param name="billingZipPostalCode">The billing zip/postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="billingCountryId">The billing country identifier</param>
            <param name="shippingStatusId">The shipping status identifier</param>
            <param name="shippingFirstName">The shipping first name</param>
            <param name="shippingLastName">The shipping last name</param>
            <param name="shippingPhoneNumber">The shipping phone number</param>
            <param name="shippingEmail">The shipping email</param>
            <param name="shippingFaxNumber">The shipping fax number</param>
            <param name="shippingCompany">The shipping  company</param>
            <param name="shippingAddress1">The shipping address 1</param>
            <param name="shippingAddress2">The shipping address 2</param>
            <param name="shippingCity">The shipping city</param>
            <param name="shippingStateProvince">The shipping state/province</param>
            <param name="shippingStateProvinceId">The shipping state/province identifier</param>
            <param name="shippingZipPostalCode">The shipping zip/postal code</param>
            <param name="shippingCountry">The shipping country</param>
            <param name="shippingCountryId">The shipping country identifier</param>
            <param name="shippingMethod">The shipping method</param>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="shippedDate">The shipped date and time</param>
            <param name="deliveryDate">The delivery date and time</param>
            <param name="trackingNumber">The tracking number of order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderProductVariantById(System.Int32)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="orderProductVariantId">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteOrderProductVariant(System.Int32)">
            <summary>
            Delete an order product variant
            </summary>
            <param name="orderProductVariantId">Order product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderProductVariantByGuid(System.Guid)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="orderProductVariantGuid">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllOrderProductVariants(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets all order product variants
            </summary>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="startTime">Order start time; null to load all records</param>
            <param name="endTime">Order end time; null to load all records</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="loadDownloableProductsOnly">Value indicating whether to load downloadable products only</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrderProductVariant(System.Guid,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a order product variant
            </summary>
            <param name="orderProductVariantGuid">The order product variant identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="unitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="priceInclTax">The price in primary store currency (incl tax)</param>
            <param name="priceExclTax">The price in primary store currency (excl tax)</param>
            <param name="unitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="priceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="priceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="attributeDescription">The attribute description</param>
            <param name="attributesXml">The attribute description in XML format</param>
            <param name="quantity">The quantity</param>
            <param name="discountAmountInclTax">The discount amount (incl tax)</param>
            <param name="discountAmountExclTax">The discount amount (excl tax)</param>
            <param name="downloadCount">The download count</param>
            <param name="isDownloadActivated">The value indicating whether download is activated</param>
            <param name="licenseDownloadId">A license download identifier (in case this is a downloadable product)</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrderProductVariant(System.Int32,System.Guid,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the order product variant
            </summary>
            <param name="orderProductVariantId">The order product variant identifier</param>
            <param name="orderProductVariantGuid">The order product variant identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="unitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="priceInclTax">The price in primary store currency (incl tax)</param>
            <param name="priceExclTax">The price in primary store currency (excl tax)</param>
            <param name="unitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="priceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="priceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="attributeDescription">The attribute description</param>
            <param name="attributesXml">The attribute description in XML format</param>
            <param name="quantity">The quantity</param>
            <param name="discountAmountInclTax">The discount amount (incl tax)</param>
            <param name="discountAmountExclTax">The discount amount (excl tax)</param>
            <param name="downloadCount">The download count</param>
            <param name="isDownloadActivated">The value indicating whether download is activated</param>
            <param name="licenseDownloadId">A license download identifier (in case this is a downloadable product)</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderNoteById(System.Int32)">
            <summary>
            Gets an order note
            </summary>
            <param name="orderNoteId">Order note identifier</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderNoteByOrderId(System.Int32,System.Boolean)">
            <summary>
            Gets an order notes by order identifier
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="showHidden">A value indicating whether all orders should be loaded</param>
            <returns>Order note collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteOrderNote(System.Int32)">
            <summary>
            Deletes an order note
            </summary>
            <param name="orderNoteId">Order note identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertOrderNote(System.Int32,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts an order note
            </summary>
            <param name="orderId">The order identifier</param>
            <param name="note">The note</param>
            <param name="displayToCustomer">A value indicating whether the customer can see a note</param>
            <param name="createdOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateOrderNote(System.Int32,System.Int32,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the order note
            </summary>
            <param name="orderNoteId">The order note identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="note">The note</param>
            <param name="displayToCustomer">A value indicating whether the customer can see a note</param>
            <param name="createdOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderStatusById(System.Int32)">
            <summary>
            Gets an order status by Id
            </summary>
            <param name="orderStatusId">Order status identifier</param>
            <returns>Order status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllOrderStatuses">
            <summary>
            Gets all order statuses
            </summary>
            <returns>Order status collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetOrderReport(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an order report
            </summary>
            <param name="orderStatusId">Order status identifier; null to load all orders</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all orders</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all orders</param>
            <returns>IdataReader</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.OrderProductVariantReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="billingCountryId">Billing country identifier; null to load all records</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.BestSellersReport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the bests sellers report
            </summary>
            <param name="lastDays">Last number of days</param>
            <param name="recordsToReturn">Number of products to return</param>
            <param name="orderBy">1 - order by total count, 2 - Order by total amount</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.OrderAverageReport(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Get order average report
            </summary>
            <param name="orderStatusId">Order status identifier</param>
            <param name="startTime">Start date</param>
            <param name="endTime">End date</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetRecurringPaymentById(System.Int32)">
            <summary>
            Gets a recurring payment
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertRecurringPayment(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a recurring payment
            </summary>
            <param name="initialOrderId">The initial order identifier</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="startDate">The start date</param>
            <param name="isActive">The value indicating whether the payment is active</param>
            <param name="deleted">The value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateRecurringPayment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the recurring payment
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="initialOrderId">The initial order identifier</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="startDate">The start date</param>
            <param name="isActive">The value indicating whether the payment is active</param>
            <param name="deleted">The value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.SearchRecurringPayments(System.Boolean,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Search recurring payments
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="customerId">The customer identifier; 0 to load all records</param>
            <param name="initialOrderId">The initial order identifier; 0 to load all records</param>
            <param name="initialOrderStatusId">Initial order status identifier; null to load all records</param>
            <returns>Recurring payment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteRecurringPaymentHistory(System.Int32)">
            <summary>
            Deletes a recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">Recurring payment history identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetRecurringPaymentHistoryById(System.Int32)">
            <summary>
            Gets a recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">The recurring payment history identifier</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertRecurringPaymentHistory(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a recurring payment history
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateRecurringPaymentHistory(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">The recurring payment history identifier</param>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.SearchRecurringPaymentHistory(System.Int32,System.Int32)">
            <summary>
            Search recurring payment history
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier; 0 to load all records</param>
            <param name="orderId">The order identifier; 0 to load all records</param>
            <returns>Recurring payment history collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteGiftCard(System.Int32)">
            <summary>
            Deletes a gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetGiftCardById(System.Int32)">
            <summary>
            Gets a gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <returns>Gift card entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllGiftCards(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Gets all gift cards
            </summary>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="startTime">Order start time; null to load all records</param>
            <param name="endTime">Order end time; null to load all records</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated; null to load all records</param>
            <param name="giftCardCouponCode">Gift card coupon code; null or string.empty to load all records</param>
            <returns>Gift cards</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertGiftCard(System.Int32,System.Decimal,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts a gift card
            </summary>
            <param name="purchasedOrderProductVariantId">Purchased order product variant identifier</param>
            <param name="amount">Amount</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated</param>
            <param name="giftCardCouponCode">Gift card coupon code</param>
            <param name="recipientName">Recipient name</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender email</param>
            <param name="message">Message</param>
            <param name="isRecipientNotified">Value indicating whether recipient is notified</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateGiftCard(System.Int32,System.Int32,System.Decimal,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <param name="purchasedOrderProductVariantId">Purchased order product variant identifier</param>
            <param name="amount">Amount</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated</param>
            <param name="giftCardCouponCode">Gift card coupon code</param>
            <param name="recipientName">Recipient name</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender email</param>
            <param name="message">Message</param>
            <param name="isRecipientNotified">Value indicating whether recipient is notified</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteGiftCardUsageHistory(System.Int32)">
            <summary>
            Deletes a gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetGiftCardUsageHistoryById(System.Int32)">
            <summary>
            Gets a gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllGiftCardUsageHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all gift card usage history entries
            </summary>
            <param name="giftCardId">Gift card identifier identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="orderId">Order identifier; null to load all records</param>
            <returns>Gift card usage history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertGiftCardUsageHistory(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
            Inserts a gift card usage history entry
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="usedValue">Used value</param>
            <param name="usedValueInCustomerCurrency">Used value (customer currency)</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateGiftCardUsageHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
            Updates the gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
            <param name="giftCardId">Gift card identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="usedValue">Used value</param>
            <param name="usedValueInCustomerCurrency">Used value (customer currency)</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.DeleteRewardPointsHistory(System.Int32)">
            <summary>
            Deletes a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetRewardPointsHistoryById(System.Int32)">
            <summary>
            Gets a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.GetAllRewardPointsHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all reward point history entries
            </summary>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Reward point history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.InsertRewardPointsHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a reward point history entry
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="points">Points redeemed/added</param>
            <param name="pointsBalance">Points balance</param>
            <param name="usedAmount">Used amount</param>
            <param name="usedAmountInCustomerCurrency">Used amount (customer currency)</param>
            <param name="customerCurrencyCode">Customer currency code</param>
            <param name="message">Customer currency code</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderProvider.UpdateRewardPointsHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.String,System.String,System.DateTime)">
            <summary>
            Updates a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="points">Points redeemed/added</param>
            <param name="pointsBalance">Points balance</param>
            <param name="usedAmount">Used amount</param>
            <param name="usedAmountInCustomerCurrency">Used amount (customer currency)</param>
            <param name="customerCurrencyCode">Customer currency code</param>
            <param name="message">Customer currency code</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.DBProductPictureCollection">
            <summary>
            Represents a product picture collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCollection">
            <summary>
            Represents a product variant attribute mapping collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.DBMeasureWeightCollection">
            <summary>
            Represents a measure weight collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider">
            <summary>
            Acts as a base class for deriving custom shipping rate computation method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.DeleteShippingRateComputationMethod(System.Int32)">
            <summary>
            Deletes a shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">Shipping rate computation method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.GetShippingRateComputationMethodById(System.Int32)">
            <summary>
            Gets a shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">Shipping rate computation method identifier</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.GetAllShippingRateComputationMethods(System.Boolean)">
            <summary>
            Gets all shipping rate computation methods
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.InsertShippingRateComputationMethod(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a shipping rate computation method
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="isActive">The value indicating whether the method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingRateComputationMethodProvider.UpdateShippingRateComputationMethod(System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="isActive">The value indicating whether the method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider">
            <summary>
            Acts as a base class for deriving custom payment method provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.DeletePaymentMethod(System.Int32)">
            <summary>
            Deletes a payment method
            </summary>
            <param name="paymentMethodId">Payment method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetPaymentMethodById(System.Int32)">
            <summary>
            Gets a payment method
            </summary>
            <param name="paymentMethodId">Payment method identifier</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetPaymentMethodBySystemKeyword(System.String)">
            <summary>
            Gets a payment method
            </summary>
            <param name="systemKeyword">Payment method system keyword</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.GetAllPaymentMethods(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all payment methods
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="filterByCountryId">The country indentifier</param>
            <returns>Payment method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.InsertPaymentMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a payment method
            </summary>
            <param name="name">The name</param>
            <param name="visibleName">The visible name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="userTemplatePath">The user template path</param>
            <param name="className">The class name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="isActive">A value indicating whether the payment method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.UpdatePaymentMethod(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the payment method
            </summary>
            <param name="paymentMethodId">The payment method identifer</param>
            <param name="name">The name</param>
            <param name="visibleName">The visible name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="userTemplatePath">The user template path</param>
            <param name="className">The class name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="isActive">A value indicating whether the payment method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.InsertPaymentMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Inserts payment method country mapping
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.DoesPaymentMethodCountryMappingExist(System.Int32,System.Int32)">
            <summary>
            Checking whether the payment method country mapping exists
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>True if mapping exist, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBPaymentMethodProvider.DeletePaymentMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Deletes payment method country mapping
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider">
            <summary>
            Acts as a base class for deriving custom ACL provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.DeleteCustomerAction(System.Int32)">
            <summary>
            Deletes a customer action
            </summary>
            <param name="customerActionId">Customer action identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.GetCustomerActionById(System.Int32)">
            <summary>
            Gets a customer action by identifier
            </summary>
            <param name="customerActionId">Customer action identifier</param>
            <returns>Customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.GetAllCustomerActions">
            <summary>
            Gets all customer actions
            </summary>
            <returns>Customer action collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.InsertCustomerAction(System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a customer action
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="comment">The comment</param>
            <param name="displayOrder">The display order</param>
            <returns>A customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.UpdateCustomerAction(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the customer action
            </summary>
            <param name="customerActionId">The customer action identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="comment">The comment</param>
            <param name="displayOrder">The display order</param>
            <returns>A customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.DeleteAcl(System.Int32)">
            <summary>
            Deletes an ACL
            </summary>
            <param name="aclId">ACL identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.GetAclById(System.Int32)">
            <summary>
            Gets an ACL by identifier
            </summary>
            <param name="aclId">ACL identifier</param>
            <returns>ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.GetAllAcl(System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Gets all ACL
            </summary>
            <param name="customerActionId">Customer action identifier; 0 to load all records</param>
            <param name="customerRoleId">Customer role identifier; 0 to load all records</param>
            <param name="allow">Value indicating whether action is allowed; null to load all records</param>
            <returns>ACL collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.InsertAcl(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts an ACL
            </summary>
            <param name="customerActionId">The customer action identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="allow">The value indicating whether action is allowed</param>
            <returns>An ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.UpdateAcl(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates the ACL
            </summary>
            <param name="aclId">The ACL identifier</param>
            <param name="customerActionId">The customer action identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="allow">The value indicating whether action is allowed</param>
            <returns>An ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACLProvider.IsActionAllowed(System.Int32,System.String)">
            <summary>
            Indicates whether action is allowed
            </summary>
            <param name="customerId">Customer identifer</param>
            <param name="actionSystemKeyword">Action system keyword</param>
            <returns>Result</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.DBACL">
            <summary>
            Represents an ACL
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.DBACL.#ctor">
            <summary>
            Creates a new instance of the DBACL class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBACL.AclId">
            <summary>
            Gets or sets the ACL identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBACL.CustomerActionId">
            <summary>
            Gets or sets the customer action identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBACL.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Security.DBACL.Allow">
            <summary>
            Gets or sets the value indicating whether action is allowed
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized">
            <summary>
            Represents a localized manufacturer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.#ctor">
            <summary>
            Creates a new instance of the DBManufacturerLocalized class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.ManufacturerLocalizedId">
            <summary>
            Gets or sets the localized manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.ManufacturerId">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBManufacturerLocalized.SEName">
            <summary>
            Gets or sets the search-engine name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsCommentCollection">
            <summary>
            Represents a news comment collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.DBBlogPostCollection">
            <summary>
            Represents a blog post collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategoryCollection">
            <summary>
            Represents a DBProductCategory collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate">
            <summary>
            Represents a tax rate
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.#ctor">
            <summary>
            Creates a new instance of the DBTaxRate class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.TaxRateId">
            <summary>
            Gets or sets the tax rate identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.StateProvinceId">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.Zip">
            <summary>
            Gets or sets the zip
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Tax.DBTaxRate.Percentage">
            <summary>
            Gets or sets the percentage
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBSpecificationAttributeCollection">
            <summary>
            Represents a specification attribute collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute">
            <summary>
            Represents a product specification attribute
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductSpecificationAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ProductSpecificationAttributeId">
            <summary>
            Gets or sets the product specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.SpecificationAttributeOptionId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.AllowFiltering">
            <summary>
            Gets or sets whether the attribute can be filtered by
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.ShowOnProductPage">
            <summary>
            Gets or sets whether the attrbiute will be shown on the product page
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Specs.DBProductSpecificationAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute">
            <summary>
            Represents a product variant attribute mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttribute class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductVariantAttributeId">
            <summary>
            Gets or sets the product variant attribute mapping identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.ProductAttributeId">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.TextPrompt">
            <summary>
            Gets or sets a value a text prompt
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttribute.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBOrderStatusCollection">
            <summary>
            Represents an order status collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturerCollection">
            <summary>
            Represents a ProductManufacturer collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer">
            <summary>
            Represents a product manufacturer mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.#ctor">
            <summary>
            Creates a new instance of the DBProductManufacturer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ProductManufacturerId">
            <summary>
            Gets or sets the ProductManufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.ManufacturerId">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Manufacturers.DBProductManufacturer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince">
            <summary>
            Represents a state/province
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.#ctor">
            <summary>
            Creates a new instance of the DBStateProvince class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.StateProvinceId">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.Abbreviation">
            <summary>
            Gets or sets the abbreviation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Directory.DBStateProvince.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider">
            <summary>
            Acts as a base class for deriving custom shopping cart provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.DeleteExpiredShoppingCartItems(System.DateTime)">
            <summary>
            Deletes expired shopping cart items
            </summary>
            <param name="olderThan">Older than date and time</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.DeleteShoppingCartItem(System.Int32)">
            <summary>
            Deletes a shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.GetShoppingCartByCustomerSessionGuid(System.Int32,System.Guid)">
            <summary>
            Gets a shopping cart by customer session GUID
            </summary>
            <param name="shoppingCartTypeId">Shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.GetShoppingCartItemById(System.Int32)">
            <summary>
            Gets a shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.InsertShoppingCartItem(System.Int32,System.Guid,System.Int32,System.String,System.Decimal,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a shopping cart item
            </summary>
            <param name="shoppingCartTypeId">The shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The product variant attributes</param>
            <param name="customerEnteredPrice">The price enter by a customer</param>
            <param name="quantity">The quantity</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.DBShoppingCartProvider.UpdateShoppingCartItem(System.Int32,System.Int32,System.Guid,System.Int32,System.String,System.Decimal,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
            <param name="shoppingCartTypeId">The shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The product variant attributes</param>
            <param name="customerEnteredPrice">The price enter by a customer</param>
            <param name="quantity">The quantity</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider">
            <summary>
            Acts as a base class for deriving custom ShippingByWeight provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetById(System.Int32)">
            <summary>
            Gets a ShippingByWeight
            </summary>
            <param name="shippingByWeightId">ShippingByWeight identifier</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.DeleteShippingByWeight(System.Int32)">
            <summary>
            Deletes a ShippingByWeight
            </summary>
            <param name="shippingByWeightId">ShippingByWeight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetAll">
            <summary>
            Gets all ShippingByWeights
            </summary>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.InsertShippingByWeight(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeight
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.UpdateShippingByWeight(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeight
            </summary>
            <param name="shippingByWeightId">The ShippingByWeight identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.DBShippingByWeightProvider.GetAllByShippingMethodId(System.Int32)">
            <summary>
            Gets all ShippingByWeights by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider">
            <summary>
            Acts as a base class for deriving custom setting provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.GetSettingById(System.Int32)">
            <summary>
            Gets a setting
            </summary>
            <param name="settingId">Setting identifer</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.DeleteSetting(System.Int32)">
            <summary>
            Deletes a setting
            </summary>
            <param name="settingId">Setting identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>Setting collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.AddSetting(System.String,System.String,System.String)">
            <summary>
            Adds a setting
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.DBSettingProvider.UpdateSetting(System.Int32,System.String,System.String,System.String)">
            <summary>
            Updates a setting
            </summary>
            <param name="settingId">Setting identifier</param>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider">
            <summary>
            Acts as a base class for deriving custom credit card type provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.GetCreditCardTypeById(System.Int32)">
            <summary>
            Gets a credit card type
            </summary>
            <param name="creditCardTypeId">Credit card type identifier</param>
            <returns>Credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.GetAllCreditCardTypes">
            <summary>
            Gets all credit card types
            </summary>
            <returns>Credit card type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.InsertCreditCardType(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a credit card type
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="displayOrder">The display order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.DBCreditCardTypeProvider.UpdateCreditCardType(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the credit card type
            </summary>
            <param name="creditCardTypeId">Credit card type identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="displayOrder">The display order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountUsageHistoryCollection">
            <summary>
            Represents a discount usage history collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountLimitation">
            <summary>
            Represents a discount limitation
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountLimitation.#ctor">
            <summary>
            Creates a new instance of the DBDiscountLimitation class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountLimitation.DiscountLimitationId">
            <summary>
            Gets or sets the discount limitation identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.DBDiscountLimitation.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider">
            <summary>
            Acts as a base class for deriving custom category provider
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetAllCategories(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all categories
            </summary>
            <param name="parentCategoryId">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetAllCategoriesDisplayedOnHomePage(System.Boolean,System.Int32)">
            <summary>
            Gets all categories displayed on the home page
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetCategoryById(System.Int32,System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.InsertCategory(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts category
            </summary>
            <param name="name">The category name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="parentCategoryId">The parent category identifier</param>
            <param name="pictureId">The picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="showOnHomePage">A value indicating whether the category will be shown on home page</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.UpdateCategory(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="name">The category name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="parentCategoryId">The parent category identifier</param>
            <param name="pictureId">The picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="showOnHomePage">A value indicating whether the category will be shown on home page</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetCategoryLocalizedById(System.Int32)">
            <summary>
            Gets localized category by id
            </summary>
            <param name="categoryLocalizedId">Localized category identifier</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetCategoryLocalizedByCategoryIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized category by category id and language id
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.InsertCategoryLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.UpdateCategoryLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized category
            </summary>
            <param name="categoryLocalizedId">Localized category identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.DeleteProductCategory(System.Int32)">
            <summary>
            Deletes a product category mapping
            </summary>
            <param name="productCategoryId">Product category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoriesByCategoryId(System.Int32,System.Boolean)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product a category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoriesByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.GetProductCategoryById(System.Int32)">
            <summary>
            Gets a product category mapping 
            </summary>
            <param name="productCategoryId">Product category mapping identifier</param>
            <returns>Product category mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.InsertProductCategory(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product category mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBCategoryProvider.UpdateProductCategory(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product category mapping 
            </summary>
            <param name="productCategoryId">Product category mapping  identifier</param>
            <param name="productId">Product identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination">
            <summary>
            Represents a product variant attribute combination
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.#ctor">
            <summary>
            Creates a new instance of the DBProductVariantAttributeCombination class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.ProductVariantAttributeCombinationId">
            <summary>
            Gets or sets the product variant attribute combination identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.ProductVariantId">
            <summary>
            Gets or sets the product variant identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.AttributesXml">
            <summary>
            Gets or sets the attributes
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Products.Attributes.DBProductVariantAttributeCombination.AllowOutOfStockOrders">
            <summary>
            Gets or sets a value indicating whether to allow orders when out of stock
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.DBNewsLetterSubscriptionCollection">
            <summary>
            Represents DBNewsLetterSubscription entity collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer">
            <summary>
            Represents a poll answer
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.#ctor">
            <summary>
            Creates a new instance of the DBPollAnswer class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.PollAnswerId">
            <summary>
            Gets or sets the poll answer identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.PollId">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.Name">
            <summary>
            Gets or sets the poll answer name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.Count">
            <summary>
            Gets or sets the current count
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Polls.DBPollAnswer.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNewsCollection">
            <summary>
            Represents a news collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews">
            <summary>
            Represents a news
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.#ctor">
            <summary>
            Creates a new instance of the DBNews class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.NewsId">
            <summary>
            Gets or sets the news identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Title">
            <summary>
            Gets or sets the news title
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Short">
            <summary>
            Gets or sets the short text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Full">
            <summary>
            Gets or sets the full text
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.AllowComments">
            <summary>
            Gets or sets a value indicating whether the entity allows comments
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.DBNews.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum">
            <summary>
            Represents a forum
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.#ctor">
            <summary>
            Creates a new instance of the DBForum class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.ForumId">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.ForumGroupId">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.NumTopics">
            <summary>
            Gets or sets the number of topics
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastTopicId">
            <summary>
            Gets or sets the last topic identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostId">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostUserId">
            <summary>
            Gets or sets the last post user identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.CreatedOn">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForum.UpdatedOn">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.DBForumCollection">
            <summary>
            Represents a forum collection
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory">
            <summary>
            Represents a product category mapping
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.#ctor">
            <summary>
            Creates a new instance of the DBProductCategory class
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.ProductCategoryId">
            <summary>
            Gets or sets the ProductCategory identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.CategoryId">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:NopSolutions.NopCommerce.DataAccess.Categories.DBProductCategory.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.DBLogCollection">
            <summary>
            Represents a log collection
            </summary>
        </member>
    </members>
</doc>
