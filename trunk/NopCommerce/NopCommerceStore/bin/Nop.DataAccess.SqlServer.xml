<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.DataAccess.SqlServer</name>
    </assembly>
    <members>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider">
            <summary>
            Customer activity provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.InsertActivityType(System.String,System.String,System.Boolean)">
            <summary>
            Inserts an activity log type item
            </summary>
            <param name="systemKeyword">The system keyword</param>
            <param name="name">The display name</param>
            <param name="enabled">Value indicating whether the activity log type is enabled</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.UpdateActivityType(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Updates an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="name">The display name</param>
            <param name="enabled">Value indicating whether the activity log type is enabled</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.DeleteActivityType(System.Int32)">
            <summary>
            Deletes an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.GetAllActivityTypes">
            <summary>
            Gets all activity log type items
            </summary>
            <returns>Activity log type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.GetActivityTypeById(System.Int32)">
            <summary>
            Gets an activity log type item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <returns>Activity log type item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.InsertActivity(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Inserts an activity log item
            </summary>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="comment">The activity comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.UpdateActivity(System.Int32,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Updates an activity log 
            </summary>
            <param name="activityLogId">Activity log identifier</param>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="comment">The activity comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.DeleteActivity(System.Int32)">
            <summary>
            Deletes an activity log item
            </summary>
            <param name="activityLogId">Activity log type identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.GetAllActivities(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all activity log items
            </summary>
            <param name="createdOnFrom">Log item creation from; null to load all customers</param>
            <param name="createdOnTo">Log item creation to; null to load all customers</param>
            <param name="email">Customer Email</param>
            <param name="username">Customer username</param>
            <param name="activityLogTypeId">Activity log type identifier</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Activity log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.GetActivityById(System.Int32)">
            <summary>
            Gets an activity log item
            </summary>
            <param name="activityLogId">Activity log identifier</param>
            <returns>Activity log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlCustomerActivityProvider.ClearAllActivities">
            <summary>
            Clears activity log
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider">
            <summary>
            Log provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.DeleteLog(System.Int32)">
            <summary>
            Deletes a log item
            </summary>
            <param name="logId">Log item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.ClearLog">
            <summary>
            Clears a log
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.GetAllLogs">
            <summary>
            Gets all log items
            </summary>
            <returns>Log item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.GetLogById(System.Int32)">
            <summary>
            Gets a log item
            </summary>
            <param name="logId">Log item identifier</param>
            <returns>Log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlLogProvider.InsertLog(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a log item
            </summary>
            <param name="logTypeId">Log item type identifier</param>
            <param name="severity">The severity</param>
            <param name="message">The short message</param>
            <param name="exception">The full exception</param>
            <param name="ipAddress">The IP address</param>
            <param name="customerId">The customer identifier</param>
            <param name="pageUrl">The page URL</param>
            <param name="referrerUrl">The referrer URL</param>
            <param name="createdOn">The date and time of instance creationL</param>
            <returns>Log item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider">
            <summary>
            Search log provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.SearchTermReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="count">Item count. 0 if you want to get all items</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.GetAllSearchLogs">
            <summary>
            Gets all search log items
            </summary>
            <returns>Search log collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.GetSearchLogById(System.Int32)">
            <summary>
            Gets a search log item
            </summary>
            <param name="searchLogId">The search log item identifier</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.InsertSearchLog(System.String,System.Int32,System.DateTime)">
            <summary>
            Inserts a search log item
            </summary>
            <param name="searchTerm">The search term</param>
            <param name="customerId">The customer identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Search log item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Audit.SqlSearchLogProvider.ClearSearchLog">
            <summary>
            Clear search log
            </summary>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider">
            <summary>
            Category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetAllCategories(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all categories
            </summary>
            <param name="parentCategoryId">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetAllCategoriesDisplayedOnHomePage(System.Boolean,System.Int32)">
            <summary>
            Gets all categories displayed on the home page
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetCategoryById(System.Int32,System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.InsertCategory(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts category identifier
            </summary>
            <param name="name">The category name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="parentCategoryId">The parent category identifier</param>
            <param name="pictureId">The picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="showOnHomePage">A value indicating whether the category will be shown on home page</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.UpdateCategory(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="name">The category name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="parentCategoryId">The parent category identifier</param>
            <param name="pictureId">The picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="showOnHomePage">A value indicating whether the category will be shown on home page</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetCategoryLocalizedById(System.Int32)">
            <summary>
            Gets localized category by id
            </summary>
            <param name="categoryLocalizedId">Localized category identifier</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetCategoryLocalizedByCategoryIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized category by category id and language id
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.InsertCategoryLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.UpdateCategoryLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized category
            </summary>
            <param name="categoryLocalizedId">Localized category identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Category content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.DeleteProductCategory(System.Int32)">
            <summary>
            Deletes a product category mapping
            </summary>
            <param name="productCategoryId">Product category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetProductCategoriesByCategoryId(System.Int32,System.Boolean)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product a category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetProductCategoriesByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product category mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.GetProductCategoryById(System.Int32)">
            <summary>
            Gets a product category mapping 
            </summary>
            <param name="productCategoryId">Product category mapping identifier</param>
            <returns>Product category mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.InsertProductCategory(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product category mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Categories.SqlCategoryProvider.UpdateProductCategory(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product category mapping 
            </summary>
            <param name="productCategoryId">Product category mapping  identifier</param>
            <param name="productId">Product identifier</param>
            <param name="categoryId">Category identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product category mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider">
            <summary>
            Category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.GetSettingById(System.Int32)">
            <summary>
            Gets a setting
            </summary>
            <param name="settingId">Setting identifer</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.DeleteSetting(System.Int32)">
            <summary>
            Deletes a setting
            </summary>
            <param name="settingId">Setting identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.GetAllSettings">
            <summary>
            Gets all settings
            </summary>
            <returns>Setting collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.AddSetting(System.String,System.String,System.String)">
            <summary>
            Adds a setting
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Configuration.Settings.SqlSettingProvider.UpdateSetting(System.Int32,System.String,System.String,System.String)">
            <summary>
            Updates a setting
            </summary>
            <param name="settingId">Setting identifier</param>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="description">The description</param>
            <returns>Setting</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider">
            <summary>
            Blog provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.DeleteBlogPost(System.Int32)">
            <summary>
            Deletes an blog post
            </summary>
            <param name="blogPostId">Blog post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.GetBlogPostById(System.Int32)">
            <summary>
            Gets an blog post
            </summary>
            <param name="blogPostId">Blog post identifier</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.GetAllBlogPosts(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Blog posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.InsertBlogPost(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Inserts an blog post
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="blogPostTitle">The blog post title</param>
            <param name="blogPostBody">The blog post title</param>
            <param name="blogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="createdById">The user identifier who created the blog post</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.UpdateBlogPost(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Updates the blog post
            </summary>
            <param name="blogPostId">The blog post identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="blogPostTitle">The blog post title</param>
            <param name="blogPostBody">The blog post title</param>
            <param name="blogPostAllowComments">A value indicating whether the blog post comments are allowed</param>
            <param name="createdById">The user identifier who created the blog post</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.DeleteBlogComment(System.Int32)">
            <summary>
            Deletes a blog comment
            </summary>
            <param name="blogCommentId">Blog comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.GetBlogCommentById(System.Int32)">
            <summary>
            Gets a blog comment
            </summary>
            <param name="blogCommentId">Blog comment identifier</param>
            <returns>A blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.GetBlogCommentsByBlogPostId(System.Int32)">
            <summary>
            Gets a collection of blog comments by blog post identifier
            </summary>
            <param name="blogPostId">Blog post identifier</param>
            <returns>A collection of blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.GetAllBlogComments">
            <summary>
            Gets all blog comments
            </summary>
            <returns>Blog comments</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.InsertBlogComment(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a blog comment
            </summary>
            <param name="blogPostId">The blog post identifier</param>
            <param name="customerId">The customer identifier who commented the blog post</param>
            <param name="ipAddress">The IP address</param>
            <param name="commentText">The comment text</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Blog.SqlBlogProvider.UpdateBlogComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Updates the blog comment
            </summary>
            <param name="blogCommentId">The blog comment identifier</param>
            <param name="blogPostId">The blog post identifier</param>
            <param name="customerId">The customer identifier who commented the blog post</param>
            <param name="ipAddress">The IP address</param>
            <param name="commentText">The comment text</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Blog comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider">
            <summary>
            Forum provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeleteForumGroup(System.Int32)">
            <summary>
            Deletes a forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetForumGroupById(System.Int32)">
            <summary>
            Gets a forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllForumGroups">
            <summary>
            Gets all forum groups
            </summary>
            <returns>Forum groups</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertForumGroup(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum group
            </summary>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdateForumGroup(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum group
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum group</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeleteForum(System.Int32)">
            <summary>
            Deletes a forum
            </summary>
            <param name="forumId">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetForumById(System.Int32)">
            <summary>
            Gets a forum
            </summary>
            <param name="forumId">The forum identifier</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllForumsByGroupId(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <returns>Forums</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertForum(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a forum
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="numTopics">The number of topics</param>
            <param name="numPosts">The number of posts</param>
            <param name="lastTopicId">The last topic identifier</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdateForum(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the forum
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="forumGroupId">The forum group identifier</param>
            <param name="name">The language name</param>
            <param name="description">The description</param>
            <param name="numTopics">The number of topics</param>
            <param name="numPosts">The number of posts</param>
            <param name="lastTopicId">The last topic identifier</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="displayOrder">The display order</param>        
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Forum</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdateForumStats(System.Int32)">
            <summary>
            Update forum stats
            </summary>
            <param name="forumId">The forum identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="forumTopicId">The topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetTopicById(System.Int32,System.Boolean)">
            <summary>
            Gets a topic
            </summary>
            <param name="forumTopicId">The topic identifier</param>
            <param name="increaseViews">The value indicating whether to increase topic views</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllTopics(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all topics
            </summary>
            <param name="forumId">The forum group identifier</param>
            <param name="userId">The user identifier</param>
            <param name="keywords">Keywords</param>
            <param name="searchPosts">A value indicating whether to search in posts</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetActiveTopics(System.Int32,System.Int32)">
            <summary>
            Gets active topics
            </summary>
            <param name="forumId">The forum group identifier</param>
            <param name="topicCount">Topic count. 0 if you want to get all topics</param>
            <returns>Topics</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertTopic(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Inserts a topic
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="userId">The user identifier</param>
            <param name="topicTypeId">The topic type identifier</param>
            <param name="subject">The subject</param>
            <param name="numPosts">The number of posts</param>
            <param name="views">The number of views</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdateTopic(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.DateTime,System.DateTime)">
            <summary>
            Updates the topic
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="userId">The user identifier</param>
            <param name="topicTypeId">The topic type identifier</param>
            <param name="subject">The subject</param>
            <param name="numPosts">The number of posts</param>
            <param name="views">The number of views</param>
            <param name="lastPostId">The last post identifier</param>
            <param name="lastPostUserId">The last post user identifier</param>
            <param name="lastPostTime">The last post date and time</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
            <param name="forumPostId">The post identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetPostById(System.Int32)">
            <summary>
            Gets a post
            </summary>
            <param name="forumPostId">The post identifier</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllPosts(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all posts
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="keywords">Keywords</param>
            <param name="ascSort">Sort order</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Posts</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertPost(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts a post
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="text">The text</param>
            <param name="ipAddress">The IP address</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdatePost(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates the post
            </summary>
            <param name="forumPostId">The forum post identifier</param>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="userId">The user identifier</param>
            <param name="text">The text</param>
            <param name="ipAddress">The IP address</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Post</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeletePrivateMessage(System.Int32)">
            <summary>
            Deletes a private message
            </summary>
            <param name="forumPrivateMessageId">The private message identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetPrivateMessageById(System.Int32)">
            <summary>
            Gets a private message
            </summary>
            <param name="forumPrivateMessageId">The private message identifier</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllPrivateMessages(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets private messages
            </summary>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="isRead">A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages</param>
            <param name="isDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="isDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="keywords">Keywords</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Private messages</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertPrivateMessage(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a private message
            </summary>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="subject">The subject</param>
            <param name="text">The text</param>
            <param name="isRead">The value indivating whether message is read</param>
            <param name="isDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="isDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdatePrivateMessage(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the private message
            </summary>
            <param name="privateMessageId">The private message identifier</param>
            <param name="fromUserId">The user identifier who sent the message</param>
            <param name="toUserId">The user identifier who should receive the message</param>
            <param name="subject">The subject</param>
            <param name="text">The text</param>
            <param name="isRead">The value indivating whether message is read</param>
            <param name="isDeletedByAuthor">The value indivating whether message is deleted by author</param>
            <param name="isDeletedByRecipient">The value indivating whether message is deleted by recipient</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Private message</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.DeleteSubscription(System.Int32)">
            <summary>
            Deletes a forum subscription
            </summary>
            <param name="forumSubscriptionId">The forum subscription identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetSubscriptionById(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="forumSubscriptionId">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetSubscriptionByGuid(System.Int32)">
            <summary>
            Gets a forum subscription
            </summary>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.GetAllSubscriptions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Forum subscriptions</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.InsertSubscription(System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a forum subscription
            </summary>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Forums.SqlForumProvider.UpdateSubscription(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the forum subscription
            </summary>
            <param name="subscriptionId">The forum subscription identifier</param>
            <param name="subscriptionGuid">The forum subscription identifier</param>
            <param name="userId">The user identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Forum subscription</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider">
            <summary>
            News provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.GetNewsById(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="newsId">The news identifier</param>
            <returns>News</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.DeleteNews(System.Int32)">
            <summary>
            Deletes a news
            </summary>
            <param name="newsId">The news identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.GetAllNews(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets news item collection
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>News item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.InsertNews(System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a news item
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="title">The news title</param>
            <param name="shortText">The short text</param>
            <param name="fullText">The full text</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="allowComments">A value indicating whether the entity allows comments</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.UpdateNews(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the news item
            </summary>
            <param name="newsId">The news identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The news title</param>
            <param name="shortText">The short text</param>
            <param name="fullText">The full text</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="allowComments">A value indicating whether the entity allows comments</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.GetNewsCommentById(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="newsCommentId">News comment identifer</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.GetNewsCommentsByNewsId(System.Int32)">
            <summary>
            Gets a news comment collection by news identifier
            </summary>
            <param name="newsId">The news identifier</param>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.DeleteNewsComment(System.Int32)">
            <summary>
            Deletes a news comment
            </summary>
            <param name="newsCommentId">The news comment identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.GetAllNewsComments">
            <summary>
            Gets all news comments
            </summary>
            <returns>News comment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.InsertNewsComment(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a news comment
            </summary>
            <param name="newsId">The news identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The title</param>
            <param name="comment">The comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.NewsManagement.SqlNewsProvider.UpdateNewsComment(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the news comment
            </summary>
            <param name="newsCommentId">The news comment identifier</param>
            <param name="newsId">The news identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The title</param>
            <param name="comment">The comment</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>News comment</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider">
            <summary>
            Poll provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.GetPollById(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="pollId">The poll identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.GetPollBySystemKeyword(System.String)">
            <summary>
            Gets a poll
            </summary>
            <param name="systemKeyword">Poll system keyword</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.GetPolls(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets poll collection
            </summary>
            <param name="languageId">Language identifier. 0 if you want to get all news</param>
            <param name="pollCount">Poll count to load. 0 if you want to get all polls</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Poll collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.DeletePoll(System.Int32)">
            <summary>
            Deletes a poll
            </summary>
            <param name="pollId">The poll identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.InsertPoll(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a poll
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.UpdatePoll(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the poll
            </summary>
            <param name="pollId">The poll identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.PollVotingRecordExists(System.Int32,System.Int32)">
            <summary>
            Is voting record already exists
            </summary>
            <param name="pollId">Poll identifier</param>
            <param name="customerId">Customer identifier</param>
            <returns>Poll</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.GetPollAnswerById(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="pollAnswerId">Poll answer identifier</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.GetPollAnswersByPollId(System.Int32)">
            <summary>
            Gets a poll answers by poll identifier
            </summary>
            <param name="pollId">Poll identifier</param>
            <returns>Poll answer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.DeletePollAnswer(System.Int32)">
            <summary>
            Deletes a poll answer
            </summary>
            <param name="pollAnswerId">Poll answer identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.InsertPollAnswer(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a poll answer
            </summary>
            <param name="pollId">The poll identifier</param>
            <param name="name">The poll answer name</param>
            <param name="count">The current count</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.UpdatePollAnswer(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Updates the poll answer
            </summary>
            <param name="pollAnswerId">The poll answer identifier</param>
            <param name="pollId">The poll identifier</param>
            <param name="name">The poll answer name</param>
            <param name="count">The current count</param>
            <param name="displayOrder">The display order</param>
            <returns>Poll answer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Polls.SqlPollProvider.CreatePollVotingRecord(System.Int32,System.Int32)">
            <summary>
            Creates a poll voting record
            </summary>
            <param name="pollAnswerId">The poll answer identifier</param>
            <param name="customerId">Customer identifer</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider">
            <summary>
            Topic provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.DeleteTopic(System.Int32)">
            <summary>
            Deletes a topic
            </summary>
            <param name="topicId">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetTopicById(System.Int32)">
            <summary>
            Gets a topic by template identifier
            </summary>
            <param name="topicId">Topic identifier</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.InsertTopic(System.String)">
            <summary>
            Inserts a topic
            </summary>
            <param name="name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.UpdateTopic(System.Int32,System.String)">
            <summary>
            Updates the topic
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="name">The name</param>
            <returns>Topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetAllTopics">
            <summary>
            Gets all topics
            </summary>
            <returns>Topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetLocalizedTopicById(System.Int32)">
            <summary>
            Gets a localized topic by identifier
            </summary>
            <param name="localizedTopicId">Localized topic identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetLocalizedTopic(System.Int32,System.Int32)">
            <summary>
            Gets a localized topic by parent topic identifer and language identifier
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetLocalizedTopic(System.String,System.Int32)">
            <summary>
            Gets a localized topic by name and language identifier
            </summary>
            <param name="name">Topic name</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.DeleteLocalizedTopic(System.Int32)">
            <summary>
            Deletes a localized topic
            </summary>
            <param name="localizedTopicId">Topic identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.GetAllLocalizedTopics(System.String)">
            <summary>
            Gets all localized topics
            </summary>
            <param name="topicName">Topic name</param>
            <returns>Localized topic collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.InsertLocalizedTopic(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Inserts a localized topic
            </summary>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The title</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <returns>Localized topic</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Content.Topics.SqlTopicProvider.UpdateLocalizedTopic(System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Updates the localized topic
            </summary>
            <param name="topicLocalizedId">The localized topic identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="title">The title</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <returns>Localized topic</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider">
            <summary>
            Customer provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.DeleteAddress(System.Int32)">
            <summary>
            Deletes an address by address identifier 
            </summary>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAddressById(System.Int32)">
            <summary>
            Gets an address by address identifier
            </summary>
            <param name="addressId">Address identifier</param>
            <returns>Address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAddressesByCustomerId(System.Int32,System.Boolean)">
            <summary>
            Gets a collection of addresses by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="getBillingAddresses">Gets or sets a value indicating whether the addresses are billing or shipping</param>
            <returns>A collection of addresses</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.InsertAddress(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts an address
            </summary>
            <param name="customerId">The customer identifier</param>
            <param name="isBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateAddress(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the address
            </summary>
            <param name="addressId">The address identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="isBillingAddress">A value indicating whether the address is billing or shipping</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>An address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAllCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all customers
            </summary>
            <param name="registrationFrom">Customer registration from; null to load all customers</param>
            <param name="registrationTo">Customer registration to; null to load all customers</param>
            <param name="email">Customer Email</param>
            <param name="username">Customer username</param>
            <param name="dontLoadGuestCustomers">A value indicating whether to don't load guest customers</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAffiliatedCustomers(System.Int32)">
            <summary>
            Gets all customers by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomersByCustomerRoleId(System.Int32,System.Boolean)">
            <summary>
            Gets all customers by customer role id
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerByEmail(System.String)">
            <summary>
            Gets a customer by email
            </summary>
            <param name="email">Customer Email</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerByUsername(System.String)">
            <summary>
            Gets a customer by username
            </summary>
            <param name="username">Customer username</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerById(System.Int32)">
            <summary>
            Gets a customer
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerByGuid(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="customerGuid">Customer GUID</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.AddCustomer(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a customer
            </summary>
            <param name="customerGuid">The customer identifier</param>
            <param name="email">The email</param>
            <param name="username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="billingAddressId">The billing address identifier</param>
            <param name="shippingAddressId">The shipping address identifier</param>
            <param name="lastPaymentMethodId">The last payment method identifier</param>
            <param name="lastAppliedCouponCode">The last applied coupon code</param>
            <param name="giftCardCouponCodes">The applied gift card coupon code</param>
            <param name="checkoutAttributes">The selected checkout attributes</param>
            <param name="languageId">The language identifier</param>
            <param name="currencyId">The currency identifier</param>
            <param name="taxDisplayTypeId">The tax display type identifier</param>
            <param name="isTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="isAdmin">A value indicating whether the customer is administrator</param>
            <param name="isGuest">A value indicating whether the customer is guest</param>
            <param name="isForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="totalForumPosts">A forum post count</param>
            <param name="signature">Signature</param>
            <param name="adminComment">Admin comment</param>
            <param name="active">A value indicating whether the customer is active</param>
            <param name="deleted">A value indicating whether the customer has been deleted</param>
            <param name="registrationDate">The date and time of customer registration</param>
            <param name="timeZoneId">The time zone identifier</param>
            <param name="avatarId">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateCustomer(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.String,System.Int32)">
            <summary>
            Updates the customer
            </summary>
            <param name="customerId">The customer identifier</param>
            <param name="customerGuid">The customer identifier</param>
            <param name="email">The email</param>
            <param name="username">The username</param>
            <param name="passwordHash">The password hash</param>
            <param name="saltKey">The salt key</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="billingAddressId">The billing address identifier</param>
            <param name="shippingAddressId">The shipping address identifier</param>
            <param name="lastPaymentMethodId">The last payment method identifier</param>
            <param name="lastAppliedCouponCode">The last applied coupon code</param>
            <param name="giftCardCouponCodes">The applied gift card coupon code</param>
            <param name="checkoutAttributes">The selected checkout attributes</param>
            <param name="languageId">The language identifier</param>
            <param name="currencyId">The currency identifier</param>
            <param name="taxDisplayTypeId">The tax display type identifier</param>
            <param name="isTaxExempt">A value indicating whether the customer is tax exempt</param>
            <param name="isAdmin">A value indicating whether the customer is administrator</param>
            <param name="isGuest">A value indicating whether the customer is guest</param>
            <param name="isForumModerator">A value indicating whether the customer is forum moderator</param>
            <param name="totalForumPosts">A forum post count</param>
            <param name="signature">Signature</param>
            <param name="adminComment">Admin comment</param>
            <param name="active">A value indicating whether the customer is active</param>
            <param name="deleted">A value indicating whether the customer has been deleted</param>
            <param name="registrationDate">The date and time of customer registration</param>
            <param name="timeZoneId">The time zone identifier</param>
            <param name="avatarId">The avatar identifier</param>
            <returns>A customer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateCustomerDealer(System.Int32,System.String)">
            <summary>
            Get best customers
            </summary>       
            <param name="customerId"></param>
            <param name="dealerId"></param>
            <returns>DBCustomer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetBestCustomersReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Get best customers
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="orderBy">1 - order by order total, 2 - order by number of orders</param>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerReportByLanguage">
            <summary>
            Get customer report by language
            </summary>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerReportByAttributeKey(System.String)">
            <summary>
            Get customer report by attribute key
            </summary>
            <param name="customerAttributeKey">Customer attribute key</param>
            <returns>Report</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.DeleteCustomerAttribute(System.Int32)">
            <summary>
            Deletes a customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerAttributeById(System.Int32)">
            <summary>
            Gets a customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerAttributesByCustomerId(System.Int32)">
            <summary>
            Gets a collection of customer attributes by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Customer attributes</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.InsertCustomerAttribute(System.Int32,System.String,System.String)">
            <summary>
            Inserts a customer attribute
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="key">An attribute key</param>
            <param name="value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateCustomerAttribute(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the customer attribute
            </summary>
            <param name="customerAttributeId">Customer attribute identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="key">An attribute key</param>
            <param name="value">An attribute value</param>
            <returns>A customer attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerRolesByCustomerId(System.Int32,System.Boolean)">
            <summary>
            Gets customer roles by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAllCustomerRoles(System.Boolean)">
            <summary>
            Gets all customer roles
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer role collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerRoleById(System.Int32)">
            <summary>
            Gets a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.InsertCustomerRole(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a customer role
            </summary>
            <param name="name">The customer role name</param>
            <param name="freeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="taxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="active">A value indicating whether the customer role is active</param>
            <param name="deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateCustomerRole(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the customer role
            </summary>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="name">The customer role name</param>
            <param name="freeShipping">A value indicating whether the customer role is marked as free shiping</param>
            <param name="taxExempt">A value indicating whether the customer role is marked as tax exempt</param>
            <param name="active">A value indicating whether the customer role is active</param>
            <param name="deleted">A value indicating whether the customer role has been deleted</param>
            <returns>Customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.AddCustomerToRole(System.Int32,System.Int32)">
            <summary>
            Adds a customer to role
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.RemoveCustomerFromRole(System.Int32,System.Int32)">
            <summary>
            Removes a customer from role
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.AddDiscountToCustomerRole(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.RemoveDiscountFromCustomerRole(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a customer role
            </summary>
            <param name="customerRoleId">Customer role identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerRolesByDiscountId(System.Int32,System.Boolean)">
            <summary>
            Gets a customer roles assigned to discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Customer roles</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerSessionByGuid(System.Guid)">
            <summary>
            Gets a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetCustomerSessionByCustomerId(System.Int32)">
            <summary>
            Gets a customer session by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.DeleteCustomerSession(System.Guid)">
            <summary>
            Deletes a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.DeleteExpiredCustomerSessions(System.DateTime)">
            <summary>
            Deletes all expired customer sessions
            </summary>
            <param name="olderThan">Older than date and time</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetAllCustomerSessions">
            <summary>
            Gets all customer sessions
            </summary>
            <returns>Customer session collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.InsertCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <param name="customerId">Customer identifier</param>
            <param name="lastAccessed">The last accessed date and time</param>
            <param name="isExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.UpdateCustomerSession(System.Guid,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Updates the customer session
            </summary>
            <param name="customerSessionGuid">Customer session GUID</param>
            <param name="customerId">Customer identifier</param>
            <param name="lastAccessed">The last accessed date and time</param>
            <param name="isExpired">A value indicating whether the customer session is expired</param>
            <returns>Customer session</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.CustomerManagement.SqlCustomerProvider.GetRegisteredCustomersReport(System.DateTime)">
            <summary>
            Gets a report of customers registered from "dateTime" until today
            </summary>
            <param name="dateFrom">Customer registration date</param>
            <returns>Int</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider">
            <summary>
            Country provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country
            </summary>
            <param name="countryId">Country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetAllCountries(System.Boolean)">
            <summary>
            Gets all countries
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetAllCountriesForRegistration(System.Boolean)">
            <summary>
            Gets all countries that allow registration
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetAllCountriesForBilling(System.Boolean)">
            <summary>
            Gets all countries that allow billing
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetAllCountriesForShipping(System.Boolean)">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <returns>Country collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetCountryById(System.Int32)">
            <summary>
            Gets a country 
            </summary>
            <param name="countryId">Country identifier</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetCountryByTwoLetterIsoCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="twoLetterIsoCode">Country two letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.GetCountryByThreeLetterIsoCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="threeLetterIsoCode">Country three letter ISO code</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.InsertCountry(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a country
            </summary>
            <param name="name">The name</param>
            <param name="allowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="allowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="allowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="twoLetterIsoCode">The two letter ISO code</param>
            <param name="threeLetterIsoCode">The three letter ISO code</param>
            <param name="numericIsoCode">The numeric ISO code</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCountryProvider.UpdateCountry(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the country
            </summary>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="allowsRegistration">A value indicating whether registration is allowed to this country</param>
            <param name="allowsBilling">A value indicating whether billing is allowed to this country</param>
            <param name="allowsShipping">A value indicating whether shipping is allowed to this country</param>
            <param name="twoLetterIsoCode">The two letter ISO code</param>
            <param name="threeLetterIsoCode">The three letter ISO code</param>
            <param name="numericIsoCode">The numeric ISO code</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Country</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider">
            <summary>
            Currency provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.DeleteCurrency(System.Int32)">
            <summary>
            Deletes currency
            </summary>
            <param name="currencyId">Currency identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.GetCurrencyById(System.Int32)">
            <summary>
            Gets a currency
            </summary>
            <param name="currencyId">Currency identifier</param>
            <returns>Currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.GetAllCurrencies(System.Boolean)">
            <summary>
            Gets all currencies
            </summary>
            <returns>Currency collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.InsertCurrency(System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a currency
            </summary>
            <param name="name">The name</param>
            <param name="currencyCode">The currency code</param>
            <param name="rate">The rate</param>
            <param name="displayLocale">The display locale</param>
            <param name="customFormatting">The custom formatting</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlCurrencyProvider.UpdateCurrency(System.Int32,System.String,System.String,System.Decimal,System.String,System.String,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the currency
            </summary>
            <param name="currencyId">Currency identifier</param>
            <param name="name">The name</param>
            <param name="currencyCode">The currency code</param>
            <param name="rate">The rate</param>
            <param name="displayLocale">The display locale</param>
            <param name="customFormatting">The custom formatting</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A currency</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider">
            <summary>
            Language provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.DeleteLanguage(System.Int32)">
            <summary>
            Deletes a language
            </summary>
            <param name="languageId">Language identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.GetAllLanguages(System.Boolean)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Language collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.GetLanguageById(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.InsertLanguage(System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a language
            </summary>
            <param name="name">The name</param>
            <param name="languageCulture">The language culture</param>
            <param name="flagImageFileName">The flag image file name</param>
            <param name="published">A value indicating whether the language is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlLanguageProvider.UpdateLanguage(System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates a language
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="name">The name</param>
            <param name="languageCulture">The language culture</param>
            <param name="flagImageFileName">The flag image file name</param>
            <param name="published">A value indicating whether the language is published</param>
            <param name="displayOrder">The display order</param>
            <returns>Language</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider">
            <summary>
            State/province provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.DeleteStateProvince(System.Int32)">
            <summary>
            Deletes a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.GetStateProvinceById(System.Int32)">
            <summary>
            Gets a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.GetStateProvinceByAbbreviation(System.String)">
            <summary>
            Gets a state/province 
            </summary>
            <param name="abbreviation">The state/province abbreviation</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.GetStateProvincesByCountryId(System.Int32)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="countryId">Country identifier</param>
            <returns>State/province collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.InsertStateProvince(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a state/province
            </summary>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="abbreviation">The abbreviation</param>
            <param name="displayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Directory.SqlStateProvinceProvider.UpdateStateProvince(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates a state/province
            </summary>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="name">The name</param>
            <param name="abbreviation">The abbreviation</param>
            <param name="displayOrder">The display order</param>
            <returns>State/province</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider">
            <summary>
            Locale string resource provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.DeleteLocaleStringResource(System.Int32)">
            <summary>
            Deletes a locale string resource
            </summary>
            <param name="localeStringResourceId">Locale string resource identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.GetLocaleStringResourceById(System.Int32)">
            <summary>
            Gets a locale string resource
            </summary>
            <param name="localeStringResourceId">Locale string resource identifier</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.GetAllResourcesByLanguageId(System.Int32)">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Locale string resource collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.InsertLocaleStringResource(System.Int32,System.String,System.String)">
            <summary>
            Inserts a locale string resource
            </summary>
            <param name="languageId">The language identifier</param>
            <param name="resourceName">The resource name</param>
            <param name="resourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.UpdateLocaleStringResource(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Updates the locale string resource
            </summary>
            <param name="localeStringResourceId">The locale string resource identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="resourceName">The resource name</param>
            <param name="resourceValue">The resource value</param>
            <returns>Locale string resource</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.GetAllLocaleStringResourcesAsXml(System.Int32)">
            <summary>
            Loads all locale string resources as XML
            </summary>
            <param name="languageId">The Language identifier</param>
            <returns>XML</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Localization.SqlLocaleStringResourceProvider.InsertAllLocaleStringResourcesFromXml(System.Int32,System.String)">
            <summary>
            Inserts all locale string resources from XML
            </summary>
            <param name="languageId">The Language identifier</param>
            <param name="xml">The XML package</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Maintenance.SqlMaintenanceProvider">
            <summary>
            Maintenance provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SqlMaintenanceProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SqlMaintenanceProvider.Reindex">
            <summary>
            Reindex
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SqlMaintenanceProvider.Backup(System.String)">
            <summary>
            Backup database
            </summary>
            <param name="fileName">Destination file name</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Maintenance.SqlMaintenanceProvider.RestoreBackup(System.String)">
            <summary>
            Restore database
            </summary>
            <param name="fileName">Target file name</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider">
            <summary>
            Manufacturer provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetAllManufacturers(System.Boolean,System.Int32)">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetManufacturerById(System.Int32,System.Int32)">
            <summary>
            Gets a manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.InsertManufacturer(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="pictureId">The parent picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.UpdateManufacturer(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="templateId">The template identifier</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="pictureId">The parent picture identifier</param>
            <param name="pageSize">The page size</param>
            <param name="priceRanges">The price ranges</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetManufacturerLocalizedById(System.Int32)">
            <summary>
            Gets localized manufacturer by id
            </summary>
            <param name="manufacturerLocalizedId">Localized manufacturer identifier</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetManufacturerLocalizedByManufacturerIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized manufacturer by manufacturer id and language id
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.InsertManufacturerLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized manufacturer
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se name text</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.UpdateManufacturerLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized manufacturer
            </summary>
            <param name="manufacturerLocalizedId">Localized manufacturer identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se name text</param>
            <returns>Manufacturer content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.DeleteProductManufacturer(System.Int32)">
            <summary>
            Deletes a product manufacturer mapping
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetProductManufacturersByManufacturerId(System.Int32,System.Boolean)">
            <summary>
            Gets product product manufacturer collection
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetProductManufacturersByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product manufacturer mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.GetProductManufacturerById(System.Int32)">
            <summary>
            Gets a product manufacturer mapping 
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifier</param>
            <returns>Product manufacturer mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.InsertProductManufacturer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a product manufacturer mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Manufacturers.SqlManufacturerProvider.UpdateProductManufacturer(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the product manufacturer mapping
            </summary>
            <param name="productManufacturerId">Product manufacturer mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="isFeaturedProduct">A value indicating whether the product is featured</param>
            <param name="displayOrder">The display order</param>
            <returns>Product manufacturer mapping </returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider">
            <summary>
            Measure provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.DeleteMeasureDimension(System.Int32)">
            <summary>
            Deletes measure dimension
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.GetMeasureDimensionById(System.Int32)">
            <summary>
            Gets a measure dimension by identifier
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
            <returns>Measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.GetAllMeasureDimensions">
            <summary>
            Gets all measure dimensions
            </summary>
            <returns>Measure dimension collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.InsertMeasureDimension(System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Inserts a measure dimension
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.UpdateMeasureDimension(System.Int32,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Updates the measure dimension
            </summary>
            <param name="measureDimensionId">Measure dimension identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure dimension</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.DeleteMeasureWeight(System.Int32)">
            <summary>
            Deletes measure weight
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.GetMeasureWeightById(System.Int32)">
            <summary>
            Gets a measure weight by identifier
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
            <returns>Measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.GetAllMeasureWeights">
            <summary>
            Gets all measure weights
            </summary>
            <returns>Measure weight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.InsertMeasureWeight(System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Inserts a measure weight
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure weight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Measures.SqlMeasureProvider.UpdateMeasureWeight(System.Int32,System.String,System.String,System.Decimal,System.Int32)">
            <summary>
            Updates the measure weight
            </summary>
            <param name="measureWeightId">Measure weight identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="ratio">The ratio</param>
            <param name="displayOrder">The display order</param>
            <returns>A measure weight</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider">
            <summary>
            Download provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider.GetDownloadById(System.Int32)">
            <summary>
            Gets a download
            </summary>
            <param name="downloadId">Download identifier</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider.DeleteDownload(System.Int32)">
            <summary>
            Deletes a download
            </summary>
            <param name="downloadId">Download identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider.InsertDownload(System.Boolean,System.String,System.Byte[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a download
            </summary>
            <param name="useDownloadUrl">The value indicating whether DownloadURL property should be used</param>
            <param name="downloadUrl">The download URL</param>
            <param name="downloadBinary">The download binary</param>
            <param name="contentType">The content type</param>
            <param name="filename">The filename of the download</param>
            <param name="extension">The extension</param>
            <param name="isNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlDownloadProvider.UpdateDownload(System.Int32,System.Boolean,System.String,System.Byte[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates the download
            </summary>
            <param name="downloadId">The download identifier</param>
            <param name="useDownloadUrl">The value indicating whether DownloadURL property should be used</param>
            <param name="downloadUrl">The download URL</param>
            <param name="downloadBinary">The download binary</param>
            <param name="contentType">The content type</param>
            <param name="filename">The filename of the download</param>
            <param name="extension">The extension</param>
            <param name="isNew">A value indicating whether the download is new</param>
            <returns>Download</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider">
            <summary>
            Picture provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.GetPictureById(System.Int32)">
            <summary>
            Gets a picture
            </summary>
            <param name="pictureId">Picture identifier</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.DeletePicture(System.Int32)">
            <summary>
            Deletes a picture
            </summary>
            <param name="pictureId">Picture identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.InsertPicture(System.Byte[],System.String,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="pictureBinary">The picture binary</param>
            <param name="extension">The picture extension</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.UpdatePicture(System.Int32,System.Byte[],System.String,System.Boolean)">
            <summary>
            Updates the picture
            </summary>
            <param name="pictureId">The picture identifier</param>
            <param name="pictureBinary">The picture binary</param>
            <param name="extension">The picture extension</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <returns>Picture</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Media.SqlPictureProvider.GetPictures(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of pictures
            </summary>
            <param name="pageIndex">Current page</param>
            <param name="pageSize">Items on each page</param>
            <param name="totalRecords">Output. how many records in results</param>
            <returns>Paged list of pictures</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider">
            <summary>
            Message provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetMessageTemplateById(System.Int32)">
            <summary>
            Gets a message template by template identifier
            </summary>
            <param name="messageTemplateId">Message template identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetAllMessageTemplates">
            <summary>
            Gets all message templates
            </summary>
            <returns>Message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetLocalizedMessageTemplateById(System.Int32)">
            <summary>
            Gets a localized message template by identifier
            </summary>
            <param name="localizedMessageTemplateId">Localized message template identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetLocalizedMessageTemplate(System.String,System.Int32)">
            <summary>
            Gets a localized message template by name and language identifier
            </summary>
            <param name="name">Message template name</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.DeleteLocalizedMessageTemplate(System.Int32)">
            <summary>
            Deletes a localized message template
            </summary>
            <param name="localizedMessageTemplateId">Message template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetAllLocalizedMessageTemplates(System.String)">
            <summary>
            Gets all localized message templates
            </summary>
            <param name="messageTemplateName">Message template name</param>
            <returns>Localized message template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.InsertLocalizedMessageTemplate(System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a localized message template
            </summary>
            <param name="messageTemplateId">The message template identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="bccEmailAddresses">The BCC Email addresses</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="isActive">A value indicating whether the message template is active</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.UpdateLocalizedMessageTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates the localized message template
            </summary>
            <param name="messageTemplateLocalizedId">The localized message template identifier</param>
            <param name="messageTemplateId">The message template identifier</param>
            <param name="languageId">The language identifier</param>
            <param name="bccEmailAddresses">The BCC Email addresses</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="isActive">A value indicating whether the message template is active</param>
            <returns>Localized message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetQueuedEmailById(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
            <returns>Email item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.DeleteQueuedEmail(System.Int32)">
            <summary>
            Deletes a queued email
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetAllQueuedEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="fromEmail">From Email</param>
            <param name="toEmail">To Email</param>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="queuedEmailCount">Email item count. 0 if you want to get all items</param>
            <param name="loadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="maxSendTries">Maximum send tries</param>
            <returns>Email item collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.InsertQueuedEmail(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Inserts a queued email
            </summary>
            <param name="priority">The priority</param>
            <param name="from">From</param>
            <param name="fromName">From name</param>
            <param name="to">To</param>
            <param name="toName">To name</param>
            <param name="cc">Cc</param>
            <param name="bcc">Bcc</param>
            <param name="subject">Subject</param>
            <param name="body">Body</param>
            <param name="createdOn">The date and time of item creation</param>
            <param name="sendTries">The send tries</param>
            <param name="sentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.UpdateQueuedEmail(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Updates a queued email
            </summary>
            <param name="queuedEmailId">Email item identifier</param>
            <param name="priority">The priority</param>
            <param name="from">From</param>
            <param name="fromName">From name</param>
            <param name="to">To</param>
            <param name="toName">To name</param>
            <param name="cc">Cc</param>
            <param name="bcc">Bcc</param>
            <param name="subject">Subject</param>
            <param name="body">Body</param>
            <param name="createdOn">The date and time of item creation</param>
            <param name="sendTries">The send tries</param>
            <param name="sentOn">The sent date and time. Null if email is not sent yet</param>
            <returns>Queued email</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.InsertNewsLetterSubscription(System.Guid,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts the new newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <param name="email">The subscriber email</param>
            <param name="isActive">A value indicating whether subscription is active</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetNewsLetterSubscriptionById(System.Int32)">
            <summary>
            Gets the newsletter subscription by newsletter subscription identifier
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetNewsLetterSubscriptionByGuid(System.Guid)">
            <summary>
            Gets the newsletter subscription by newsletter subscription GUID
            </summary>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetNewsLetterSubscriptionByEmail(System.String)">
            <summary>
            Gets the newsletter subscription by email
            </summary>
            <param name="email">The Email</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.GetAllNewsLetterSubscriptions(System.Boolean)">
            <summary>
            Gets the newsletter subscription collection
            </summary>
            <param name="showHidden">A value indicating whether the not active subscriptions should be loaded</param>
            <returns>NewsLetterSubscription entity collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.UpdateNewsLetterSubscription(System.Int32,System.Guid,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
            <param name="newsLetterSubscriptionGuid">The newsletter subscription GUID</param>
            <param name="email">The subscriber email</param>
            <param name="isActive">A value indicating whether subscription is active</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>NewsLetterSubscription entity</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Messages.SqlMessageProvider.DeleteNewsLetterSubscription(System.Int32)">
            <summary>
            Deletes the newsletter subscription
            </summary>
            <param name="newsLetterSubscriptionId">The newsletter subscription identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper">
            <summary>
            Data helper class
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetMasterConnectionString(System.String)">
            <summary>
            Gets connection string to master database
            </summary>
            <param name="connetionString">A connection string</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDatabaseName(System.String)">
            <summary>
            Gets database name from connection string
            </summary>
            <param name="connetionString">A connection string</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.CreateConnection(System.String)">
            <summary>
            Creates a connection to a data soruce
            </summary>
            <param name="connectionString">Connection string</param>
            <returns>Database instance</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetBoolean(System.Data.IDataReader,System.String)">
            <summary>
            Gets a boolean value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A boolean value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetBytes(System.Data.IDataReader,System.String)">
            <summary>
            Gets a byte array of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A byte array</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetUtcDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets an UTC datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time if exists; otherwise, null</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableUtcDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable UTC datetime value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A date time if exists; otherwise, null</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDecimal(System.Data.IDataReader,System.String)">
            <summary>
            Gets a decimal value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A decimal value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetDouble(System.Data.IDataReader,System.String)">
            <summary>
            Gets a double value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A double value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetGuid(System.Data.IDataReader,System.String)">
            <summary>
            Gets a GUID value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A GUID value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetInt(System.Data.IDataReader,System.String)">
            <summary>
            Gets an integer value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>An integer value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetNullableInt(System.Data.IDataReader,System.String)">
            <summary>
            Gets a nullable integer value of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A nullable integer value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.NopSqlDataHelper.GetString(System.Data.IDataReader,System.String)">
            <summary>
            Gets a string of a data reader by a column name
            </summary>
            <param name="rdr">Data reader</param>
            <param name="columnName">Column name</param>
            <returns>A string value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider">
            <summary>
            Order provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderById(System.Int32)">
            <summary>
            Gets an order
            </summary>
            <param name="orderId">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderByGuid(System.Guid)">
            <summary>
            Gets an order
            </summary>
            <param name="orderGuid">The order identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.SearchOrders(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search orders
            </summary>
            <param name="startTime">Order start time; null to load all orders</param>
            <param name="endTime">Order end time; null to load all orders</param>
            <param name="customerEmail">Customer email</param>
            <param name="orderStatusId">Order status identifier; null to load all orders</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all orders</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all orders</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.OrderProductVariantReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get order product variant sales report
            </summary>
            <param name="startTime">Order start time; null to load all</param>
            <param name="endTime">Order end time; null to load all</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="billingCountryId">Billing country identifier; null to load all records</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.BestSellersReport(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the bests sellers report
            </summary>
            <param name="lastDays">Last number of days</param>
            <param name="recordsToReturn">Number of products to return</param>
            <param name="orderBy">1 - order by total count, 2 - Order by total amount</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.OrderAverageReport(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Get order average report
            </summary>
            <param name="orderStatusId">Order status identifier</param>
            <param name="startTime">Start date</param>
            <param name="endTime">End date</param>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrdersByCustomerId(System.Int32)">
            <summary>
            Gets all orders by customer identifier
            </summary>
            <param name="customerId">Customer identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderByAuthorizationTransactionIdAndPaymentMethodId(System.String,System.Int32)">
            <summary>
            Gets an order by authorization transaction identifier
            </summary>
            <param name="authorizationTransactionId">Authorization transaction identifier</param>
            <param name="paymentMethodId">Payment method identifier</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrdersByAffiliateId(System.Int32)">
            <summary>
            Gets all orders by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertOrder(System.Guid,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts an order
            </summary>
            <param name="orderGuid">The order identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="customerLanguageId">The customer language identifier</param>
            <param name="customerTaxDisplayTypeId">The customer tax display type identifier</param>
            <param name="customerIP">The customer IP address</param>
            <param name="orderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="orderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="orderShippingInclTax">The order shipping (incl tax)</param>
            <param name="orderShippingExclTax">The order shipping (excl tax)</param>
            <param name="paymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="paymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="orderTax">The order tax</param>
            <param name="orderTotal">The order total</param>
            <param name="orderDiscount">The order discount</param>
            <param name="orderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="orderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="orderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="orderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="orderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="orderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="orderDiscountInCustomerCurrency">The order discount (customer currency)</param>
            <param name="checkoutAttributeDescription">The checkout attribute description</param>
            <param name="checkoutAttributesXml">The checkout attributes in XML format</param>
            <param name="customerCurrencyCode">The customer currency code</param>
            <param name="orderWeight">The order weight</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="orderStatusId">The order status identifier</param>
            <param name="allowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="cardType">The card type</param>
            <param name="cardName">The card name</param>
            <param name="cardNumber">The card number</param>
            <param name="maskedCreditCardNumber">The masked credit card number</param>
            <param name="cardCvv2">The card CVV2</param>
            <param name="cardExpirationMonth">The card expiration month</param>
            <param name="cardExpirationYear">The card expiration year</param>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="paymentMethodName">The payment method name</param>
            <param name="authorizationTransactionId">The authorization transaction identifier</param>
            <param name="authorizationTransactionCode">The authorization transaction code</param>
            <param name="authorizationTransactionResult">The authorization transaction result</param>
            <param name="captureTransactionId">The capture transaction identifier</param>
            <param name="captureTransactionResult">The capture transaction result</param>
            <param name="subscriptionTransactionId">The subscription transaction identifier</param>
            <param name="purchaseOrderNumber">The purchase order number</param>
            <param name="paymentStatusId">The payment status identifier</param>
            <param name="paidDate">The paid date and time</param>
            <param name="billingFirstName">The billing first name</param>
            <param name="billingLastName">The billing last name</param>
            <param name="billingPhoneNumber">he billing phone number</param>
            <param name="billingEmail">The billing email</param>
            <param name="billingFaxNumber">The billing fax number</param>
            <param name="billingCompany">The billing company</param>
            <param name="billingAddress1">The billing address 1</param>
            <param name="billingAddress2">The billing address 2</param>
            <param name="billingCity">The billing city</param>
            <param name="billingStateProvince">The billing state/province</param>
            <param name="billingStateProvinceId">The billing state/province identifier</param>
            <param name="billingZipPostalCode">The billing zip/postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="billingCountryId">The billing country identifier</param>
            <param name="shippingStatusId">The shipping status identifier</param>
            <param name="shippingFirstName">The shipping first name</param>
            <param name="shippingLastName">The shipping last name</param>
            <param name="shippingPhoneNumber">The shipping phone number</param>
            <param name="shippingEmail">The shipping email</param>
            <param name="shippingFaxNumber">The shipping fax number</param>
            <param name="shippingCompany">The shipping  company</param>
            <param name="shippingAddress1">The shipping address 1</param>
            <param name="shippingAddress2">The shipping address 2</param>
            <param name="shippingCity">The shipping city</param>
            <param name="shippingStateProvince">The shipping state/province</param>
            <param name="shippingStateProvinceId">The shipping state/province identifier</param>
            <param name="shippingZipPostalCode">The shipping zip/postal code</param>
            <param name="shippingCountry">The shipping country</param>
            <param name="shippingCountryId">The shipping country identifier</param>
            <param name="shippingMethod">The shipping method</param>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="shippedDate">The shipped date and time</param>
            <param name="deliveryDate">The delivery date and time</param>
            <param name="trackingNumber">The tracking number of order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateOrder(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Decimal,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the order
            </summary>
            <param name="orderId">The order identifier</param>
            <param name="orderGuid">The order identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="customerLanguageId">The customer language identifier</param>
            <param name="customerTaxDisplayTypeId">The customer tax display type identifier</param>
            <param name="customerIP">The customer IP address</param>
            <param name="orderSubtotalInclTax">The order subtotal (incl tax)</param>
            <param name="orderSubtotalExclTax">The order subtotal (excl tax)</param>
            <param name="orderShippingInclTax">The order shipping (incl tax)</param>
            <param name="orderShippingExclTax">The order shipping (excl tax)</param>
            <param name="paymentMethodAdditionalFeeInclTax">The payment method additional fee (incl tax)</param>
            <param name="paymentMethodAdditionalFeeExclTax">The payment method additional fee (excl tax)</param>
            <param name="orderTax">The order tax</param>
            <param name="orderTotal">The order total</param>
            <param name="orderDiscount">The order discount</param>
            <param name="orderSubtotalInclTaxInCustomerCurrency">The order subtotal incl tax (customer currency)</param>
            <param name="orderSubtotalExclTaxInCustomerCurrency">The order subtotal excl tax (customer currency)</param>
            <param name="orderShippingInclTaxInCustomerCurrency">The order shipping incl tax (customer currency)</param>
            <param name="orderShippingExclTaxInCustomerCurrency">The order shipping excl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeInclTaxInCustomerCurrency">The payment method additional fee incl tax (customer currency)</param>
            <param name="paymentMethodAdditionalFeeExclTaxInCustomerCurrency">The payment method additional fee excl tax (customer currency)</param>
            <param name="orderTaxInCustomerCurrency">The order tax (customer currency)</param>
            <param name="orderTotalInCustomerCurrency">The order total (customer currency)</param>
            <param name="orderDiscountInCustomerCurrency">The order discount (customer currency)</param>
            <param name="checkoutAttributeDescription">The checkout attribute description</param>
            <param name="checkoutAttributesXml">The checkout attributes in XML format</param>
            <param name="customerCurrencyCode">The customer currency code</param>
            <param name="orderWeight">The order weight</param>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="orderStatusId">The order status identifier</param>
            <param name="allowStoringCreditCardNumber">The value indicating whether storing of credit card number is allowed</param>
            <param name="cardType">The card type</param>
            <param name="cardName">The card name</param>
            <param name="cardNumber">The card number</param>
            <param name="maskedCreditCardNumber">The masked credit card number</param>
            <param name="cardCvv2">The card CVV2</param>
            <param name="cardExpirationMonth">The card expiration month</param>
            <param name="cardExpirationYear">The card expiration year</param>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="paymentMethodName">The payment method name</param>
            <param name="authorizationTransactionId">The authorization transaction identifier</param>
            <param name="authorizationTransactionCode">The authorization transaction code</param>
            <param name="authorizationTransactionResult">The authorization transaction result</param>
            <param name="captureTransactionId">The capture transaction identifier</param>
            <param name="captureTransactionResult">The capture transaction result</param>
            <param name="subscriptionTransactionId">The subscription transaction identifier</param>
            <param name="purchaseOrderNumber">The purchase order number</param>
            <param name="paymentStatusId">The payment status identifier</param>
            <param name="paidDate">The paid date and time</param>
            <param name="billingFirstName">The billing first name</param>
            <param name="billingLastName">The billing last name</param>
            <param name="billingPhoneNumber">he billing phone number</param>
            <param name="billingEmail">The billing email</param>
            <param name="billingFaxNumber">The billing fax number</param>
            <param name="billingCompany">The billing company</param>
            <param name="billingAddress1">The billing address 1</param>
            <param name="billingAddress2">The billing address 2</param>
            <param name="billingCity">The billing city</param>
            <param name="billingStateProvince">The billing state/province</param>
            <param name="billingStateProvinceId">The billing state/province identifier</param>
            <param name="billingZipPostalCode">The billing zip/postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="billingCountryId">The billing country identifier</param>
            <param name="shippingStatusId">The shipping status identifier</param>
            <param name="shippingFirstName">The shipping first name</param>
            <param name="shippingLastName">The shipping last name</param>
            <param name="shippingPhoneNumber">The shipping phone number</param>
            <param name="shippingEmail">The shipping email</param>
            <param name="shippingFaxNumber">The shipping fax number</param>
            <param name="shippingCompany">The shipping  company</param>
            <param name="shippingAddress1">The shipping address 1</param>
            <param name="shippingAddress2">The shipping address 2</param>
            <param name="shippingCity">The shipping city</param>
            <param name="shippingStateProvince">The shipping state/province</param>
            <param name="shippingStateProvinceId">The shipping state/province identifier</param>
            <param name="shippingZipPostalCode">The shipping zip/postal code</param>
            <param name="shippingCountry">The shipping country</param>
            <param name="shippingCountryId">The shipping country identifier</param>
            <param name="shippingMethod">The shipping method</param>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="shippedDate">The shipped date and time</param>
            <param name="deliveryDate">The delivery date and time</param>
            <param name="trackingNumber">The tracking number of order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of order creation</param>
            <returns>Order</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderNoteById(System.Int32)">
            <summary>
            Gets an order note
            </summary>
            <param name="orderNoteId">Order note identifier</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderNoteByOrderId(System.Int32,System.Boolean)">
            <summary>
            Gets an order notes by order identifier
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="showHidden">A value indicating whether all orders should be loaded</param>
            <returns>Order note collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteOrderNote(System.Int32)">
            <summary>
            Deletes an order note
            </summary>
            <param name="orderNoteId">Order note identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertOrderNote(System.Int32,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts an order note
            </summary>
            <param name="orderId">The order identifier</param>
            <param name="note">The note</param>
            <param name="displayToCustomer">A value indicating whether the customer can see a note</param>
            <param name="createdOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateOrderNote(System.Int32,System.Int32,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the order note
            </summary>
            <param name="orderNoteId">The order note identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="note">The note</param>
            <param name="displayToCustomer">A value indicating whether the customer can see a note</param>
            <param name="createdOn">The date and time of order note creation</param>
            <returns>Order note</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderProductVariantById(System.Int32)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="orderProductVariantId">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteOrderProductVariant(System.Int32)">
            <summary>
            Delete an order product variant
            </summary>
            <param name="orderProductVariantId">Order product variant identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderProductVariantByGuid(System.Guid)">
            <summary>
            Gets an order product variant
            </summary>
            <param name="orderProductVariantGuid">Order product variant identifier</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetAllOrderProductVariants(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets all order product variants
            </summary>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="startTime">Order start time; null to load all records</param>
            <param name="endTime">Order end time; null to load all records</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="loadDownloableProductsOnly">Value indicating whether to load downloadable products only</param>
            <returns>Order collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertOrderProductVariant(System.Guid,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts a order product variant
            </summary>
            <param name="orderProductVariantGuid">The order product variant identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="unitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="priceInclTax">The price in primary store currency (incl tax)</param>
            <param name="priceExclTax">The price in primary store currency (excl tax)</param>
            <param name="unitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="priceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="priceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="attributeDescription">The attribute description</param>
            <param name="attributesXml">The attribute description in XML format</param>
            <param name="quantity">The quantity</param>
            <param name="discountAmountInclTax">The discount amount (incl tax)</param>
            <param name="discountAmountExclTax">The discount amount (excl tax)</param>
            <param name="downloadCount">The download count</param>
            <param name="isDownloadActivated">The value indicating whether download is activated</param>
            <param name="licenseDownloadId">A license download identifier (in case this is a downloadable product)</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateOrderProductVariant(System.Int32,System.Guid,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.String,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Updates the order product variant
            </summary>
            <param name="orderProductVariantId">The order product variant identifier</param>
            <param name="orderProductVariantGuid">The order product variant identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="unitPriceInclTax">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTax">The unit price in primary store currency (excl tax)</param>
            <param name="priceInclTax">The price in primary store currency (incl tax)</param>
            <param name="priceExclTax">The price in primary store currency (excl tax)</param>
            <param name="unitPriceInclTaxInCustomerCurrency">The unit price in primary store currency (incl tax)</param>
            <param name="unitPriceExclTaxInCustomerCurrency">The unit price in customer currency (excl tax)</param>
            <param name="priceInclTaxInCustomerCurrency">The price in primary store currency (incl tax)</param>
            <param name="priceExclTaxInCustomerCurrency">The price in customer currency (excl tax)</param>
            <param name="attributeDescription">The attribute description</param>
            <param name="attributesXml">The attribute description in XML format</param>
            <param name="quantity">The quantity</param>
            <param name="discountAmountInclTax">The discount amount (incl tax)</param>
            <param name="discountAmountExclTax">The discount amount (excl tax)</param>
            <param name="downloadCount">The download count</param>
            <param name="isDownloadActivated">The value indicating whether download is activated</param>
            <param name="licenseDownloadId">A license download identifier (in case this is a downloadable product)</param>
            <returns>Order product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderStatusById(System.Int32)">
            <summary>
            Gets an order status by Id
            </summary>
            <param name="orderStatusId">Order status identifier</param>
            <returns>Order status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetAllOrderStatuses">
            <summary>
            Gets all order statuses
            </summary>
            <returns>Order status collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetOrderReport(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets an order report
            </summary>
            <param name="orderStatusId">Order status identifier; null to load all orders</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all orders</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all orders</param>
            <returns>IdataReader</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetRecurringPaymentById(System.Int32)">
            <summary>
            Gets a recurring payment
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertRecurringPayment(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Inserts a recurring payment
            </summary>
            <param name="initialOrderId">The initial order identifier</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="startDate">The start date</param>
            <param name="isActive">The value indicating whether the payment is active</param>
            <param name="deleted">The value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateRecurringPayment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Updates the recurring payment
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="initialOrderId">The initial order identifier</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="startDate">The start date</param>
            <param name="isActive">The value indicating whether the payment is active</param>
            <param name="deleted">The value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.SearchRecurringPayments(System.Boolean,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Search recurring payments
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="customerId">The customer identifier; 0 to load all records</param>
            <param name="initialOrderId">The initial order identifier; 0 to load all records</param>
            <param name="initialOrderStatusId">Initial order status identifier; null to load all records</param>
            <returns>Recurring payment collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteRecurringPaymentHistory(System.Int32)">
            <summary>
            Deletes a recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">Recurring payment history identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetRecurringPaymentHistoryById(System.Int32)">
            <summary>
            Gets a recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">The recurring payment history identifier</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertRecurringPaymentHistory(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a recurring payment history
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateRecurringPaymentHistory(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the recurring payment history
            </summary>
            <param name="recurringPaymentHistoryId">The recurring payment history identifier</param>
            <param name="recurringPaymentId">The recurring payment identifier</param>
            <param name="orderId">The order identifier</param>
            <param name="createdOn">The date and time of payment creation</param>
            <returns>Recurring payment history</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.SearchRecurringPaymentHistory(System.Int32,System.Int32)">
            <summary>
            Search recurring payment history
            </summary>
            <param name="recurringPaymentId">The recurring payment identifier; 0 to load all records</param>
            <param name="orderId">The order identifier; 0 to load all records</param>
            <returns>Recurring payment history collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteGiftCard(System.Int32)">
            <summary>
            Deletes a gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetGiftCardById(System.Int32)">
            <summary>
            Gets a gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <returns>Gift card entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetAllGiftCards(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Gets all gift cards
            </summary>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="startTime">Order start time; null to load all records</param>
            <param name="endTime">Order end time; null to load all records</param>
            <param name="orderStatusId">Order status identifier; null to load all records</param>
            <param name="paymentStatusId">Order payment status identifier; null to load all records</param>
            <param name="shippingStatusId">Order shipping status identifier; null to load all records</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated; null to load all records</param>
            <param name="giftCardCouponCode">Gift card coupon code; null or string.empty to load all records</param>
            <returns>Gift cards</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertGiftCard(System.Int32,System.Decimal,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Inserts a gift card
            </summary>
            <param name="purchasedOrderProductVariantId">Purchased order product variant identifier</param>
            <param name="amount">Amount</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated</param>
            <param name="giftCardCouponCode">Gift card coupon code</param>
            <param name="recipientName">Recipient name</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender email</param>
            <param name="message">Message</param>
            <param name="isRecipientNotified">Value indicating whether recipient is notified</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateGiftCard(System.Int32,System.Int32,System.Decimal,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Updates the gift card
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <param name="purchasedOrderProductVariantId">Purchased order product variant identifier</param>
            <param name="amount">Amount</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated</param>
            <param name="giftCardCouponCode">Gift card coupon code</param>
            <param name="recipientName">Recipient name</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender email</param>
            <param name="message">Message</param>
            <param name="isRecipientNotified">Value indicating whether recipient is notified</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteGiftCardUsageHistory(System.Int32)">
            <summary>
            Deletes a gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetGiftCardUsageHistoryById(System.Int32)">
            <summary>
            Gets a gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetAllGiftCardUsageHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all gift card usage history entries
            </summary>
            <param name="giftCardId">Gift card identifier identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="orderId">Order identifier; null to load all records</param>
            <returns>Gift card usage history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertGiftCardUsageHistory(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
            Inserts a gift card usage history entry
            </summary>
            <param name="giftCardId">Gift card identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="usedValue">Used value</param>
            <param name="usedValueInCustomerCurrency">Used value (customer currency)</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateGiftCardUsageHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
            Updates the gift card usage history entry
            </summary>
            <param name="giftCardUsageHistoryId">Gift card usage history entry identifier</param>
            <param name="giftCardId">Gift card identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="usedValue">Used value</param>
            <param name="usedValueInCustomerCurrency">Used value (customer currency)</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Gift card usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.DeleteRewardPointsHistory(System.Int32)">
            <summary>
            Deletes a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetRewardPointsHistoryById(System.Int32)">
            <summary>
            Gets a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.GetAllRewardPointsHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all reward point history entries
            </summary>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Reward point history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.InsertRewardPointsHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a reward point history entry
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="points">Points redeemed/added</param>
            <param name="pointsBalance">Points balance</param>
            <param name="usedAmount">Used amount</param>
            <param name="usedAmountInCustomerCurrency">Used amount (customer currency)</param>
            <param name="customerCurrencyCode">Customer currency code</param>
            <param name="message">Customer currency code</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlOrderProvider.UpdateRewardPointsHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.String,System.String,System.DateTime)">
            <summary>
            Updates a reward point history entry
            </summary>
            <param name="rewardPointsHistoryId">Reward point history entry identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="points">Points redeemed/added</param>
            <param name="pointsBalance">Points balance</param>
            <param name="usedAmount">Used amount</param>
            <param name="usedAmountInCustomerCurrency">Used amount (customer currency)</param>
            <param name="customerCurrencyCode">Customer currency code</param>
            <param name="message">Customer currency code</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Reward point history entry</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider">
            <summary>
            Shopping cart provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.DeleteExpiredShoppingCartItems(System.DateTime)">
            <summary>
            Deletes expired shopping cart items
            </summary>
            <param name="olderThan">Older than date and time</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.DeleteShoppingCartItem(System.Int32)">
            <summary>
            Deletes a shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.GetShoppingCartByCustomerSessionGuid(System.Int32,System.Guid)">
            <summary>
            Gets a shopping cart by customer session GUID
            </summary>
            <param name="shoppingCartTypeId">Shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <returns>Cart</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.GetShoppingCartItemById(System.Int32)">
            <summary>
            Gets a shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.InsertShoppingCartItem(System.Int32,System.Guid,System.Int32,System.String,System.Decimal,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a shopping cart item
            </summary>
            <param name="shoppingCartTypeId">The shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The product variant attributes</param>
            <param name="customerEnteredPrice">The price enter by a customer</param>
            <param name="quantity">The quantity</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Orders.SqlShoppingCartProvider.UpdateShoppingCartItem(System.Int32,System.Int32,System.Guid,System.Int32,System.String,System.Decimal,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="shoppingCartItemId">The shopping cart item identifier</param>
            <param name="shoppingCartTypeId">The shopping cart type identifier</param>
            <param name="customerSessionGuid">The customer session identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The product variant attributes</param>
            <param name="customerEnteredPrice">The price enter by a customer</param>
            <param name="quantity">The quantity</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Shopping cart item</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider">
            <summary>
            Credit card type provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider.GetCreditCardTypeById(System.Int32)">
            <summary>
            Gets a credit card type
            </summary>
            <param name="creditCardTypeId">Credit card type identifier</param>
            <returns>Credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider.GetAllCreditCardTypes">
            <summary>
            Gets all credit card types
            </summary>
            <returns>Credit card type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider.InsertCreditCardType(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a credit card type
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="displayOrder">The display order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlCreditCardTypeProvider.UpdateCreditCardType(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the credit card type
            </summary>
            <param name="creditCardTypeId">Credit card type identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="displayOrder">The display order</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>A credit card type</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider">
            <summary>
            Payment method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.DeletePaymentMethod(System.Int32)">
            <summary>
            Deletes a payment method
            </summary>
            <param name="paymentMethodId">Payment method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.GetPaymentMethodById(System.Int32)">
            <summary>
            Gets a payment method
            </summary>
            <param name="paymentMethodId">Payment method identifier</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.GetPaymentMethodBySystemKeyword(System.String)">
            <summary>
            Gets a payment method
            </summary>
            <param name="systemKeyword">Payment method system keyword</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.GetAllPaymentMethods(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all payment methods
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="filterByCountryId">The country indentifier</param>
            <returns>Payment method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.InsertPaymentMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a payment method
            </summary>
            <param name="name">The name</param>
            <param name="visibleName">The visible name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="userTemplatePath">The user template path</param>
            <param name="className">The class name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="isActive">A value indicating whether the payment method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.UpdatePaymentMethod(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the payment method
            </summary>
            <param name="paymentMethodId">The payment method identifer</param>
            <param name="name">The name</param>
            <param name="visibleName">The visible name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="userTemplatePath">The user template path</param>
            <param name="className">The class name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="isActive">A value indicating whether the payment method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Payment method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.InsertPaymentMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Inserts payment method country mapping
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.DoesPaymentMethodCountryMappingExist(System.Int32,System.Int32)">
            <summary>
            Checking whether the payment method country mapping exists
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>True if mapping exist, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentMethodProvider.DeletePaymentMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Deletes payment method country mapping
            </summary>
            <param name="paymentMethodId">The payment method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentStatusProvider">
            <summary>
            Payment status provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentStatusProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentStatusProvider.GetPaymentStatusById(System.Int32)">
            <summary>
            Gets a payment status by identifier
            </summary>
            <param name="paymentStatusId">payment status identifier</param>
            <returns>Payment status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Payment.SqlPaymentStatusProvider.GetAllPaymentStatuses">
            <summary>
            Gets all payment statuses
            </summary>
            <returns>Payment status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider">
            <summary>
            Checkout attribute provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.DeleteCheckoutAttribute(System.Int32)">
            <summary>
            Deletes a checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetAllCheckoutAttributes(System.Int32,System.Boolean)">
            <summary>
            Gets all checkout attributes
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="dontLoadShippableProductRequired">Value indicating whether to do not load attributes for checkout attibutes which require shippable products</param>
            <returns>Checkout attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a checkout attribute 
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.InsertCheckoutAttribute(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a checkout attribute
            </summary>
            <param name="name">Name</param>
            <param name="textPrompt">Text prompt</param>
            <param name="isRequired">Value indicating whether the entity is required</param>
            <param name="shippableProductRequired">Value indicating whether shippable products are required in order to display this attribute</param>
            <param name="isTaxExempt">Value indicating whether the attribute is marked as tax exempt</param>
            <param name="taxCategoryId">Tax category identifier</param>
            <param name="attributeControlTypeId">Attribute control type identifier</param>
            <param name="displayOrder">Display order</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.UpdateCheckoutAttribute(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="name">Name</param>
            <param name="textPrompt">Text prompt</param>
            <param name="isRequired">Value indicating whether the entity is required</param>
            <param name="shippableProductRequired">Value indicating whether shippable products are required in order to display this attribute</param>
            <param name="isTaxExempt">Value indicating whether the attribute is marked as tax exempt</param>
            <param name="taxCategoryId">Tax category identifier</param>
            <param name="attributeControlTypeId">Attribute control type identifier</param>
            <param name="displayOrder">Display order</param>
            <returns>Checkout attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized checkout attribute by id
            </summary>
            <param name="checkoutAttributeLocalizedId">Localized checkout attribute identifier</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeLocalizedByCheckoutAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized checkout attribute by checkout attribute id and language id
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.InsertCheckoutAttributeLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized checkout attribute
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="textPrompt">Text prompt</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.UpdateCheckoutAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized checkout attribute
            </summary>
            <param name="checkoutAttributeLocalizedId">Localized checkout attribute identifier</param>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="textPrompt">Text prompt</param>
            <returns>Checkout attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.DeleteCheckoutAttributeValue(System.Int32)">
            <summary>
            Deletes a checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeValues(System.Int32,System.Int32)">
            <summary>
            Gets checkout attribute values by checkout attribute identifier
            </summary>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute value collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeValueById(System.Int32,System.Int32)">
            <summary>
            Gets a checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.InsertCheckoutAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a checkout attribute value
            </summary>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="name">The checkout attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.UpdateCheckoutAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">The checkout attribute value identifier</param>
            <param name="checkoutAttributeId">The checkout attribute identifier</param>
            <param name="name">The checkout attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeValueLocalizedById(System.Int32)">
            <summary>
            Gets localized checkout attribute value by id
            </summary>
            <param name="checkoutAttributeValueLocalizedId">Localized checkout attribute value identifier</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.GetCheckoutAttributeValueLocalizedByCheckoutAttributeValueIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized checkout attribute value by checkout attribute value id and language id
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.InsertCheckoutAttributeValueLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized checkout attribute value
            </summary>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlCheckoutAttributeProvider.UpdateCheckoutAttributeValueLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized checkout attribute value
            </summary>
            <param name="checkoutAttributeValueLocalizedId">Localized checkout attribute value identifier</param>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized checkout attribute value</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider">
            <summary>
            Product attribute provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.DeleteProductAttribute(System.Int32)">
            <summary>
            Deletes a product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetAllProductAttributes(System.Int32)">
            <summary>
            Gets all product attributes
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a product attribute 
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductAttribute(System.String,System.String)">
            <summary>
            Inserts a product attribute
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductAttribute(System.Int32,System.String,System.String)">
            <summary>
            Updates the product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <returns>Product attribute </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized product attribute by id
            </summary>
            <param name="productAttributeLocalizedId">Localized product attribute identifier</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductAttributeLocalizedByProductAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product attribute by product attribute id and language id
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductAttributeLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized product attribute
            </summary>
            <param name="productAttributeLocalizedId">Localized product attribute identifier</param>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.DeleteProductVariantAttribute(System.Int32)">
            <summary>
            Deletes a product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">Product variant attribute mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributesByProductVariantId(System.Int32)">
            <summary>
            Gets product variant attribute mappings by product identifier
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeById(System.Int32)">
            <summary>
            Gets a product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">Product variant attribute mapping identifier</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductVariantAttribute(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a product variant attribute mapping
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productAttributeId">The product attribute identifier</param>
            <param name="textPrompt">The text prompt</param>
            <param name="isRequired">The value indicating whether the entity is required</param>
            <param name="attributeControlTypeId">The attribute control type identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductVariantAttribute(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the product variant attribute mapping
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productAttributeId">The product attribute identifier</param>
            <param name="textPrompt">The text prompt</param>
            <param name="isRequired">The value indicating whether the entity is required</param>
            <param name="attributeControlTypeId">The attribute control type identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.DeleteProductVariantAttributeValue(System.Int32)">
            <summary>
            Deletes a product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeValues(System.Int32,System.Int32)">
            <summary>
            Gets product variant attribute values by product identifier
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeValueById(System.Int32,System.Int32)">
            <summary>
            Gets a product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductVariantAttributeValue(System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Inserts a product variant attribute value
            </summary>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="name">The product variant attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductVariantAttributeValue(System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Updates the product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">The product variant attribute value identifier</param>
            <param name="productVariantAttributeId">The product variant attribute mapping identifier</param>
            <param name="name">The product variant attribute name</param>
            <param name="priceAdjustment">The price adjustment</param>
            <param name="weightAdjustment">The weight adjustment</param>
            <param name="isPreSelected">The value indicating whether the value is pre-selected</param>
            <param name="displayOrder">The display order</param>
            <returns>Product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeValueLocalizedById(System.Int32)">
            <summary>
            Gets localized product variant attribute value by id
            </summary>
            <param name="productVariantAttributeValueLocalizedId">Localized product variant attribute value identifier</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeValueLocalizedByProductVariantAttributeValueIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product variant attribute value by product variant attribute value id and language id
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductVariantAttributeValueLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized product variant attribute value
            </summary>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductVariantAttributeValueLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized product variant attribute value
            </summary>
            <param name="productVariantAttributeValueLocalizedId">Localized product variant attribute value identifier</param>
            <param name="productVariantAttributeValueId">Product variant attribute value identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized product variant attribute value</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.DeleteProductVariantAttributeCombination(System.Int32)">
            <summary>
            Deletes a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetAllProductVariantAttributeCombinations(System.Int32)">
            <summary>
            Gets all product variant attribute combinations
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>Product variant attribute combination collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.GetProductVariantAttributeCombinationById(System.Int32)">
            <summary>
            Gets a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.InsertProductVariantAttributeCombination(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a product variant attribute combination
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The attributes</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Attributes.SqlProductAttributeProvider.UpdateProductVariantAttributeCombination(System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates a product variant attribute combination
            </summary>
            <param name="productVariantAttributeCombinationId">Product variant attribute combination identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="attributesXml">The attributes</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <returns>Product variant attribute combination</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider">
            <summary>
            Product provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProducts(System.Boolean,System.Int32)">
            <summary>
            Gets all products
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProducts(System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="productTagId">Product tag identifier</param>
            <param name="featuredProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="priceMin">Minimum price</param>
            <param name="priceMax">Maximum price</param>
            <param name="keywords">Keywords</param>
            <param name="searchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="filteredSpecs">Filtered product specification identifiers</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="orderBy">Order by</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProducts(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Boolean,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Gets all products
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="seriesId">SeriesID identifier in Catalog</param>
            <param name="productTagId">Product tag identifier</param>
            <param name="featuredProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers). 0 to load featured products only, 1 to load not featured products only, null to load all products</param>
            <param name="priceMin">Minimum price</param>
            <param name="priceMax">Maximum price</param>
            <param name="keywords">Keywords</param>
            <param name="searchDescriptions">A value indicating whether to search in descriptions</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="filteredSpecs">Filtered product specification identifiers</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="orderBy">Order by</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProductsDisplayedOnHomePage(System.Boolean,System.Int32)">
            <summary>
            Gets all products displayed on the home page
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="languageId">Language identifier</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductById(System.Int32,System.Int32)">
            <summary>
            Gets a product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProduct(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product
            </summary>
            <param name="name">The name</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="adminComment">The admin comment</param>
            <param name="productTypeId">The product type identifier</param>
            <param name="templateId">The template identifier</param>
            <param name="showOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="allowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="allowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="ratingSum">The rating sum</param>
            <param name="totalRatingVotes">The total rating votes</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of product creation</param>
            <param name="updatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProduct(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="name">The name</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="adminComment">The admin comment</param>
            <param name="productTypeId">The product type identifier</param>
            <param name="templateId">The template identifier</param>
            <param name="showOnHomePage">A value indicating whether to show the product on the home page</param>
            <param name="metaKeywords">The meta keywords</param>
            <param name="metaDescription">The meta description</param>
            <param name="metaTitle">The meta title</param>
            <param name="seName">The search-engine name</param>
            <param name="allowCustomerReviews">A value indicating whether the product allows customer reviews</param>
            <param name="allowCustomerRatings">A value indicating whether the product allows customer ratings</param>
            <param name="ratingSum">The rating sum</param>
            <param name="totalRatingVotes">The total rating votes</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of product creation</param>
            <param name="updatedOn">The date and time of product update</param>
            <returns>Product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductLocalizedById(System.Int32)">
            <summary>
            Gets localized product by id
            </summary>
            <param name="productLocalizedId">Localized product identifier</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductLocalizedByProductIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product by product id and language id
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProductVariants(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all product variants
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="keywords">Keywords</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Product variants</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductLocalized(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a localized product
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a localized product
            </summary>
            <param name="productLocalizedId">Localized product identifier</param>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="shortDescription">The short description</param>
            <param name="fullDescription">The full description</param>
            <param name="metaKeywords">Meta keywords text</param>
            <param name="metaDescription">Meta descriptions text</param>
            <param name="metaTitle">Metat title text</param>
            <param name="seName">Se Name text</param>
            <returns>Product content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantLocalizedById(System.Int32)">
            <summary>
            Gets localized product variant by id
            </summary>
            <param name="productVariantLocalizedId">Localized product variant identifier</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantLocalizedByProductVariantIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized product variant by product variant id and language id
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductVariantLocalized(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a localized product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductVariantLocalized(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Update a localized product variant
            </summary>
            <param name="productVariantLocalizedId">Localized product variant identifier</param>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <param name="description">Description text</param>
            <returns>Product variant content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductsAlsoPurchasedById(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a list of products purchased by other customers who purchased the above
            </summary>
            <param name="productId">Product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageSize">Page size</param>
            <param name="pageIndex">Page index</param>
            <param name="totalRecords">Total records</param>
            <returns>Product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.SetProductRating(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets a product rating
            </summary>
            <param name="productId">Product identifer</param>
            <param name="customerId">Customer identifer</param>
            <param name="rating">Rating</param>
            <param name="ratedOn">Rating was created on</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetRecentlyAddedProducts(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a recently added products list
            </summary>
            <param name="number">Number of products to load</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Recently added products list</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteProductPicture(System.Int32)">
            <summary>
            Deletes a product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductPictureById(System.Int32)">
            <summary>
            Gets a product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductPicture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a product picture mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="pictureId">Picture identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductPicture(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the product picture mapping
            </summary>
            <param name="productPictureId">Product picture mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="pictureId">Picture identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Product picture mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductPicturesByProductId(System.Int32,System.Int32)">
            <summary>
            Gets all product picture mappings by product identifier
            </summary>
            <param name="productId">Product identifier</param>
            <param name="pictureCount">Number of picture to load</param>
            <returns>Product picture mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductReviewById(System.Int32)">
            <summary>
            Gets a product review
            </summary>
            <param name="productReviewId">Product review identifier</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductReviewByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product review collection by product identifier
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteProductReview(System.Int32)">
            <summary>
            Deletes a product review
            </summary>
            <param name="productReviewId">Product review identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProductReviews(System.Boolean)">
            <summary>
            Gets all product reviews
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product review collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductReview(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Inserts a product review
            </summary>
            <param name="productId">The product identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The review title</param>
            <param name="reviewText">The review text</param>
            <param name="rating">The review rating</param>
            <param name="helpfulYesTotal">Review helpful votes total</param>
            <param name="helpfulNoTotal">Review not helpful votes total</param>
            <param name="isApproved">A value indicating whether the product review is approved</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductReview(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
            Updates the product review
            </summary>
            <param name="productReviewId">The product review identifier</param>
            <param name="productId">The product identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="ipAddress">The IP address</param>
            <param name="title">The review title</param>
            <param name="reviewText">The review text</param>
            <param name="rating">The review rating</param>
            <param name="helpfulYesTotal">Review helpful votes total</param>
            <param name="helpfulNoTotal">Review not helpful votes total</param>
            <param name="isApproved">A value indicating whether the product review is approved</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Product review</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.SetProductRatingHelpfulness(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets a product rating helpfulness
            </summary>
            <param name="productReviewId">Product review identifer</param>
            <param name="customerId">Customer identifer</param>
            <param name="wasHelpful">A value indicating whether the product review was helpful or not </param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantById(System.Int32,System.Int32)">
            <summary>
            Gets a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantBySKU(System.String)">
            <summary>
            Gets a product variant by SKU
            </summary>
            <param name="sku">SKU</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetLowStockProductVariants">
            <summary>
            Get low stock product variants
            </summary>
            <returns>Result</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductVariant(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            Inserts a product variant
            </summary>
            <param name="productId">The product identifier</param>
            <param name="name">The name</param>
            <param name="sku">The SKU</param>
            <param name="description">The description</param>
            <param name="adminComment">The admin comment</param>
            <param name="manufacturerPartNumber">The manufacturer part number</param>
            <param name="isGiftCard">A value indicating whether the product variant is gift card</param>
            <param name="isDownload">A value indicating whether the product variant is download</param>
            <param name="downloadId">The download identifier</param>
            <param name="unlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="maxNumberOfDownloads">The maximum number of downloads</param>
            <param name="downloadExpirationDays">The number of days during customers keeps access to the file</param>
            <param name="downloadActivationType">The download activation type</param>
            <param name="hasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="sampleDownloadId">The sample download identifier</param>
            <param name="hasUserAgreement">A value indicating whether the product variant has a user agreement</param>
            <param name="userAgreementText">The text of user agreement</param>
            <param name="isRecurring">A value indicating whether the product variant is recurring</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="isShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="isFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="additionalShippingCharge">The additional shipping charge</param>
            <param name="isTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="manageInventory">The value indicating how to manage inventory</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="displayStockAvailability">The value indicating whether to display stock availability</param>
            <param name="minStockQuantity">The minimum stock quantity</param>
            <param name="lowStockActivityId">The low stock activity identifier</param>
            <param name="notifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <param name="orderMinimumQuantity">The order minimum quantity</param>
            <param name="orderMaximumQuantity">The order maximum quantity</param>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="disableBuyButton">A value indicating whether to disable buy button</param>
            <param name="price">The price</param>
            <param name="oldPrice">The old price</param>
            <param name="productCost">The product cost</param>
            <param name="customerEntersPrice">The value indicating whether a customer enters price</param>
            <param name="minimumCustomerEnteredPrice">The minimum price entered by a customer</param>
            <param name="maximumCustomerEnteredPrice">The maximum price entered by a customer</param>
            <param name="weight">The weight</param>
            <param name="length">The length</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pictureId">The picture identifier</param>
            <param name="availableStartDateTime">The available start date and time</param>
            <param name="availableEndDateTime">The available end date and time</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="ISBN">The ISBN of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductVariant(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Int32,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            Updates the product variant
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="productId">The product identifier</param>
            <param name="name">The name</param>
            <param name="sku">The SKU</param>
            <param name="description">The description</param>
            <param name="adminComment">The admin comment</param>
            <param name="manufacturerPartNumber">The manufacturer part number</param>
            <param name="isGiftCard">A value indicating whether the product variant is gift card</param>
            <param name="isDownload">A value indicating whether the product variant is download</param>
            <param name="downloadId">The download identifier</param>
            <param name="unlimitedDownloads">The value indicating whether this downloadable product can be downloaded unlimited number of times</param>
            <param name="maxNumberOfDownloads">The maximum number of downloads</param>
            <param name="downloadExpirationDays">The number of days during customers keeps access to the file</param>
            <param name="downloadActivationType">The download activation type</param>
            <param name="hasSampleDownload">The value indicating whether the product variant has a sample download file</param>
            <param name="sampleDownloadId">The sample download identifier</param>
            <param name="hasUserAgreement">A value indicating whether the product variant has a user agreement</param>
            <param name="userAgreementText">The text of user agreement</param>
            <param name="isRecurring">A value indicating whether the product variant is recurring</param>
            <param name="cycleLength">The cycle length</param>
            <param name="cyclePeriod">The cycle period</param>
            <param name="totalCycles">The total cycles</param>
            <param name="isShipEnabled">A value indicating whether the entity is ship enabled</param>
            <param name="isFreeShipping">A value indicating whether the entity is free shipping</param>
            <param name="additionalShippingCharge">The additional shipping charge</param>
            <param name="isTaxExempt">A value indicating whether the product variant is marked as tax exempt</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="manageInventory">The value indicating how to manage inventory</param>
            <param name="stockQuantity">The stock quantity</param>
            <param name="displayStockAvailability">The value indicating whether to display stock availability</param>
            <param name="minStockQuantity">The minimum stock quantity</param>
            <param name="lowStockActivityId">The low stock activity identifier</param>
            <param name="notifyAdminForQuantityBelow">The quantity when admin should be notified</param>
            <param name="allowOutOfStockOrders">The value indicating whether to allow orders when out of stock</param>
            <param name="orderMinimumQuantity">The order minimum quantity</param>
            <param name="orderMaximumQuantity">The order maximum quantity</param>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="disableBuyButton">A value indicating whether to disable buy button</param>
            <param name="price">The price</param>
            <param name="oldPrice">The old price</param>
            <param name="productCost">The product cost</param>
            <param name="customerEntersPrice">The value indicating whether a customer enters price</param>
            <param name="minimumCustomerEnteredPrice">The minimum price entered by a customer</param>
            <param name="maximumCustomerEnteredPrice">The maximum price entered by a customer</param>
            <param name="weight">The weight</param>
            <param name="length">The length</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="pictureId">The picture identifier</param>
            <param name="availableStartDateTime">The available start date and time</param>
            <param name="availableEndDateTime">The available end date and time</param>
            <param name="published">A value indicating whether the entity is published</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <param name="ISBN">The ISBN of instance update</param>
            <returns>Product variant</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantsByProductId(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets product variants by product identifier
            </summary>
            <param name="productId">The product identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantsRestrictedByDiscountId(System.Int32)">
            <summary>
            Gets restricted product variants by discount identifier
            </summary>
            <param name="discountId">The discount identifier</param>
            <returns>Product variant collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteRelatedProduct(System.Int32)">
            <summary>
            Deletes a related product
            </summary>
            <param name="relatedProductId">Related product identifer</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetRelatedProductsByProductId1(System.Int32,System.Boolean)">
            <summary>
            Gets a related product collection by product identifier
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Related product collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetRelatedProductById(System.Int32)">
            <summary>
            Gets a related product
            </summary>
            <param name="relatedProductId">Related product identifer</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertRelatedProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a related product
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="productId2">The second product identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateRelatedProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a related product
            </summary>
            <param name="relatedProductId">The related product identifier</param>
            <param name="productId1">The first product identifier</param>
            <param name="productId2">The second product identifier</param>
            <param name="displayOrder">The display order</param>
            <returns>Related product</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProductTypes">
            <summary>
            Gets all product types
            </summary>
            <returns>Product type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductTypeById(System.Int32)">
            <summary>
            Gets a product type
            </summary>
            <param name="productTypeId">Product type identifier</param>
            <returns>Product type</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantsByPricelistId(System.Int32)">
            <summary>
            Gets all product variants directly assigned to a pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>Product variants</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllPricelists">
            <summary>
            Gets a collection of all available pricelists
            </summary>
            <returns>Collection of pricelists</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetPricelistById(System.Int32)">
            <summary>
            Gets a Pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetPricelistByGuid(System.String)">
            <summary>
            Gets a pricelist
            </summary>
            <param name="pricelistGuid">Pricelist GUID</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertPricelist(System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a pricelist
            </summary>
            <param name="exportModeId">Mode of list creation identifier</param>
            <param name="exportTypeId">Export type identifier</param>
            <param name="affiliateId">Affiliate connected to this pricelist (optional), links will be created with AffiliateId</param>
            <param name="displayName">Displayedname</param>
            <param name="shortName">shortname to identify the pricelist</param>
            <param name="pricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="cacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="formatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="description">Displayed description</param>
            <param name="adminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="header">Headerline of the exported file (plain text)</param>
            <param name="body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="footer">Footer line of the exportet file (plain text)</param>
            <param name="priceAdjustmentTypeId">Type of price adjustment identifier</param>
            <param name="priceAdjustment">price will be adjusted by this amount</param>
            <param name="overrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="createdOn">When was this record originally created</param>
            <param name="updatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdatePricelist(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the Pricelist
            </summary>
            <param name="pricelistId">Unique Identifier</param>
            <param name="exportModeId">Mode of list creation identifier</param>
            <param name="exportTypeId">Export type identifier</param>
            <param name="affiliateId">Affiliate connected to this pricelist (optional), links will be created with AffiliateId</param>
            <param name="displayName">Displayedname</param>
            <param name="shortName">shortname to identify the pricelist</param>
            <param name="pricelistGuid">unique identifier to get pricelist "anonymous"</param>
            <param name="cacheTime">how long will the pricelist be in cached before new creation</param>
            <param name="formatLocalization">what localization will be used (numeric formats, etc.) en-US, de-DE etc.</param>
            <param name="description">Displayed description</param>
            <param name="adminNotes">Admin can put some notes here, not displayed in public</param>
            <param name="header">Headerline of the exported file (plain text)</param>
            <param name="body">template for an exportet productvariant, uses delimiters and replacement strings</param>
            <param name="footer">Footer line of the exportet file (plain text)</param>
            <param name="priceAdjustmentTypeId">Type of price adjustment identifier</param>
            <param name="priceAdjustment">price will be adjusted by this amount</param>
            <param name="overrideIndivAdjustment">Use individual adjustment, if available, or override</param>
            <param name="createdOn">When was this record originally created</param>
            <param name="updatedOn">Last time this record was updated</param>
            <returns>Pricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeletePricelist(System.Int32)">
            <summary>
            Deletes a pricelist
            </summary>
            <param name="pricelistId">Pricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteProductVariantPricelist(System.Int32)">
            <summary>
            Deletes a product variant pricelist
            </summary>
            <param name="productVariantPricelistId">ProductVariantPricelist identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantPricelistById(System.Int32)">
            <summary>
            Gets a ProductVariantPricelist
            </summary>
            <param name="productVariantPricelistId">ProductVariantPricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductVariantPricelist(System.Int32,System.Int32)">
            <summary>
            Gets ProductVariantPricelist
            </summary>
            <param name="productVariantId">ProductVariant identifier</param>
            <param name="pricelistId">Pricelist identifier</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Inserts a ProductVariantPricelist
            </summary>
            <param name="productVariantId">The product variant identifer</param>
            <param name="pricelistId">The pricelist identifier</param>
            <param name="priceAdjustmentTypeId">Price adjustment type identifier</param>
            <param name="priceAdjustment">The price will be adjusted by this amount</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductVariantPricelist(System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            Updates the ProductVariantPricelist
            </summary>
            <param name="productVariantPricelistId">The product variant pricelist identifier</param>
            <param name="productVariantId">The product variant identifer</param>
            <param name="pricelistId">The pricelist identifier</param>
            <param name="priceAdjustmentTypeId">Price adjustment type identifier</param>
            <param name="priceAdjustment">The price will be adjusted by this amount</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>ProductVariantPricelist</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetTierPriceById(System.Int32)">
            <summary>
            Gets a tier price
            </summary>
            <param name="tierPriceId">Tier price identifier</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetTierPricesByProductVariantId(System.Int32)">
            <summary>
            Gets tier prices by product variant identifier
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>Tier price collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteTierPrice(System.Int32)">
            <summary>
            Deletes a tier price
            </summary>
            <param name="tierPriceId">Tier price identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertTierPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a tier price
            </summary>
            <param name="productVariantId">The product variant identifier</param>
            <param name="quantity">The quantity</param>
            <param name="price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateTierPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates the tier price
            </summary>
            <param name="tierPriceId">The tier price identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="quantity">The quantity</param>
            <param name="price">The price</param>
            <returns>Tier price</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteCustomerRoleProductPrice(System.Int32)">
            <summary>
            Deletes a product price by customer role by identifier 
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetCustomerRoleProductPriceById(System.Int32)">
            <summary>
            Gets a product price by customer role by identifier 
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
            <returns>Product price by customer role by identifier </returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllCustomerRoleProductPrices(System.Int32)">
            <summary>
            Gets a collection of product prices by customer role
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <returns>A collection of product prices by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertCustomerRoleProductPrice(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Inserts a product price by customer role
            </summary>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="price">The price</param>
            <returns>A product price by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateCustomerRoleProductPrice(System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Updates a product price by customer role
            </summary>
            <param name="customerRoleProductPriceId">The identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="productVariantId">The product variant identifier</param>
            <param name="price">The price</param>
            <returns>A product price by customer role</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.DeleteProductTag(System.Int32)">
            <summary>
            Deletes a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetAllProductTags(System.Int32,System.String)">
            <summary>
            Gets all product tags
            </summary>
            <param name="productId">Product identifier</param>
            <param name="name">Product tag name or empty string to load all records</param>
            <returns>Product tag collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.GetProductTagById(System.Int32)">
            <summary>
            Gets a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.InsertProductTag(System.String,System.Int32)">
            <summary>
            Inserts a product tag
            </summary>
            <param name="name">Product tag name</param>
            <param name="productCount">Product count</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.UpdateProductTag(System.Int32,System.String,System.Int32)">
            <summary>
            Updates a product tag
            </summary>
            <param name="productTagId">Product tag identifier</param>
            <param name="name">Product tag name</param>
            <param name="productCount">Product count</param>
            <returns>Product tag</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.AddProductTagMapping(System.Int32,System.Int32)">
            <summary>
            Adds a discount tag mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.SqlProductProvider.RemoveProductTagMapping(System.Int32,System.Int32)">
            <summary>
            Removes a discount tag mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="productTagId">Product tag identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider">
            <summary>
            Specification attribute provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a specification attribute
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a specification attribute option
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetProductSpecificationAttributeFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a product specification attribute
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Product specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterFromReader(System.Data.IDataReader)">
            <summary>
            Maps a data reader to a specification attribute option filter
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>Specification attribute option filter</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeById(System.Int32,System.Int32)">
            <summary>
            Gets a specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributes(System.Int32)">
            <summary>
            Gets specification attribute collection
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.DeleteSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.InsertSpecificationAttribute(System.String,System.Int32)">
            <summary>
            Inserts a specification attribute
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.UpdateSpecificationAttribute(System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeLocalizedById(System.Int32)">
            <summary>
            Gets localized specification attribute by id
            </summary>
            <param name="specificationAttributeLocalizedId">Localized specification identifier</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeLocalizedBySpecificationAttributeIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized specification attribute by specification attribute id and language id
            </summary>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.InsertSpecificationAttributeLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized specification attribute
            </summary>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.UpdateSpecificationAttributeLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized specification attribute
            </summary>
            <param name="specificationAttributeLocalizedId">Localized specification attribute identifier</param>
            <param name="specificationAttributeId">Specification attribute identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Specification attribute content</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptions(System.Int32)">
            <summary>
            Gets a specification attribute option collection
            </summary>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionById(System.Int32,System.Int32)">
            <summary>
            Gets a specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionsBySpecificationAttributeId(System.Int32,System.Int32)">
            <summary>
            Gets specification attribute option collection
            </summary>
            <param name="specificationAttributeId">Specification attribute unique identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.InsertSpecificationAttributeOption(System.Int32,System.String,System.Int32)">
            <summary>
            Inserts a specification attribute option
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.UpdateSpecificationAttributeOption(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">Display order</param>
            <returns>Specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.DeleteSpecificationAttributeOption(System.Int32)">
            <summary>
            Deletes a specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">The specification attribute option identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionLocalizedById(System.Int32)">
            <summary>
            Gets localized specification attribute option by id
            </summary>
            <param name="specificationAttributeOptionLocalizedId">Localized specification attribute option identifier</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionLocalizedBySpecificationAttributeOptionIdAndLanguageId(System.Int32,System.Int32)">
            <summary>
            Gets localized specification attribute option by specification attribute option id and language id
            </summary>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.InsertSpecificationAttributeOptionLocalized(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a localized specification attribute option
            </summary>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.UpdateSpecificationAttributeOptionLocalized(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Update a localized specification attribute option
            </summary>
            <param name="specificationAttributeOptionLocalizedId">Localized specification attribute option identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="languageId">Language identifier</param>
            <param name="name">Name text</param>
            <returns>Localized specification attribute option</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.DeleteProductSpecificationAttribute(System.Int32)">
            <summary>
            Deletes a product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeId">Product specification attribute identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetProductSpecificationAttributesByProductId(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="allowFiltering">0 to load attributes with AllowFiltering set to false, 0 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="showOnProductPage">0 to load attributes with ShowOnProductPage set to false, 0 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <returns>Product specification attribute mapping collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetProductSpecificationAttributeById(System.Int32)">
            <summary>
            Gets a product specification attribute mapping 
            </summary>
            <param name="productSpecificationAttributeId">Product specification attribute mapping identifier</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.InsertProductSpecificationAttribute(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a product specification attribute mapping
            </summary>
            <param name="productId">Product identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute on the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.UpdateProductSpecificationAttribute(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Updates the product specification attribute mapping
            </summary>
            <param name="productSpecificationAttributeId">product specification attribute mapping identifier</param>
            <param name="productId">Product identifier</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier</param>
            <param name="allowFiltering">Allow product filtering by this attribute</param>
            <param name="showOnProductPage">Show the attribute onn the product page</param>
            <param name="displayOrder">The display order</param>
            <returns>Product specification attribute mapping</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Products.Specs.SqlSpecificationAttributeProvider.GetSpecificationAttributeOptionFilterByCategoryId(System.Int32,System.Int32)">
            <summary>
            Gets all specification attribute option filter mapping collection by category id
            </summary>
            <param name="categoryId">Product category identifier</param>
            <param name="languageId">Language identifier</param>
            <returns>Specification attribute option filter mapping collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider">
            <summary>
            Affiliate provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider.GetAffiliateById(System.Int32)">
            <summary>
            Gets an affiliate by affiliate identifier
            </summary>
            <param name="affiliateId">Affiliate identifier</param>
            <returns>Affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider.GetAllAffiliates">
            <summary>
            Gets all affiliates
            </summary>
            <returns>Affiliate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider.InsertAffiliate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Inserts an affiliate
            </summary>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="middleName">The middle name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Affiliates.SqlAffiliateProvider.UpdateAffiliate(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the affiliate
            </summary>
            <param name="affiliateId">The affiliate identifier</param>
            <param name="firstName">The first name</param>
            <param name="lastName">The last name</param>
            <param name="middleName">The middle name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="company">The company</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="active">A value indicating whether the entity is active</param>
            <returns>An affiliate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider">
            <summary>
            Campaign provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.GetCampaignById(System.Int32)">
            <summary>
            Gets a campaign by campaign identifier
            </summary>
            <param name="campaignId">Campaign identifier</param>
            <returns>Message template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="campaignId">Campaign identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.GetAllCampaigns">
            <summary>
            Gets all campaigns
            </summary>
            <returns>Campaign collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.InsertCampaign(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Inserts a campaign
            </summary>
            <param name="name">The name</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Campaigns.SqlCampaignProvider.UpdateCampaign(System.Int32,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Updates the campaign
            </summary>
            <param name="campaignId">The campaign identifier</param>
            <param name="name">The name</param>
            <param name="subject">The subject</param>
            <param name="body">The body</param>
            <param name="createdOn">The date and time of instance creation</param>
            <returns>Campaign</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider">
            <summary>
            Discount provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetDiscountById(System.Int32)">
            <summary>
            Gets a discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetAllDiscounts(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Gets all discounts
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="discountTypeId">Discount type identifier; null to load all discount</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.InsertDiscount(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Inserts a discount
            </summary>
            <param name="discountTypeId">The discount type identifier</param>
            <param name="discountRequirementId">The discount requirement identifier</param>
            <param name="discountLimitationId">The discount limitation identifier</param>
            <param name="name">The name</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="discountPercentage">The discount percentage</param>
            <param name="discountAmount">The discount amount</param>
            <param name="startDate">The discount start date and time</param>
            <param name="endDate">The discount end date and time</param>
            <param name="requiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="couponCode">The coupon code</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.UpdateDiscount(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Boolean,System.String,System.Boolean)">
            <summary>
            Updates the discount
            </summary>
            <param name="discountId">Discount identifier</param>
            <param name="discountTypeId">The discount type identifier</param>
            <param name="discountRequirementId">The discount requirement identifier</param>
            <param name="discountLimitationId">The discount limitation identifier</param>
            <param name="name">The name</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="discountPercentage">The discount percentage</param>
            <param name="discountAmount">The discount amount</param>
            <param name="startDate">The discount start date and time</param>
            <param name="endDate">The discount end date and time</param>
            <param name="requiresCouponCode">The value indicating whether discount requires coupon code</param>
            <param name="couponCode">The coupon code</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <returns>Discount</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.AddDiscountToProductVariant(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.RemoveDiscountFromProductVariant(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetDiscountsByProductVariantId(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a product variant
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.AddDiscountToCategory(System.Int32,System.Int32)">
            <summary>
            Adds a discount to a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.RemoveDiscountFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes a discount from a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetDiscountsByCategoryId(System.Int32,System.Boolean)">
            <summary>
            Gets a discount collection of a category
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Discount collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.AddDiscountRestriction(System.Int32,System.Int32)">
            <summary>
            Adds a discount requirement
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.RemoveDiscountRestriction(System.Int32,System.Int32)">
            <summary>
            Removes discount requirement
            </summary>
            <param name="productVariantId">Product variant identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetAllDiscountRequirements">
            <summary>
            Gets all discount requirements
            </summary>
            <returns>Discount requirement collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetAllDiscountTypes">
            <summary>
            Gets all discount types
            </summary>
            <returns>Discount type collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetAllDiscountLimitations">
            <summary>
            Gets all discount limitations
            </summary>
            <returns>Discount limitation collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.DeleteDiscountUsageHistory(System.Int32)">
            <summary>
            Deletes a discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">Discount usage history entry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetDiscountUsageHistoryById(System.Int32)">
            <summary>
            Gets a discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">Discount usage history entry identifier</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.GetAllDiscountUsageHistoryEntries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all discount usage history entries
            </summary>
            <param name="discountId">Discount type identifier; null to load all</param>
            <param name="customerId">Customer identifier; null to load all</param>
            <param name="orderId">Order identifier; null to load all</param>
            <returns>Discount usage history entries</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.InsertDiscountUsageHistory(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Inserts a discount usage history entry
            </summary>
            <param name="discountId">Discount type identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Promo.Discounts.SqlDiscountProvider.UpdateDiscountUsageHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Updates the discount usage history entry
            </summary>
            <param name="discountUsageHistoryId">discount usage history entry identifier</param>
            <param name="discountId">Discount type identifier</param>
            <param name="customerId">Customer identifier</param>
            <param name="orderId">Order identifier</param>
            <param name="createdOn">A date and time of instance creation</param>
            <returns>Discount usage history entry</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider">
            <summary>
            Blacklist provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpAddressFromReader(System.Data.IDataReader)">
            <summary>
            Gets an IP address from a data reader
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>DBBannedIpAddress</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpNetworkFromReader(System.Data.IDataReader)">
            <summary>
            Gets an IP network from a data reader
            </summary>
            <param name="dataReader">IDataReader</param>
            <returns>DBBannedIpNetwork</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. 
            This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpAddressById(System.Int32)">
            <summary>
            Gets an IP address by its identifier
            </summary>
            <param name="bannedIpAddressId">IP Address unique identifier</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpAddressAll">
            <summary>
            Gets all IP addresses
            </summary>
            <returns>IP address collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.InsertBannedIpAddress(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP address
            </summary>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP address</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.UpdateBannedIpAddress(System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP address
            </summary>
            <param name="bannedIpAddressId">IP address unique identifier</param>
            <param name="address">IP address</param>
            <param name="comment">Reason why the IP was banned</param>
            <param name="createdOn">When the record was last updated</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns></returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.DeleteBannedIpAddress(System.Int32)">
            <summary>
            Deletes an IP address
            </summary>
            <param name="bannedIpAddressId">IP address unique identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpNetworkById(System.Int32)">
            <summary>
            Gets an IP network by its Id
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.GetIpNetworkAll">
            <summary>
            Gets all IP networks
            </summary>
            <returns>IP network collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.InsertBannedIpNetwork(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Inserts an IP network
            </summary>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.UpdateBannedIpNetwork(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates an IP network
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
            <param name="startAddress">First IP address in the range</param>
            <param name="endAddress">Last IP address in the range</param>
            <param name="comment">Reason why the IP network was banned</param>
            <param name="ipException">Exceptions in the range</param>
            <param name="createdOn">When the record was inserted</param>
            <param name="updatedOn">When the record was last updated</param>
            <returns>IP network</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlBlacklistProvider.DeleteBannedIpNetwork(System.Int32)">
            <summary>
            Deletes an IP network
            </summary>
            <param name="bannedIpNetworkId">IP network unique identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider">
            <summary>
            ACL provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.DeleteCustomerAction(System.Int32)">
            <summary>
            Deletes a customer action
            </summary>
            <param name="customerActionId">Customer action identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.GetCustomerActionById(System.Int32)">
            <summary>
            Gets a customer action by identifier
            </summary>
            <param name="customerActionId">Customer action identifier</param>
            <returns>Customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.GetAllCustomerActions">
            <summary>
            Gets all customer actions
            </summary>
            <returns>Customer action collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.InsertCustomerAction(System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a customer action
            </summary>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="comment">The comment</param>
            <param name="displayOrder">The display order</param>
            <returns>A customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.UpdateCustomerAction(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the customer action
            </summary>
            <param name="customerActionId">The customer action identifier</param>
            <param name="name">The name</param>
            <param name="systemKeyword">The system keyword</param>
            <param name="comment">The comment</param>
            <param name="displayOrder">The display order</param>
            <returns>A customer action</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.DeleteAcl(System.Int32)">
            <summary>
            Deletes an ACL
            </summary>
            <param name="aclId">ACL identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.GetAclById(System.Int32)">
            <summary>
            Gets an ACL by identifier
            </summary>
            <param name="aclId">ACL identifier</param>
            <returns>ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.GetAllAcl(System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Gets all ACL
            </summary>
            <param name="customerActionId">Customer action identifier; 0 to load all records</param>
            <param name="customerRoleId">Customer role identifier; 0 to load all records</param>
            <param name="allow">Value indicating whether action is allowed; null to load all records</param>
            <returns>ACL collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.InsertAcl(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts an ACL
            </summary>
            <param name="customerActionId">The customer action identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="allow">The value indicating whether action is allowed</param>
            <returns>An ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.UpdateAcl(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates the ACL
            </summary>
            <param name="aclId">The ACL identifier</param>
            <param name="customerActionId">The customer action identifier</param>
            <param name="customerRoleId">The customer role identifier</param>
            <param name="allow">The value indicating whether action is allowed</param>
            <returns>An ACL</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Security.SqlAclProvider.IsActionAllowed(System.Int32,System.String)">
            <summary>
            Indicates whether action is allowed
            </summary>
            <param name="customerId">Customer identifer</param>
            <param name="actionSystemKeyword">Action system keyword</param>
            <returns>Result</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider">
            <summary>
            ShippingByTotal provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.GetById(System.Int32)">
            <summary>
            Get a ShippingByTotal
            </summary>
            <param name="shippingByTotalId">ShippingByTotal identifier</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.DeleteShippingByTotal(System.Int32)">
            <summary>
            Deletes a ShippingByTotal
            </summary>
            <param name="shippingByTotalId">ShippingByTotal identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.GetAll">
            <summary>
            Gets all ShippingByTotals
            </summary>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.InsertShippingByTotal(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByTotal
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.UpdateShippingByTotal(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByTotal
            </summary>
            <param name="shippingByTotalId">The ShippingByTotal identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByTotal</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByTotalProvider.GetAllByShippingMethodId(System.Int32)">
            <summary>
            Gets all ShippingByTotals by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>ShippingByTotal collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider">
            <summary>
            ShippingByWeightAndCountry provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.GetById(System.Int32)">
            <summary>
            Gets a ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">ShippingByWeightAndCountry identifier</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.DeleteShippingByWeightAndCountry(System.Int32)">
            <summary>
            Deletes a ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">ShippingByWeightAndCountry identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.GetAll">
            <summary>
            Gets all ShippingByWeightAndCountrys
            </summary>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.InsertShippingByWeightAndCountry(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeightAndCountry
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.UpdateShippingByWeightAndCountry(System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeightAndCountry
            </summary>
            <param name="shippingByWeightAndCountryId">The ShippingByWeightAndCountry identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeightAndCountry</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightAndCountryProvider.GetAllByShippingMethodIdAndCountryId(System.Int32,System.Int32)">
            <summary>
            Gets all ShippingByWeightAndCountrys by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>ShippingByWeightAndCountry collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider">
            <summary>
            ShippingByWeight provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.GetById(System.Int32)">
            <summary>
            Gets a ShippingByWeight
            </summary>
            <param name="shippingByWeightId">ShippingByWeight identifier</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.DeleteShippingByWeight(System.Int32)">
            <summary>
            Deletes a ShippingByWeight
            </summary>
            <param name="shippingByWeightId">ShippingByWeight identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.GetAll">
            <summary>
            Gets all ShippingByWeights
            </summary>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.InsertShippingByWeight(System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Inserts a ShippingByWeight
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.UpdateShippingByWeight(System.Int32,System.Int32,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Decimal)">
            <summary>
            Updates the ShippingByWeight
            </summary>
            <param name="shippingByWeightId">The ShippingByWeight identifier</param>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="from">The "from" value</param>
            <param name="to">The "to" value</param>
            <param name="usePercentage">A value indicating whether to use percentage</param>
            <param name="shippingChargePercentage">The shipping charge percentage</param>
            <param name="shippingChargeAmount">The shipping charge amount</param>
            <returns>ShippingByWeight</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingByWeightProvider.GetAllByShippingMethodId(System.Int32)">
            <summary>
            Gets all ShippingByWeights by shipping method identifier
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>ShippingByWeight collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider">
            <summary>
            Shipping method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.DeleteShippingMethod(System.Int32)">
            <summary>
            Deletes a shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.GetShippingMethodById(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.GetAllShippingMethods(System.Nullable{System.Int32})">
            <summary>
            Gets all shipping methods
            </summary>
            <param name="filterByCountryId">The country indentifier</param>
            <returns>Shipping method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.InsertShippingMethod(System.String,System.String,System.Int32)">
            <summary>
            Inserts a shipping method
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.UpdateShippingMethod(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Updates the shipping method
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.InsertShippingMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Inserts shipping method country mapping
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.DoesShippingMethodCountryMappingExist(System.Int32,System.Int32)">
            <summary>
            Checking whether the shipping method country mapping exists
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
            <returns>True if mapping exist, otherwise false</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingMethodProvider.DeleteShippingMethodCountryMapping(System.Int32,System.Int32)">
            <summary>
            Deletes shipping method country mapping
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">The country identifier</param>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider">
            <summary>
            Shipping rate computation method provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.DeleteShippingRateComputationMethod(System.Int32)">
            <summary>
            Deletes a shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">Shipping rate computation method identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.GetShippingRateComputationMethodById(System.Int32)">
            <summary>
            Gets a shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">Shipping rate computation method identifier</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.GetAllShippingRateComputationMethods(System.Boolean)">
            <summary>
            Gets all shipping rate computation methods
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.InsertShippingRateComputationMethod(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Inserts a shipping rate computation method
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="isActive">The value indicating whether the method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingRateComputationMethodProvider.UpdateShippingRateComputationMethod(System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Updates the shipping rate computation method
            </summary>
            <param name="shippingRateComputationMethodId">The shipping rate computation method identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="isActive">The value indicating whether the method is active</param>
            <param name="displayOrder">The display order</param>
            <returns>Shipping rate computation method</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingStatusProvider">
            <summary>
            Shipping status provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingStatusProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingStatusProvider.GetShippingStatusById(System.Int32)">
            <summary>
            Gets a shipping status by identifier
            </summary>
            <param name="shippingStatusId">Shipping status identifier</param>
            <returns>Shipping status</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Shipping.SqlShippingStatusProvider.GetAllShippingStatuses">
            <summary>
            Gets all shipping statuses
            </summary>
            <returns>Shipping status collection</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider">
            <summary>
            Tax rate provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.DeleteTaxRate(System.Int32)">
            <summary>
            Deletes a tax rate
            </summary>
            <param name="taxRateId">Tax rate identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.GetTaxRateById(System.Int32)">
            <summary>
            Gets a tax rate
            </summary>
            <param name="taxRateId">Tax rate identifier</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.GetAllTaxRates">
            <summary>
            Gets all tax rates
            </summary>
            <returns>Tax rate collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.InsertTaxRate(System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Inserts a tax rate
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zip">The zip</param>
            <param name="percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxRateProvider.UpdateTaxRate(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal)">
            <summary>
            Updates the tax rate
            </summary>
            <param name="taxRateId">The tax rate identifier</param>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="countryId">The country identifier</param>
            <param name="stateProvinceId">The state/province identifier</param>
            <param name="zip">The zip</param>
            <param name="percentage">The percentage</param>
            <returns>Tax rate</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider">
            <summary>
            Tax category provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.DeleteTaxCategory(System.Int32)">
            <summary>
            Deletes a tax category
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.GetAllTaxCategories">
            <summary>
            Gets all tax categories
            </summary>
            <returns>Tax category collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.GetTaxCategoryById(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="taxCategoryId">Tax category identifier</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.InsertTaxCategory(System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a tax category
            </summary>
            <param name="name">The name</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxCategoryProvider.UpdateTaxCategory(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the tax category
            </summary>
            <param name="taxCategoryId">The tax category identifier</param>
            <param name="name">The name</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Tax category</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider">
            <summary>
            Tax provider provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.DeleteTaxProvider(System.Int32)">
            <summary>
            Deletes a tax provider
            </summary>
            <param name="taxProviderId">Tax provider identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.GetTaxProviderById(System.Int32)">
            <summary>
            Gets a tax provider
            </summary>
            <param name="taxProviderId">Tax provider identifier</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.GetAllTaxProviders">
            <summary>
            Gets all tax providers
            </summary>
            <returns>Shipping rate computation method collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.InsertTaxProvider(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Inserts a tax provider
            </summary>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="displayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Tax.SqlTaxProviderProvider.UpdateTaxProvider(System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Updates the tax provider
            </summary>
            <param name="taxProviderId">The tax provider identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="configureTemplatePath">The configure template path</param>
            <param name="className">The class name</param>
            <param name="displayOrder">The display order</param>
            <returns>Tax provider</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider">
            <summary>
            Template provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.DeleteCategoryTemplate(System.Int32)">
            <summary>
            Deletes a category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetAllCategoryTemplates">
            <summary>
            Gets all category templates
            </summary>
            <returns>Category template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetCategoryTemplateById(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.InsertCategoryTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a category template
            </summary>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.UpdateCategoryTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the category template
            </summary>
            <param name="categoryTemplateId">Category template identifier</param>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>A category template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.DeleteManufacturerTemplate(System.Int32)">
            <summary>
            Deletes a manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetAllManufacturerTemplates">
            <summary>
            Gets all manufacturer templates
            </summary>
            <returns>Manufacturer template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetManufacturerTemplateById(System.Int32)">
            <summary>
            Gets a manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifier</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.InsertManufacturerTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a manufacturer template
            </summary>
            <param name="name">The manufacturer template identifier</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.UpdateManufacturerTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the manufacturer template
            </summary>
            <param name="manufacturerTemplateId">Manufacturer template identifer</param>
            <param name="name">The manufacturer template identifier</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Manufacturer template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.DeleteProductTemplate(System.Int32)">
            <summary>
            Deletes a product template
            </summary>
            <param name="productTemplateId">Product template identifier</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetAllProductTemplates">
            <summary>
            Gets all product templates
            </summary>
            <returns>Product template collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.GetProductTemplateById(System.Int32)">
            <summary>
            Gets a product template
            </summary>
            <param name="productTemplateId">Product template identifier</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.InsertProductTemplate(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a product template
            </summary>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Templates.SqlTemplateProvider.UpdateProductTemplate(System.Int32,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Updates the product template
            </summary>
            <param name="productTemplateId">The product template identifier</param>
            <param name="name">The name</param>
            <param name="templatePath">The template path</param>
            <param name="displayOrder">The display order</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Product template</returns>
        </member>
        <member name="T:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider">
            <summary>
            Warehouse provider for SQL Server
            </summary>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the application's configuration file. This method is not intended to be used directly from your code
            </summary>
            <param name="name">The name of the provider instance to initialize</param>
            <param name="config">A NameValueCollection that contains the names and values of configuration options for the provider.</param>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider.GetAllWarehouses">
            <summary>
            Gets all warehouses
            </summary>
            <returns>Warehouse collection</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider.GetWarehouseById(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="warehouseId">The warehouse identifier</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider.InsertWarehouse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Inserts a warehouse
            </summary>
            <param name="name">The name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
        <member name="M:NopSolutions.NopCommerce.DataAccess.Warehouses.SqlWarehouseProvider.UpdateWarehouse(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Updates the warehouse
            </summary>
            <param name="warehouseId">The warehouse identifier</param>
            <param name="name">The name</param>
            <param name="phoneNumber">The phone number</param>
            <param name="email">The email</param>
            <param name="faxNumber">The fax number</param>
            <param name="address1">The address 1</param>
            <param name="address2">The address 2</param>
            <param name="city">The city</param>
            <param name="stateProvince">The state/province</param>
            <param name="zipPostalCode">The zip/postal code</param>
            <param name="countryId">The country identifier</param>
            <param name="deleted">A value indicating whether the entity has been deleted</param>
            <param name="createdOn">The date and time of instance creation</param>
            <param name="updatedOn">The date and time of instance update</param>
            <returns>Warehouse</returns>
        </member>
    </members>
</doc>
